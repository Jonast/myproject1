-------------------------------------------------------------------------------
Test set: conduitApp.ConduitTest
-------------------------------------------------------------------------------
Tests run: 12, Failures: 12, Errors: 0, Skipped: 0, Time elapsed: 8.183 s <<< FAILURE! - in conduitApp.ConduitTest
testAll[1][1]  Time elapsed: 2.768 s  <<< FAILURE!
org.opentest4j.AssertionFailedError: 
>> classpath:conduitApp/feature/Articles.feature:21
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
classpath:conduitApp/feature/Articles.feature:9
classpath:conduitApp/feature/Articles.feature:10
classpath:conduitApp/feature/Articles.feature:23
classpath:conduitApp/feature/Articles.feature:24
classpath:conduitApp/feature/Articles.feature:25
classpath:conduitApp/feature/Articles.feature:26
classpath:conduitApp/feature/Articles.feature:27

testAll[1][2]  Time elapsed: 3.133 s  <<< FAILURE!
org.opentest4j.AssertionFailedError: 
>> classpath:conduitApp/feature/Articles.feature:30
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
classpath:conduitApp/feature/Articles.feature:9
classpath:conduitApp/feature/Articles.feature:10
classpath:conduitApp/feature/Articles.feature:32
classpath:conduitApp/feature/Articles.feature:33
classpath:conduitApp/feature/Articles.feature:34
classpath:conduitApp/feature/Articles.feature:35
classpath:conduitApp/feature/Articles.feature:36
classpath:conduitApp/feature/Articles.feature:39
classpath:conduitApp/feature/Articles.feature:40
classpath:conduitApp/feature/Articles.feature:41
classpath:conduitApp/feature/Articles.feature:42
classpath:conduitApp/feature/Articles.feature:43
classpath:conduitApp/feature/Articles.feature:46
classpath:conduitApp/feature/Articles.feature:47
classpath:conduitApp/feature/Articles.feature:48
classpath:conduitApp/feature/Articles.feature:50
classpath:conduitApp/feature/Articles.feature:51
classpath:conduitApp/feature/Articles.feature:52
classpath:conduitApp/feature/Articles.feature:53
classpath:conduitApp/feature/Articles.feature:54

testAll[2][1]  Time elapsed: 0.075 s  <<< FAILURE!
org.opentest4j.AssertionFailedError: 
>> classpath:conduitApp/feature/HomePage.feature:8
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:9
classpath:conduitApp/feature/HomePage.feature:10
classpath:conduitApp/feature/HomePage.feature:11
classpath:conduitApp/feature/HomePage.feature:12
classpath:conduitApp/feature/HomePage.feature:13
classpath:conduitApp/feature/HomePage.feature:14
classpath:conduitApp/feature/HomePage.feature:15
classpath:conduitApp/feature/HomePage.feature:16

testAll[2][2]  Time elapsed: 0.046 s  <<< FAILURE!
org.opentest4j.AssertionFailedError: 
>> classpath:conduitApp/feature/HomePage.feature:19
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:20
classpath:conduitApp/feature/HomePage.feature:21
classpath:conduitApp/feature/HomePage.feature:22
classpath:conduitApp/feature/HomePage.feature:23
classpath:conduitApp/feature/HomePage.feature:24
classpath:conduitApp/feature/HomePage.feature:25
classpath:conduitApp/feature/HomePage.feature:26
classpath:conduitApp/feature/HomePage.feature:27
classpath:conduitApp/feature/HomePage.feature:28
classpath:conduitApp/feature/HomePage.feature:29
classpath:conduitApp/feature/HomePage.feature:30
classpath:conduitApp/feature/HomePage.feature:31
classpath:conduitApp/feature/HomePage.feature:32
classpath:conduitApp/feature/HomePage.feature:33

testAll[2][3]  Time elapsed: 0.023 s  <<< FAILURE!
org.opentest4j.AssertionFailedError: 
>> classpath:conduitApp/feature/HomePage.feature:54
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:55
classpath:conduitApp/feature/HomePage.feature:56
classpath:conduitApp/feature/HomePage.feature:57

testAll[2][4]  Time elapsed: 0.233 s  <<< FAILURE!
org.opentest4j.AssertionFailedError: 
>> classpath:conduitApp/feature/HomePage.feature:59
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:60
classpath:conduitApp/feature/HomePage.feature:61
classpath:conduitApp/feature/HomePage.feature:62

testAll[3][1]  Time elapsed: 0.031 s  <<< FAILURE!
org.opentest4j.AssertionFailedError: 
>> classpath:conduitApp/feature/Hooks.feature:19
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Hooks.feature:6
classpath:conduitApp/feature/Hooks.feature:8
classpath:conduitApp/feature/Hooks.feature:20
classpath:conduitApp/feature/Hooks.feature:21

testAll[3][2]  Time elapsed: 0.095 s  <<< FAILURE!
org.opentest4j.AssertionFailedError: 
>> classpath:conduitApp/feature/Hooks.feature:23
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Hooks.feature:6
classpath:conduitApp/feature/Hooks.feature:8
classpath:conduitApp/feature/Hooks.feature:24
classpath:conduitApp/feature/Hooks.feature:25

testAll[4][1]  Time elapsed: 0.023 s  <<< FAILURE!
org.opentest4j.AssertionFailedError: 
>> classpath:conduitApp/feature/SignUp.feature:11
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
classpath:conduitApp/feature/SignUp.feature:7
classpath:conduitApp/feature/SignUp.feature:8
classpath:conduitApp/feature/SignUp.feature:9
classpath:conduitApp/feature/SignUp.feature:12
classpath:conduitApp/feature/SignUp.feature:13
classpath:conduitApp/feature/SignUp.feature:15
classpath:conduitApp/feature/SignUp.feature:25
classpath:conduitApp/feature/SignUp.feature:26
classpath:conduitApp/feature/SignUp.feature:27

testAll[4][2]  Time elapsed: 0.025 s  <<< FAILURE!
org.opentest4j.AssertionFailedError: 
>> classpath:conduitApp/feature/SignUp.feature:60
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
classpath:conduitApp/feature/SignUp.feature:7
classpath:conduitApp/feature/SignUp.feature:8
classpath:conduitApp/feature/SignUp.feature:9
classpath:conduitApp/feature/SignUp.feature:41
classpath:conduitApp/feature/SignUp.feature:42
classpath:conduitApp/feature/SignUp.feature:53
classpath:conduitApp/feature/SignUp.feature:54
classpath:conduitApp/feature/SignUp.feature:55

testAll[4][3]  Time elapsed: 0.142 s  <<< FAILURE!
org.opentest4j.AssertionFailedError: 
>> classpath:conduitApp/feature/SignUp.feature:61
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
classpath:conduitApp/feature/SignUp.feature:7
classpath:conduitApp/feature/SignUp.feature:8
classpath:conduitApp/feature/SignUp.feature:9
classpath:conduitApp/feature/SignUp.feature:41
classpath:conduitApp/feature/SignUp.feature:42
classpath:conduitApp/feature/SignUp.feature:53
classpath:conduitApp/feature/SignUp.feature:54
classpath:conduitApp/feature/SignUp.feature:55

testAll[5][1]  Time elapsed: 0.448 s  <<< FAILURE!
org.opentest4j.AssertionFailedError: 
>> classpath:conduitApp/feature/WorkWithDb.feature:9
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/WorkWithDb.feature:6
classpath:conduitApp/feature/WorkWithDb.feature:10

