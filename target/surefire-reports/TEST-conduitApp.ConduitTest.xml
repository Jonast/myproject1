<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="conduitApp.ConduitTest" time="8.183" tests="12" errors="0" skipped="0" failures="12">
  <properties>
    <property name="gopherProxySet" value="false"/>
    <property name="awt.toolkit" value="sun.lwawt.macosx.LWCToolkit"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="sun.cpu.isalist" value=""/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/Users/jtapiat/Documents/javier/myproject1/target/test-classes:/Users/jtapiat/Documents/javier/myproject1/target/classes:/Users/jtapiat/.m2/repository/com/intuit/karate/karate-junit5/1.1.0/karate-junit5-1.1.0.jar:/Users/jtapiat/.m2/repository/com/intuit/karate/karate-core/1.1.0/karate-core-1.1.0.jar:/Users/jtapiat/.m2/repository/org/graalvm/js/js-scriptengine/21.2.0/js-scriptengine-21.2.0.jar:/Users/jtapiat/.m2/repository/org/graalvm/sdk/graal-sdk/21.2.0/graal-sdk-21.2.0.jar:/Users/jtapiat/.m2/repository/org/graalvm/js/js/21.2.0/js-21.2.0.jar:/Users/jtapiat/.m2/repository/org/graalvm/regex/regex/21.2.0/regex-21.2.0.jar:/Users/jtapiat/.m2/repository/org/graalvm/truffle/truffle-api/21.2.0/truffle-api-21.2.0.jar:/Users/jtapiat/.m2/repository/com/ibm/icu/icu4j/69.1/icu4j-69.1.jar:/Users/jtapiat/.m2/repository/ch/qos/logback/logback-classic/1.2.3/logback-classic-1.2.3.jar:/Users/jtapiat/.m2/repository/ch/qos/logback/logback-core/1.2.3/logback-core-1.2.3.jar:/Users/jtapiat/.m2/repository/org/slf4j/jcl-over-slf4j/1.7.25/jcl-over-slf4j-1.7.25.jar:/Users/jtapiat/.m2/repository/com/jayway/jsonpath/json-path/2.6.0/json-path-2.6.0.jar:/Users/jtapiat/.m2/repository/net/minidev/json-smart/2.4.7/json-smart-2.4.7.jar:/Users/jtapiat/.m2/repository/net/minidev/accessors-smart/2.4.7/accessors-smart-2.4.7.jar:/Users/jtapiat/.m2/repository/org/ow2/asm/asm/9.1/asm-9.1.jar:/Users/jtapiat/.m2/repository/info/cukes/cucumber-java/1.2.5/cucumber-java-1.2.5.jar:/Users/jtapiat/.m2/repository/info/cukes/cucumber-core/1.2.5/cucumber-core-1.2.5.jar:/Users/jtapiat/.m2/repository/org/yaml/snakeyaml/1.29/snakeyaml-1.29.jar:/Users/jtapiat/.m2/repository/de/siegmar/fastcsv/2.0.0/fastcsv-2.0.0.jar:/Users/jtapiat/.m2/repository/info/picocli/picocli/4.6.1/picocli-4.6.1.jar:/Users/jtapiat/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.7.2/junit-jupiter-api-5.7.2.jar:/Users/jtapiat/.m2/repository/org/apiguardian/apiguardian-api/1.1.0/apiguardian-api-1.1.0.jar:/Users/jtapiat/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/Users/jtapiat/.m2/repository/org/junit/platform/junit-platform-commons/1.7.2/junit-platform-commons-1.7.2.jar:/Users/jtapiat/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.7.2/junit-jupiter-engine-5.7.2.jar:/Users/jtapiat/.m2/repository/org/junit/platform/junit-platform-engine/1.7.2/junit-platform-engine-1.7.2.jar:/Users/jtapiat/.m2/repository/com/github/javafaker/javafaker/1.0.2/javafaker-1.0.2.jar:/Users/jtapiat/.m2/repository/org/apache/commons/commons-lang3/3.5/commons-lang3-3.5.jar:/Users/jtapiat/.m2/repository/org/yaml/snakeyaml/1.23/snakeyaml-1.23-android.jar:/Users/jtapiat/.m2/repository/com/github/mifmif/generex/1.0.2/generex-1.0.2.jar:/Users/jtapiat/.m2/repository/dk/brics/automaton/automaton/1.11-8/automaton-1.11-8.jar:/Users/jtapiat/.m2/repository/net/masterthought/cucumber-reporting/5.6.1/cucumber-reporting-5.6.1.jar:/Users/jtapiat/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.12.1/jackson-databind-2.12.1.jar:/Users/jtapiat/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.12.1/jackson-annotations-2.12.1.jar:/Users/jtapiat/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.12.1/jackson-core-2.12.1.jar:/Users/jtapiat/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.12.1/jackson-datatype-jsr310-2.12.1.jar:/Users/jtapiat/.m2/repository/org/apache/velocity/velocity-engine-core/2.3/velocity-engine-core-2.3.jar:/Users/jtapiat/.m2/repository/org/slf4j/slf4j-api/1.7.30/slf4j-api-1.7.30.jar:/Users/jtapiat/.m2/repository/commons-collections/commons-collections/3.2.2/commons-collections-3.2.2.jar:/Users/jtapiat/.m2/repository/joda-time/joda-time/2.10.10/joda-time-2.10.10.jar:/Users/jtapiat/.m2/repository/commons-io/commons-io/2.7/commons-io-2.7.jar:/Users/jtapiat/.m2/repository/org/codehaus/plexus/plexus-utils/3.3.0/plexus-utils-3.3.0.jar:/Users/jtapiat/.m2/repository/org/jsoup/jsoup/1.14.2/jsoup-1.14.2.jar:/Users/jtapiat/.m2/repository/com/google/guava/guava/30.1.1-jre/guava-30.1.1-jre.jar:/Users/jtapiat/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/Users/jtapiat/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/Users/jtapiat/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/Users/jtapiat/.m2/repository/org/checkerframework/checker-qual/3.8.0/checker-qual-3.8.0.jar:/Users/jtapiat/.m2/repository/com/google/errorprone/error_prone_annotations/2.5.1/error_prone_annotations-2.5.1.jar:/Users/jtapiat/.m2/repository/com/google/j2objc/j2objc-annotations/1.3/j2objc-annotations-1.3.jar:/Users/jtapiat/.m2/repository/com/googlecode/owasp-java-html-sanitizer/owasp-java-html-sanitizer/20211018.2/owasp-java-html-sanitizer-20211018.2.jar:/Users/jtapiat/.m2/repository/commons-configuration/commons-configuration/1.10/commons-configuration-1.10.jar:/Users/jtapiat/.m2/repository/commons-lang/commons-lang/2.6/commons-lang-2.6.jar:/Users/jtapiat/.m2/repository/commons-logging/commons-logging/1.1.1/commons-logging-1.1.1.jar:/Users/jtapiat/.m2/repository/com/microsoft/sqlserver/mssql-jdbc/11.2.3.jre17/mssql-jdbc-11.2.3.jre17.jar:/Users/jtapiat/.m2/repository/mysql/mysql-connector-java/8.0.28/mysql-connector-java-8.0.28.jar:/Users/jtapiat/.m2/repository/com/google/protobuf/protobuf-java/3.11.4/protobuf-java-3.11.4.jar:"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="user.timezone" value=""/>
    <property name="user.country.format" value="CL"/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="os.name" value="Mac OS X"/>
    <property name="user.country" value="419"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.boot.library.path" value="/Library/Java/JavaVirtualMachines/jdk1.8.0_331.jdk/Contents/Home/jre/lib"/>
    <property name="sun.java.command" value="/Users/jtapiat/Documents/javier/myproject1/target/surefire/surefirebooter5143978847108891937.jar /Users/jtapiat/Documents/javier/myproject1/target/surefire 2024-01-10T21-03-24_597-jvmRun1 surefire8273327540116038505tmp surefire_01141406135708286037tmp"/>
    <property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="surefire.test.class.path" value="/Users/jtapiat/Documents/javier/myproject1/target/test-classes:/Users/jtapiat/Documents/javier/myproject1/target/classes:/Users/jtapiat/.m2/repository/com/intuit/karate/karate-junit5/1.1.0/karate-junit5-1.1.0.jar:/Users/jtapiat/.m2/repository/com/intuit/karate/karate-core/1.1.0/karate-core-1.1.0.jar:/Users/jtapiat/.m2/repository/org/graalvm/js/js-scriptengine/21.2.0/js-scriptengine-21.2.0.jar:/Users/jtapiat/.m2/repository/org/graalvm/sdk/graal-sdk/21.2.0/graal-sdk-21.2.0.jar:/Users/jtapiat/.m2/repository/org/graalvm/js/js/21.2.0/js-21.2.0.jar:/Users/jtapiat/.m2/repository/org/graalvm/regex/regex/21.2.0/regex-21.2.0.jar:/Users/jtapiat/.m2/repository/org/graalvm/truffle/truffle-api/21.2.0/truffle-api-21.2.0.jar:/Users/jtapiat/.m2/repository/com/ibm/icu/icu4j/69.1/icu4j-69.1.jar:/Users/jtapiat/.m2/repository/ch/qos/logback/logback-classic/1.2.3/logback-classic-1.2.3.jar:/Users/jtapiat/.m2/repository/ch/qos/logback/logback-core/1.2.3/logback-core-1.2.3.jar:/Users/jtapiat/.m2/repository/org/slf4j/jcl-over-slf4j/1.7.25/jcl-over-slf4j-1.7.25.jar:/Users/jtapiat/.m2/repository/com/jayway/jsonpath/json-path/2.6.0/json-path-2.6.0.jar:/Users/jtapiat/.m2/repository/net/minidev/json-smart/2.4.7/json-smart-2.4.7.jar:/Users/jtapiat/.m2/repository/net/minidev/accessors-smart/2.4.7/accessors-smart-2.4.7.jar:/Users/jtapiat/.m2/repository/org/ow2/asm/asm/9.1/asm-9.1.jar:/Users/jtapiat/.m2/repository/info/cukes/cucumber-java/1.2.5/cucumber-java-1.2.5.jar:/Users/jtapiat/.m2/repository/info/cukes/cucumber-core/1.2.5/cucumber-core-1.2.5.jar:/Users/jtapiat/.m2/repository/org/yaml/snakeyaml/1.29/snakeyaml-1.29.jar:/Users/jtapiat/.m2/repository/de/siegmar/fastcsv/2.0.0/fastcsv-2.0.0.jar:/Users/jtapiat/.m2/repository/info/picocli/picocli/4.6.1/picocli-4.6.1.jar:/Users/jtapiat/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.7.2/junit-jupiter-api-5.7.2.jar:/Users/jtapiat/.m2/repository/org/apiguardian/apiguardian-api/1.1.0/apiguardian-api-1.1.0.jar:/Users/jtapiat/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/Users/jtapiat/.m2/repository/org/junit/platform/junit-platform-commons/1.7.2/junit-platform-commons-1.7.2.jar:/Users/jtapiat/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.7.2/junit-jupiter-engine-5.7.2.jar:/Users/jtapiat/.m2/repository/org/junit/platform/junit-platform-engine/1.7.2/junit-platform-engine-1.7.2.jar:/Users/jtapiat/.m2/repository/com/github/javafaker/javafaker/1.0.2/javafaker-1.0.2.jar:/Users/jtapiat/.m2/repository/org/apache/commons/commons-lang3/3.5/commons-lang3-3.5.jar:/Users/jtapiat/.m2/repository/org/yaml/snakeyaml/1.23/snakeyaml-1.23-android.jar:/Users/jtapiat/.m2/repository/com/github/mifmif/generex/1.0.2/generex-1.0.2.jar:/Users/jtapiat/.m2/repository/dk/brics/automaton/automaton/1.11-8/automaton-1.11-8.jar:/Users/jtapiat/.m2/repository/net/masterthought/cucumber-reporting/5.6.1/cucumber-reporting-5.6.1.jar:/Users/jtapiat/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.12.1/jackson-databind-2.12.1.jar:/Users/jtapiat/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.12.1/jackson-annotations-2.12.1.jar:/Users/jtapiat/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.12.1/jackson-core-2.12.1.jar:/Users/jtapiat/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.12.1/jackson-datatype-jsr310-2.12.1.jar:/Users/jtapiat/.m2/repository/org/apache/velocity/velocity-engine-core/2.3/velocity-engine-core-2.3.jar:/Users/jtapiat/.m2/repository/org/slf4j/slf4j-api/1.7.30/slf4j-api-1.7.30.jar:/Users/jtapiat/.m2/repository/commons-collections/commons-collections/3.2.2/commons-collections-3.2.2.jar:/Users/jtapiat/.m2/repository/joda-time/joda-time/2.10.10/joda-time-2.10.10.jar:/Users/jtapiat/.m2/repository/commons-io/commons-io/2.7/commons-io-2.7.jar:/Users/jtapiat/.m2/repository/org/codehaus/plexus/plexus-utils/3.3.0/plexus-utils-3.3.0.jar:/Users/jtapiat/.m2/repository/org/jsoup/jsoup/1.14.2/jsoup-1.14.2.jar:/Users/jtapiat/.m2/repository/com/google/guava/guava/30.1.1-jre/guava-30.1.1-jre.jar:/Users/jtapiat/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/Users/jtapiat/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/Users/jtapiat/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/Users/jtapiat/.m2/repository/org/checkerframework/checker-qual/3.8.0/checker-qual-3.8.0.jar:/Users/jtapiat/.m2/repository/com/google/errorprone/error_prone_annotations/2.5.1/error_prone_annotations-2.5.1.jar:/Users/jtapiat/.m2/repository/com/google/j2objc/j2objc-annotations/1.3/j2objc-annotations-1.3.jar:/Users/jtapiat/.m2/repository/com/googlecode/owasp-java-html-sanitizer/owasp-java-html-sanitizer/20211018.2/owasp-java-html-sanitizer-20211018.2.jar:/Users/jtapiat/.m2/repository/commons-configuration/commons-configuration/1.10/commons-configuration-1.10.jar:/Users/jtapiat/.m2/repository/commons-lang/commons-lang/2.6/commons-lang-2.6.jar:/Users/jtapiat/.m2/repository/commons-logging/commons-logging/1.1.1/commons-logging-1.1.1.jar:/Users/jtapiat/.m2/repository/com/microsoft/sqlserver/mssql-jdbc/11.2.3.jre17/mssql-jdbc-11.2.3.jre17.jar:/Users/jtapiat/.m2/repository/mysql/mysql-connector-java/8.0.28/mysql-connector-java-8.0.28.jar:/Users/jtapiat/.m2/repository/com/google/protobuf/protobuf-java/3.11.4/protobuf-java-3.11.4.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/Users/jtapiat"/>
    <property name="user.language" value="es"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.home" value="/Library/Java/JavaVirtualMachines/jdk1.8.0_331.jdk/Contents/Home/jre"/>
    <property name="basedir" value="/Users/jtapiat/Documents/javier/myproject1"/>
    <property name="file.separator" value="/"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.awt.graphicsenv" value="sun.awt.CGraphicsEnvironment"/>
    <property name="surefire.real.class.path" value="/Users/jtapiat/Documents/javier/myproject1/target/surefire/surefirebooter5143978847108891937.jar"/>
    <property name="sun.boot.class.path" value="/Library/Java/JavaVirtualMachines/jdk1.8.0_331.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_331.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_331.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_331.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_331.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_331.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_331.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_331.jdk/Contents/Home/jre/classes"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.runtime.version" value="1.8.0_331-b09"/>
    <property name="user.name" value="jtapiat"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="13.1"/>
    <property name="java.endorsed.dirs" value="/Library/Java/JavaVirtualMachines/jdk1.8.0_331.jdk/Contents/Home/jre/lib/endorsed"/>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="localRepository" value="/Users/jtapiat/.m2/repository"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="java.io.tmpdir" value="/var/folders/yc/hhvb8q1n0g16v5ykjfkl25c40000gn/T/"/>
    <property name="java.version" value="1.8.0_331"/>
    <property name="user.dir" value="/Users/jtapiat/Documents/javier/myproject1"/>
    <property name="os.arch" value="x86_64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="java.awt.printerjob" value="sun.lwawt.macosx.CPrinterJob"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="java.library.path" value="/Users/jtapiat/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="25.331-b09"/>
    <property name="java.ext.dirs" value="/Users/jtapiat/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.8.0_331.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java"/>
    <property name="sun.io.unicode.encoding" value="UnicodeBig"/>
    <property name="java.class.version" value="52.0"/>
    <property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
  </properties>
  <testcase name="testAll[1][1]" classname="conduitApp.ConduitTest" time="2.768">
    <failure message="&gt;&gt; classpath:conduitApp/feature/Articles.feature:21&#10;&gt;&gt; karate-config.js failed&#10;&gt;&gt; js failed:&#10;&gt;&gt;&gt;&gt;&#10;01: function fn() {&#10;02:   var env = karate.env; // get system property &apos;karate.env&apos;&#10;03:   karate.log(&apos;karate.env system property was:&apos;, env);&#10;04:   if (!env) {&#10;05:     env = &apos;dev&apos;;&#10;06:   }&#10;07:   var config = {&#10;08:     &#10;09:     apiUrl: &apos;https://api.realworld.io/api/&apos;&#10;10:   }&#10;11:   if (env == &apos;dev&apos;) {&#10;12:     &#10;13:     config.userEmail = &apos;javierkarate1@test.com&apos;&#10;14:     config.userPassword = &apos;karate1234&apos;&#10;15: &#10;16:   } if (env == &apos;qa&apos;) {&#10;17: &#10;18:     config.userEmail = &apos;javierkarate2@test.com&apos;&#10;19:     config.userPassword = &apos;karate1234&apos;&#10;20:   }&#10;21: &#10;22:   var accesToken = karate.callSingle(&apos;classpath:helpers/CreateToken.feature&apos;, config).authToken&#10;23:   karate.configure(&apos;headers&apos;,{Authorization: &apos;Token &apos; + accesToken})&#10;24:   &#10;25: &#10;26:   return config;&#10;27: }&#10;&lt;&lt;&lt;&lt;&#10;org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: &#10;{&quot;errors&quot;:{&quot;email or password&quot;:[&quot;is invalid&quot;]}}&#10;classpath:helpers/CreateToken.feature:8&#10;- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)&#10;- &lt;js&gt;.fn(Unnamed:22)&#10;&#10;js failed:&#10;&gt;&gt;&gt;&gt;&#10;01: function fn() {&#10;02:   var env = karate.env; // get system property &apos;karate.env&apos;&#10;03:   karate.log(&apos;karate.env system property was:&apos;, env);&#10;04:   if (!env) {&#10;05:     env = &apos;dev&apos;;&#10;06:   }&#10;07:   var config = {&#10;08:     &#10;09:     apiUrl: &apos;https://api.realworld.io/api/&apos;&#10;10:   }&#10;11:   if (env == &apos;dev&apos;) {&#10;12:     &#10;13:     config.userEmail = &apos;javierkarate1@test.com&apos;&#10;14:     config.userPassword = &apos;karate1234&apos;&#10;15: &#10;16:   } if (env == &apos;qa&apos;) {&#10;17: &#10;18:     config.userEmail = &apos;javierkarate2@test.com&apos;&#10;19:     config.userPassword = &apos;karate1234&apos;&#10;20:   }&#10;21: &#10;22:   var accesToken = karate.callSingle(&apos;classpath:helpers/CreateToken.feature&apos;, config).authToken&#10;23:   karate.configure(&apos;headers&apos;,{Authorization: &apos;Token &apos; + accesToken})&#10;24:   &#10;25: &#10;26:   return config;&#10;27: }&#10;&lt;&lt;&lt;&lt;&#10;com.intuit.karate.KarateException: js failed:&#10;&gt;&gt;&gt;&gt;&#10;01: function fn() {&#10;02:   var env = karate.env; // get system property &apos;karate.env&apos;&#10;03:   karate.log(&apos;karate.env system property was:&apos;, env);&#10;04:   if (!env) {&#10;05:     env = &apos;dev&apos;;&#10;06:   }&#10;07:   var config = {&#10;08:     &#10;09:     apiUrl: &apos;https://api.realworld.io/api/&apos;&#10;10:   }&#10;11:   if (env == &apos;dev&apos;) {&#10;12:     &#10;13:     config.userEmail = &apos;javierkarate1@test.com&apos;&#10;14:     config.userPassword = &apos;karate1234&apos;&#10;15: &#10;16:   } if (env == &apos;qa&apos;) {&#10;17: &#10;18:     config.userEmail = &apos;javierkarate2@test.com&apos;&#10;19:     config.userPassword = &apos;karate1234&apos;&#10;20:   }&#10;21: &#10;22:   var accesToken = karate.callSingle(&apos;classpath:helpers/CreateToken.feature&apos;, config).authToken&#10;23:   karate.configure(&apos;headers&apos;,{Authorization: &apos;Token &apos; + accesToken})&#10;24:   &#10;25: &#10;26:   return config;&#10;27: }&#10;&lt;&lt;&lt;&lt;&#10;org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: &#10;{&quot;errors&quot;:{&quot;email or password&quot;:[&quot;is invalid&quot;]}}&#10;classpath:helpers/CreateToken.feature:8&#10;- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)&#10;- &lt;js&gt;.fn(Unnamed:22)&#10;&#10;- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)&#10;- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)&#10;- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)&#10;- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)&#10;- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)&#10;- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)&#10;- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)&#10;&#10;classpath:conduitApp/feature/Articles.feature:5&#10;classpath:conduitApp/feature/Articles.feature:6&#10;classpath:conduitApp/feature/Articles.feature:7&#10;classpath:conduitApp/feature/Articles.feature:8&#10;classpath:conduitApp/feature/Articles.feature:9&#10;classpath:conduitApp/feature/Articles.feature:10&#10;classpath:conduitApp/feature/Articles.feature:23&#10;classpath:conduitApp/feature/Articles.feature:24&#10;classpath:conduitApp/feature/Articles.feature:25&#10;classpath:conduitApp/feature/Articles.feature:26&#10;classpath:conduitApp/feature/Articles.feature:27" type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
>> classpath:conduitApp/feature/Articles.feature:21
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
classpath:conduitApp/feature/Articles.feature:9
classpath:conduitApp/feature/Articles.feature:10
classpath:conduitApp/feature/Articles.feature:23
classpath:conduitApp/feature/Articles.feature:24
classpath:conduitApp/feature/Articles.feature:25
classpath:conduitApp/feature/Articles.feature:26
classpath:conduitApp/feature/Articles.feature:27
]]></failure>
    <system-out><![CDATA[21:03:27.120 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
21:03:28.314 [main] INFO  com.intuit.karate - karate.env system property was: null 
21:03:28.336 [main] INFO  com.intuit.karate - >> lock acquired, begin callSingle: classpath:helpers/CreateToken.feature
21:03:29.113 [main] DEBUG com.intuit.karate - request:
1 > POST https://api.realworld.io/api/users/login
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 67
1 > Host: api.realworld.io
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/1.8.0_331)
1 > Accept-Encoding: gzip,deflate
{"user":{"email":"javierkarate1@test.com","password":"karate1234"}}

21:03:29.879 [main] DEBUG com.intuit.karate - response time in milliseconds: 757
1 < 403
1 < Date: Thu, 11 Jan 2024 00:03:29 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 47
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1704931409&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=5389d8uXdPfWU5CpnF%2FPb0ErZC2awRcLszUERmymYVU%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1704931409&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=5389d8uXdPfWU5CpnF%2FPb0ErZC2awRcLszUERmymYVU%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"2f-83PWxEwXkLR3WfVjo3wqB0FwKlU"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 8438e59b08976f2f-SCL
1 < alt-svc: h3=":443"; ma=86400
{"errors":{"email or password":["is invalid"]}}
21:03:29.891 [main] ERROR com.intuit.karate - classpath:helpers/CreateToken.feature:8
Then status 200
status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
21:03:29.896 [main] WARN  com.intuit.karate - callSingle() will cache an exception
21:03:29.897 [main] INFO  com.intuit.karate - << lock released, cached callSingle: classpath:helpers/CreateToken.feature
21:03:29.897 [main] WARN  com.intuit.karate - callSingle() cached result is an exception
21:03:29.932 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:5
* url apiUrl
>> classpath:conduitApp/feature/Articles.feature:21
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
21:03:29.933 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:6
* def articleRequestBody = read('classpath:conduitApp/json/newArticleRequest.json')
>> classpath:conduitApp/feature/Articles.feature:21
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
21:03:29.934 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:7
* def dataGenerator = Java.type('helpers.DataGenerator')
>> classpath:conduitApp/feature/Articles.feature:21
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
21:03:29.934 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:8
* set articleRequestBody.article.title = dataGenerator.getRandomArticleValues().title
>> classpath:conduitApp/feature/Articles.feature:21
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
21:03:29.934 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:9
* set articleRequestBody.article.description = dataGenerator.getRandomArticleValues().description
>> classpath:conduitApp/feature/Articles.feature:21
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
classpath:conduitApp/feature/Articles.feature:9
21:03:29.935 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:10
* set articleRequestBody.article.body = dataGenerator.getRandomArticleValues().body
>> classpath:conduitApp/feature/Articles.feature:21
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
classpath:conduitApp/feature/Articles.feature:9
classpath:conduitApp/feature/Articles.feature:10
21:03:29.935 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:23
Given path 'articles'
>> classpath:conduitApp/feature/Articles.feature:21
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
classpath:conduitApp/feature/Articles.feature:9
classpath:conduitApp/feature/Articles.feature:10
classpath:conduitApp/feature/Articles.feature:23
21:03:29.935 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:24
And request articleRequestBody
>> classpath:conduitApp/feature/Articles.feature:21
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
classpath:conduitApp/feature/Articles.feature:9
classpath:conduitApp/feature/Articles.feature:10
classpath:conduitApp/feature/Articles.feature:23
classpath:conduitApp/feature/Articles.feature:24
21:03:29.936 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:25
When method Post
>> classpath:conduitApp/feature/Articles.feature:21
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
classpath:conduitApp/feature/Articles.feature:9
classpath:conduitApp/feature/Articles.feature:10
classpath:conduitApp/feature/Articles.feature:23
classpath:conduitApp/feature/Articles.feature:24
classpath:conduitApp/feature/Articles.feature:25
21:03:29.936 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:26
Then status 201
>> classpath:conduitApp/feature/Articles.feature:21
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
classpath:conduitApp/feature/Articles.feature:9
classpath:conduitApp/feature/Articles.feature:10
classpath:conduitApp/feature/Articles.feature:23
classpath:conduitApp/feature/Articles.feature:24
classpath:conduitApp/feature/Articles.feature:25
classpath:conduitApp/feature/Articles.feature:26
21:03:29.936 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:27
And match response.article.title == articleRequestBody.article.title
>> classpath:conduitApp/feature/Articles.feature:21
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
classpath:conduitApp/feature/Articles.feature:9
classpath:conduitApp/feature/Articles.feature:10
classpath:conduitApp/feature/Articles.feature:23
classpath:conduitApp/feature/Articles.feature:24
classpath:conduitApp/feature/Articles.feature:25
classpath:conduitApp/feature/Articles.feature:26
classpath:conduitApp/feature/Articles.feature:27
]]></system-out>
  </testcase>
  <testcase name="testAll[1][2]" classname="conduitApp.ConduitTest" time="3.133">
    <failure message="&gt;&gt; classpath:conduitApp/feature/Articles.feature:30&#10;&gt;&gt; karate-config.js failed&#10;&gt;&gt; js failed:&#10;&gt;&gt;&gt;&gt;&#10;01: function fn() {&#10;02:   var env = karate.env; // get system property &apos;karate.env&apos;&#10;03:   karate.log(&apos;karate.env system property was:&apos;, env);&#10;04:   if (!env) {&#10;05:     env = &apos;dev&apos;;&#10;06:   }&#10;07:   var config = {&#10;08:     &#10;09:     apiUrl: &apos;https://api.realworld.io/api/&apos;&#10;10:   }&#10;11:   if (env == &apos;dev&apos;) {&#10;12:     &#10;13:     config.userEmail = &apos;javierkarate1@test.com&apos;&#10;14:     config.userPassword = &apos;karate1234&apos;&#10;15: &#10;16:   } if (env == &apos;qa&apos;) {&#10;17: &#10;18:     config.userEmail = &apos;javierkarate2@test.com&apos;&#10;19:     config.userPassword = &apos;karate1234&apos;&#10;20:   }&#10;21: &#10;22:   var accesToken = karate.callSingle(&apos;classpath:helpers/CreateToken.feature&apos;, config).authToken&#10;23:   karate.configure(&apos;headers&apos;,{Authorization: &apos;Token &apos; + accesToken})&#10;24:   &#10;25: &#10;26:   return config;&#10;27: }&#10;&lt;&lt;&lt;&lt;&#10;org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: &#10;{&quot;errors&quot;:{&quot;email or password&quot;:[&quot;is invalid&quot;]}}&#10;classpath:helpers/CreateToken.feature:8&#10;- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)&#10;- &lt;js&gt;.fn(Unnamed:22)&#10;&#10;js failed:&#10;&gt;&gt;&gt;&gt;&#10;01: function fn() {&#10;02:   var env = karate.env; // get system property &apos;karate.env&apos;&#10;03:   karate.log(&apos;karate.env system property was:&apos;, env);&#10;04:   if (!env) {&#10;05:     env = &apos;dev&apos;;&#10;06:   }&#10;07:   var config = {&#10;08:     &#10;09:     apiUrl: &apos;https://api.realworld.io/api/&apos;&#10;10:   }&#10;11:   if (env == &apos;dev&apos;) {&#10;12:     &#10;13:     config.userEmail = &apos;javierkarate1@test.com&apos;&#10;14:     config.userPassword = &apos;karate1234&apos;&#10;15: &#10;16:   } if (env == &apos;qa&apos;) {&#10;17: &#10;18:     config.userEmail = &apos;javierkarate2@test.com&apos;&#10;19:     config.userPassword = &apos;karate1234&apos;&#10;20:   }&#10;21: &#10;22:   var accesToken = karate.callSingle(&apos;classpath:helpers/CreateToken.feature&apos;, config).authToken&#10;23:   karate.configure(&apos;headers&apos;,{Authorization: &apos;Token &apos; + accesToken})&#10;24:   &#10;25: &#10;26:   return config;&#10;27: }&#10;&lt;&lt;&lt;&lt;&#10;com.intuit.karate.KarateException: js failed:&#10;&gt;&gt;&gt;&gt;&#10;01: function fn() {&#10;02:   var env = karate.env; // get system property &apos;karate.env&apos;&#10;03:   karate.log(&apos;karate.env system property was:&apos;, env);&#10;04:   if (!env) {&#10;05:     env = &apos;dev&apos;;&#10;06:   }&#10;07:   var config = {&#10;08:     &#10;09:     apiUrl: &apos;https://api.realworld.io/api/&apos;&#10;10:   }&#10;11:   if (env == &apos;dev&apos;) {&#10;12:     &#10;13:     config.userEmail = &apos;javierkarate1@test.com&apos;&#10;14:     config.userPassword = &apos;karate1234&apos;&#10;15: &#10;16:   } if (env == &apos;qa&apos;) {&#10;17: &#10;18:     config.userEmail = &apos;javierkarate2@test.com&apos;&#10;19:     config.userPassword = &apos;karate1234&apos;&#10;20:   }&#10;21: &#10;22:   var accesToken = karate.callSingle(&apos;classpath:helpers/CreateToken.feature&apos;, config).authToken&#10;23:   karate.configure(&apos;headers&apos;,{Authorization: &apos;Token &apos; + accesToken})&#10;24:   &#10;25: &#10;26:   return config;&#10;27: }&#10;&lt;&lt;&lt;&lt;&#10;org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: &#10;{&quot;errors&quot;:{&quot;email or password&quot;:[&quot;is invalid&quot;]}}&#10;classpath:helpers/CreateToken.feature:8&#10;- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)&#10;- &lt;js&gt;.fn(Unnamed:22)&#10;&#10;- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)&#10;- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)&#10;- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)&#10;- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)&#10;- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)&#10;- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)&#10;- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)&#10;&#10;classpath:conduitApp/feature/Articles.feature:5&#10;classpath:conduitApp/feature/Articles.feature:6&#10;classpath:conduitApp/feature/Articles.feature:7&#10;classpath:conduitApp/feature/Articles.feature:8&#10;classpath:conduitApp/feature/Articles.feature:9&#10;classpath:conduitApp/feature/Articles.feature:10&#10;classpath:conduitApp/feature/Articles.feature:32&#10;classpath:conduitApp/feature/Articles.feature:33&#10;classpath:conduitApp/feature/Articles.feature:34&#10;classpath:conduitApp/feature/Articles.feature:35&#10;classpath:conduitApp/feature/Articles.feature:36&#10;classpath:conduitApp/feature/Articles.feature:39&#10;classpath:conduitApp/feature/Articles.feature:40&#10;classpath:conduitApp/feature/Articles.feature:41&#10;classpath:conduitApp/feature/Articles.feature:42&#10;classpath:conduitApp/feature/Articles.feature:43&#10;classpath:conduitApp/feature/Articles.feature:46&#10;classpath:conduitApp/feature/Articles.feature:47&#10;classpath:conduitApp/feature/Articles.feature:48&#10;classpath:conduitApp/feature/Articles.feature:50&#10;classpath:conduitApp/feature/Articles.feature:51&#10;classpath:conduitApp/feature/Articles.feature:52&#10;classpath:conduitApp/feature/Articles.feature:53&#10;classpath:conduitApp/feature/Articles.feature:54" type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
>> classpath:conduitApp/feature/Articles.feature:30
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
classpath:conduitApp/feature/Articles.feature:9
classpath:conduitApp/feature/Articles.feature:10
classpath:conduitApp/feature/Articles.feature:32
classpath:conduitApp/feature/Articles.feature:33
classpath:conduitApp/feature/Articles.feature:34
classpath:conduitApp/feature/Articles.feature:35
classpath:conduitApp/feature/Articles.feature:36
classpath:conduitApp/feature/Articles.feature:39
classpath:conduitApp/feature/Articles.feature:40
classpath:conduitApp/feature/Articles.feature:41
classpath:conduitApp/feature/Articles.feature:42
classpath:conduitApp/feature/Articles.feature:43
classpath:conduitApp/feature/Articles.feature:46
classpath:conduitApp/feature/Articles.feature:47
classpath:conduitApp/feature/Articles.feature:48
classpath:conduitApp/feature/Articles.feature:50
classpath:conduitApp/feature/Articles.feature:51
classpath:conduitApp/feature/Articles.feature:52
classpath:conduitApp/feature/Articles.feature:53
classpath:conduitApp/feature/Articles.feature:54
]]></failure>
    <system-out><![CDATA[21:03:30.004 [main] INFO  com.intuit.karate - karate.env system property was: null 
21:03:30.006 [main] WARN  com.intuit.karate - callSingle() cached result is an exception
21:03:30.010 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:5
* url apiUrl
>> classpath:conduitApp/feature/Articles.feature:30
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
21:03:30.010 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:6
* def articleRequestBody = read('classpath:conduitApp/json/newArticleRequest.json')
>> classpath:conduitApp/feature/Articles.feature:30
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
21:03:30.010 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:7
* def dataGenerator = Java.type('helpers.DataGenerator')
>> classpath:conduitApp/feature/Articles.feature:30
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
21:03:30.011 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:8
* set articleRequestBody.article.title = dataGenerator.getRandomArticleValues().title
>> classpath:conduitApp/feature/Articles.feature:30
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
21:03:30.011 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:9
* set articleRequestBody.article.description = dataGenerator.getRandomArticleValues().description
>> classpath:conduitApp/feature/Articles.feature:30
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
classpath:conduitApp/feature/Articles.feature:9
21:03:30.011 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:10
* set articleRequestBody.article.body = dataGenerator.getRandomArticleValues().body
>> classpath:conduitApp/feature/Articles.feature:30
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
classpath:conduitApp/feature/Articles.feature:9
classpath:conduitApp/feature/Articles.feature:10
21:03:30.012 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:32
Given path 'articles'
>> classpath:conduitApp/feature/Articles.feature:30
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
classpath:conduitApp/feature/Articles.feature:9
classpath:conduitApp/feature/Articles.feature:10
classpath:conduitApp/feature/Articles.feature:32
21:03:30.012 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:33
And request articleRequestBody
>> classpath:conduitApp/feature/Articles.feature:30
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
classpath:conduitApp/feature/Articles.feature:9
classpath:conduitApp/feature/Articles.feature:10
classpath:conduitApp/feature/Articles.feature:32
classpath:conduitApp/feature/Articles.feature:33
21:03:30.014 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:34
When method Post
>> classpath:conduitApp/feature/Articles.feature:30
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
classpath:conduitApp/feature/Articles.feature:9
classpath:conduitApp/feature/Articles.feature:10
classpath:conduitApp/feature/Articles.feature:32
classpath:conduitApp/feature/Articles.feature:33
classpath:conduitApp/feature/Articles.feature:34
21:03:30.014 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:35
Then status 201
>> classpath:conduitApp/feature/Articles.feature:30
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
classpath:conduitApp/feature/Articles.feature:9
classpath:conduitApp/feature/Articles.feature:10
classpath:conduitApp/feature/Articles.feature:32
classpath:conduitApp/feature/Articles.feature:33
classpath:conduitApp/feature/Articles.feature:34
classpath:conduitApp/feature/Articles.feature:35
21:03:30.014 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:36
* def articleId = response.article.slug
>> classpath:conduitApp/feature/Articles.feature:30
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
classpath:conduitApp/feature/Articles.feature:9
classpath:conduitApp/feature/Articles.feature:10
classpath:conduitApp/feature/Articles.feature:32
classpath:conduitApp/feature/Articles.feature:33
classpath:conduitApp/feature/Articles.feature:34
classpath:conduitApp/feature/Articles.feature:35
classpath:conduitApp/feature/Articles.feature:36
21:03:30.015 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:39
Given params { limit: 10, offset: 0}
>> classpath:conduitApp/feature/Articles.feature:30
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
classpath:conduitApp/feature/Articles.feature:9
classpath:conduitApp/feature/Articles.feature:10
classpath:conduitApp/feature/Articles.feature:32
classpath:conduitApp/feature/Articles.feature:33
classpath:conduitApp/feature/Articles.feature:34
classpath:conduitApp/feature/Articles.feature:35
classpath:conduitApp/feature/Articles.feature:36
classpath:conduitApp/feature/Articles.feature:39
21:03:30.016 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:40
Given path 'articles'
>> classpath:conduitApp/feature/Articles.feature:30
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
classpath:conduitApp/feature/Articles.feature:9
classpath:conduitApp/feature/Articles.feature:10
classpath:conduitApp/feature/Articles.feature:32
classpath:conduitApp/feature/Articles.feature:33
classpath:conduitApp/feature/Articles.feature:34
classpath:conduitApp/feature/Articles.feature:35
classpath:conduitApp/feature/Articles.feature:36
classpath:conduitApp/feature/Articles.feature:39
classpath:conduitApp/feature/Articles.feature:40
21:03:30.016 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:41
When method Get
>> classpath:conduitApp/feature/Articles.feature:30
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
classpath:conduitApp/feature/Articles.feature:9
classpath:conduitApp/feature/Articles.feature:10
classpath:conduitApp/feature/Articles.feature:32
classpath:conduitApp/feature/Articles.feature:33
classpath:conduitApp/feature/Articles.feature:34
classpath:conduitApp/feature/Articles.feature:35
classpath:conduitApp/feature/Articles.feature:36
classpath:conduitApp/feature/Articles.feature:39
classpath:conduitApp/feature/Articles.feature:40
classpath:conduitApp/feature/Articles.feature:41
21:03:30.016 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:42
Then status 200
>> classpath:conduitApp/feature/Articles.feature:30
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
classpath:conduitApp/feature/Articles.feature:9
classpath:conduitApp/feature/Articles.feature:10
classpath:conduitApp/feature/Articles.feature:32
classpath:conduitApp/feature/Articles.feature:33
classpath:conduitApp/feature/Articles.feature:34
classpath:conduitApp/feature/Articles.feature:35
classpath:conduitApp/feature/Articles.feature:36
classpath:conduitApp/feature/Articles.feature:39
classpath:conduitApp/feature/Articles.feature:40
classpath:conduitApp/feature/Articles.feature:41
classpath:conduitApp/feature/Articles.feature:42
21:03:30.017 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:43
And match response.articles[0].title == articleRequestBody.article.title
>> classpath:conduitApp/feature/Articles.feature:30
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
classpath:conduitApp/feature/Articles.feature:9
classpath:conduitApp/feature/Articles.feature:10
classpath:conduitApp/feature/Articles.feature:32
classpath:conduitApp/feature/Articles.feature:33
classpath:conduitApp/feature/Articles.feature:34
classpath:conduitApp/feature/Articles.feature:35
classpath:conduitApp/feature/Articles.feature:36
classpath:conduitApp/feature/Articles.feature:39
classpath:conduitApp/feature/Articles.feature:40
classpath:conduitApp/feature/Articles.feature:41
classpath:conduitApp/feature/Articles.feature:42
classpath:conduitApp/feature/Articles.feature:43
21:03:30.017 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:46
Given path 'articles', articleId
>> classpath:conduitApp/feature/Articles.feature:30
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
classpath:conduitApp/feature/Articles.feature:9
classpath:conduitApp/feature/Articles.feature:10
classpath:conduitApp/feature/Articles.feature:32
classpath:conduitApp/feature/Articles.feature:33
classpath:conduitApp/feature/Articles.feature:34
classpath:conduitApp/feature/Articles.feature:35
classpath:conduitApp/feature/Articles.feature:36
classpath:conduitApp/feature/Articles.feature:39
classpath:conduitApp/feature/Articles.feature:40
classpath:conduitApp/feature/Articles.feature:41
classpath:conduitApp/feature/Articles.feature:42
classpath:conduitApp/feature/Articles.feature:43
classpath:conduitApp/feature/Articles.feature:46
21:03:30.017 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:47
When method delete
>> classpath:conduitApp/feature/Articles.feature:30
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
classpath:conduitApp/feature/Articles.feature:9
classpath:conduitApp/feature/Articles.feature:10
classpath:conduitApp/feature/Articles.feature:32
classpath:conduitApp/feature/Articles.feature:33
classpath:conduitApp/feature/Articles.feature:34
classpath:conduitApp/feature/Articles.feature:35
classpath:conduitApp/feature/Articles.feature:36
classpath:conduitApp/feature/Articles.feature:39
classpath:conduitApp/feature/Articles.feature:40
classpath:conduitApp/feature/Articles.feature:41
classpath:conduitApp/feature/Articles.feature:42
classpath:conduitApp/feature/Articles.feature:43
classpath:conduitApp/feature/Articles.feature:46
classpath:conduitApp/feature/Articles.feature:47
21:03:30.017 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:48
Then status 204
>> classpath:conduitApp/feature/Articles.feature:30
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
classpath:conduitApp/feature/Articles.feature:9
classpath:conduitApp/feature/Articles.feature:10
classpath:conduitApp/feature/Articles.feature:32
classpath:conduitApp/feature/Articles.feature:33
classpath:conduitApp/feature/Articles.feature:34
classpath:conduitApp/feature/Articles.feature:35
classpath:conduitApp/feature/Articles.feature:36
classpath:conduitApp/feature/Articles.feature:39
classpath:conduitApp/feature/Articles.feature:40
classpath:conduitApp/feature/Articles.feature:41
classpath:conduitApp/feature/Articles.feature:42
classpath:conduitApp/feature/Articles.feature:43
classpath:conduitApp/feature/Articles.feature:46
classpath:conduitApp/feature/Articles.feature:47
classpath:conduitApp/feature/Articles.feature:48
21:03:30.017 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:50
Given params { limit: 10, offset: 0}
>> classpath:conduitApp/feature/Articles.feature:30
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
classpath:conduitApp/feature/Articles.feature:9
classpath:conduitApp/feature/Articles.feature:10
classpath:conduitApp/feature/Articles.feature:32
classpath:conduitApp/feature/Articles.feature:33
classpath:conduitApp/feature/Articles.feature:34
classpath:conduitApp/feature/Articles.feature:35
classpath:conduitApp/feature/Articles.feature:36
classpath:conduitApp/feature/Articles.feature:39
classpath:conduitApp/feature/Articles.feature:40
classpath:conduitApp/feature/Articles.feature:41
classpath:conduitApp/feature/Articles.feature:42
classpath:conduitApp/feature/Articles.feature:43
classpath:conduitApp/feature/Articles.feature:46
classpath:conduitApp/feature/Articles.feature:47
classpath:conduitApp/feature/Articles.feature:48
classpath:conduitApp/feature/Articles.feature:50
21:03:30.018 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:51
Given path 'articles'
>> classpath:conduitApp/feature/Articles.feature:30
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
classpath:conduitApp/feature/Articles.feature:9
classpath:conduitApp/feature/Articles.feature:10
classpath:conduitApp/feature/Articles.feature:32
classpath:conduitApp/feature/Articles.feature:33
classpath:conduitApp/feature/Articles.feature:34
classpath:conduitApp/feature/Articles.feature:35
classpath:conduitApp/feature/Articles.feature:36
classpath:conduitApp/feature/Articles.feature:39
classpath:conduitApp/feature/Articles.feature:40
classpath:conduitApp/feature/Articles.feature:41
classpath:conduitApp/feature/Articles.feature:42
classpath:conduitApp/feature/Articles.feature:43
classpath:conduitApp/feature/Articles.feature:46
classpath:conduitApp/feature/Articles.feature:47
classpath:conduitApp/feature/Articles.feature:48
classpath:conduitApp/feature/Articles.feature:50
classpath:conduitApp/feature/Articles.feature:51
21:03:30.018 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:52
When method Get
>> classpath:conduitApp/feature/Articles.feature:30
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
classpath:conduitApp/feature/Articles.feature:9
classpath:conduitApp/feature/Articles.feature:10
classpath:conduitApp/feature/Articles.feature:32
classpath:conduitApp/feature/Articles.feature:33
classpath:conduitApp/feature/Articles.feature:34
classpath:conduitApp/feature/Articles.feature:35
classpath:conduitApp/feature/Articles.feature:36
classpath:conduitApp/feature/Articles.feature:39
classpath:conduitApp/feature/Articles.feature:40
classpath:conduitApp/feature/Articles.feature:41
classpath:conduitApp/feature/Articles.feature:42
classpath:conduitApp/feature/Articles.feature:43
classpath:conduitApp/feature/Articles.feature:46
classpath:conduitApp/feature/Articles.feature:47
classpath:conduitApp/feature/Articles.feature:48
classpath:conduitApp/feature/Articles.feature:50
classpath:conduitApp/feature/Articles.feature:51
classpath:conduitApp/feature/Articles.feature:52
21:03:30.018 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:53
Then status 200
>> classpath:conduitApp/feature/Articles.feature:30
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
classpath:conduitApp/feature/Articles.feature:9
classpath:conduitApp/feature/Articles.feature:10
classpath:conduitApp/feature/Articles.feature:32
classpath:conduitApp/feature/Articles.feature:33
classpath:conduitApp/feature/Articles.feature:34
classpath:conduitApp/feature/Articles.feature:35
classpath:conduitApp/feature/Articles.feature:36
classpath:conduitApp/feature/Articles.feature:39
classpath:conduitApp/feature/Articles.feature:40
classpath:conduitApp/feature/Articles.feature:41
classpath:conduitApp/feature/Articles.feature:42
classpath:conduitApp/feature/Articles.feature:43
classpath:conduitApp/feature/Articles.feature:46
classpath:conduitApp/feature/Articles.feature:47
classpath:conduitApp/feature/Articles.feature:48
classpath:conduitApp/feature/Articles.feature:50
classpath:conduitApp/feature/Articles.feature:51
classpath:conduitApp/feature/Articles.feature:52
classpath:conduitApp/feature/Articles.feature:53
21:03:30.018 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:54
And match response.articles[0].title != articleRequestBody.article.title
>> classpath:conduitApp/feature/Articles.feature:30
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
classpath:conduitApp/feature/Articles.feature:9
classpath:conduitApp/feature/Articles.feature:10
classpath:conduitApp/feature/Articles.feature:32
classpath:conduitApp/feature/Articles.feature:33
classpath:conduitApp/feature/Articles.feature:34
classpath:conduitApp/feature/Articles.feature:35
classpath:conduitApp/feature/Articles.feature:36
classpath:conduitApp/feature/Articles.feature:39
classpath:conduitApp/feature/Articles.feature:40
classpath:conduitApp/feature/Articles.feature:41
classpath:conduitApp/feature/Articles.feature:42
classpath:conduitApp/feature/Articles.feature:43
classpath:conduitApp/feature/Articles.feature:46
classpath:conduitApp/feature/Articles.feature:47
classpath:conduitApp/feature/Articles.feature:48
classpath:conduitApp/feature/Articles.feature:50
classpath:conduitApp/feature/Articles.feature:51
classpath:conduitApp/feature/Articles.feature:52
classpath:conduitApp/feature/Articles.feature:53
classpath:conduitApp/feature/Articles.feature:54
---------------------------------------------------------
feature: classpath:conduitApp/feature/Articles.feature
scenarios:  2 | passed:  0 | failed:  2 | time: 0,0000
---------------------------------------------------------

]]></system-out>
  </testcase>
  <testcase name="testAll[2][1]" classname="conduitApp.ConduitTest" time="0.075">
    <failure message="&gt;&gt; classpath:conduitApp/feature/HomePage.feature:8&#10;&gt;&gt; karate-config.js failed&#10;&gt;&gt; js failed:&#10;&gt;&gt;&gt;&gt;&#10;01: function fn() {&#10;02:   var env = karate.env; // get system property &apos;karate.env&apos;&#10;03:   karate.log(&apos;karate.env system property was:&apos;, env);&#10;04:   if (!env) {&#10;05:     env = &apos;dev&apos;;&#10;06:   }&#10;07:   var config = {&#10;08:     &#10;09:     apiUrl: &apos;https://api.realworld.io/api/&apos;&#10;10:   }&#10;11:   if (env == &apos;dev&apos;) {&#10;12:     &#10;13:     config.userEmail = &apos;javierkarate1@test.com&apos;&#10;14:     config.userPassword = &apos;karate1234&apos;&#10;15: &#10;16:   } if (env == &apos;qa&apos;) {&#10;17: &#10;18:     config.userEmail = &apos;javierkarate2@test.com&apos;&#10;19:     config.userPassword = &apos;karate1234&apos;&#10;20:   }&#10;21: &#10;22:   var accesToken = karate.callSingle(&apos;classpath:helpers/CreateToken.feature&apos;, config).authToken&#10;23:   karate.configure(&apos;headers&apos;,{Authorization: &apos;Token &apos; + accesToken})&#10;24:   &#10;25: &#10;26:   return config;&#10;27: }&#10;&lt;&lt;&lt;&lt;&#10;org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: &#10;{&quot;errors&quot;:{&quot;email or password&quot;:[&quot;is invalid&quot;]}}&#10;classpath:helpers/CreateToken.feature:8&#10;- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)&#10;- &lt;js&gt;.fn(Unnamed:22)&#10;&#10;js failed:&#10;&gt;&gt;&gt;&gt;&#10;01: function fn() {&#10;02:   var env = karate.env; // get system property &apos;karate.env&apos;&#10;03:   karate.log(&apos;karate.env system property was:&apos;, env);&#10;04:   if (!env) {&#10;05:     env = &apos;dev&apos;;&#10;06:   }&#10;07:   var config = {&#10;08:     &#10;09:     apiUrl: &apos;https://api.realworld.io/api/&apos;&#10;10:   }&#10;11:   if (env == &apos;dev&apos;) {&#10;12:     &#10;13:     config.userEmail = &apos;javierkarate1@test.com&apos;&#10;14:     config.userPassword = &apos;karate1234&apos;&#10;15: &#10;16:   } if (env == &apos;qa&apos;) {&#10;17: &#10;18:     config.userEmail = &apos;javierkarate2@test.com&apos;&#10;19:     config.userPassword = &apos;karate1234&apos;&#10;20:   }&#10;21: &#10;22:   var accesToken = karate.callSingle(&apos;classpath:helpers/CreateToken.feature&apos;, config).authToken&#10;23:   karate.configure(&apos;headers&apos;,{Authorization: &apos;Token &apos; + accesToken})&#10;24:   &#10;25: &#10;26:   return config;&#10;27: }&#10;&lt;&lt;&lt;&lt;&#10;com.intuit.karate.KarateException: js failed:&#10;&gt;&gt;&gt;&gt;&#10;01: function fn() {&#10;02:   var env = karate.env; // get system property &apos;karate.env&apos;&#10;03:   karate.log(&apos;karate.env system property was:&apos;, env);&#10;04:   if (!env) {&#10;05:     env = &apos;dev&apos;;&#10;06:   }&#10;07:   var config = {&#10;08:     &#10;09:     apiUrl: &apos;https://api.realworld.io/api/&apos;&#10;10:   }&#10;11:   if (env == &apos;dev&apos;) {&#10;12:     &#10;13:     config.userEmail = &apos;javierkarate1@test.com&apos;&#10;14:     config.userPassword = &apos;karate1234&apos;&#10;15: &#10;16:   } if (env == &apos;qa&apos;) {&#10;17: &#10;18:     config.userEmail = &apos;javierkarate2@test.com&apos;&#10;19:     config.userPassword = &apos;karate1234&apos;&#10;20:   }&#10;21: &#10;22:   var accesToken = karate.callSingle(&apos;classpath:helpers/CreateToken.feature&apos;, config).authToken&#10;23:   karate.configure(&apos;headers&apos;,{Authorization: &apos;Token &apos; + accesToken})&#10;24:   &#10;25: &#10;26:   return config;&#10;27: }&#10;&lt;&lt;&lt;&lt;&#10;org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: &#10;{&quot;errors&quot;:{&quot;email or password&quot;:[&quot;is invalid&quot;]}}&#10;classpath:helpers/CreateToken.feature:8&#10;- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)&#10;- &lt;js&gt;.fn(Unnamed:22)&#10;&#10;- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)&#10;- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)&#10;- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)&#10;- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)&#10;- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)&#10;- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)&#10;- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)&#10;&#10;classpath:conduitApp/feature/HomePage.feature:5&#10;classpath:conduitApp/feature/HomePage.feature:9&#10;classpath:conduitApp/feature/HomePage.feature:10&#10;classpath:conduitApp/feature/HomePage.feature:11&#10;classpath:conduitApp/feature/HomePage.feature:12&#10;classpath:conduitApp/feature/HomePage.feature:13&#10;classpath:conduitApp/feature/HomePage.feature:14&#10;classpath:conduitApp/feature/HomePage.feature:15&#10;classpath:conduitApp/feature/HomePage.feature:16" type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
>> classpath:conduitApp/feature/HomePage.feature:8
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:9
classpath:conduitApp/feature/HomePage.feature:10
classpath:conduitApp/feature/HomePage.feature:11
classpath:conduitApp/feature/HomePage.feature:12
classpath:conduitApp/feature/HomePage.feature:13
classpath:conduitApp/feature/HomePage.feature:14
classpath:conduitApp/feature/HomePage.feature:15
classpath:conduitApp/feature/HomePage.feature:16
]]></failure>
    <system-out><![CDATA[21:03:33.168 [main] INFO  com.intuit.karate - karate.env system property was: null 
21:03:33.173 [main] WARN  com.intuit.karate - callSingle() cached result is an exception
21:03:33.184 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:5
Given url apiUrl
>> classpath:conduitApp/feature/HomePage.feature:8
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
21:03:33.187 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:9
Given path 'tags'
>> classpath:conduitApp/feature/HomePage.feature:8
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:9
21:03:33.187 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:10
When method Get
>> classpath:conduitApp/feature/HomePage.feature:8
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:9
classpath:conduitApp/feature/HomePage.feature:10
21:03:33.188 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:11
Then status 200
>> classpath:conduitApp/feature/HomePage.feature:8
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:9
classpath:conduitApp/feature/HomePage.feature:10
classpath:conduitApp/feature/HomePage.feature:11
21:03:33.188 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:12
And match response.tags contains ['welcome', 'implementations']
>> classpath:conduitApp/feature/HomePage.feature:8
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:9
classpath:conduitApp/feature/HomePage.feature:10
classpath:conduitApp/feature/HomePage.feature:11
classpath:conduitApp/feature/HomePage.feature:12
21:03:33.188 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:13
And match response.tags !contains 'truck'
>> classpath:conduitApp/feature/HomePage.feature:8
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:9
classpath:conduitApp/feature/HomePage.feature:10
classpath:conduitApp/feature/HomePage.feature:11
classpath:conduitApp/feature/HomePage.feature:12
classpath:conduitApp/feature/HomePage.feature:13
21:03:33.188 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:14
And match response.tags contains any ['fish', 'dog', 'ipsum']
>> classpath:conduitApp/feature/HomePage.feature:8
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:9
classpath:conduitApp/feature/HomePage.feature:10
classpath:conduitApp/feature/HomePage.feature:11
classpath:conduitApp/feature/HomePage.feature:12
classpath:conduitApp/feature/HomePage.feature:13
classpath:conduitApp/feature/HomePage.feature:14
21:03:33.188 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:15
And match response.tags == '#array'
>> classpath:conduitApp/feature/HomePage.feature:8
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:9
classpath:conduitApp/feature/HomePage.feature:10
classpath:conduitApp/feature/HomePage.feature:11
classpath:conduitApp/feature/HomePage.feature:12
classpath:conduitApp/feature/HomePage.feature:13
classpath:conduitApp/feature/HomePage.feature:14
classpath:conduitApp/feature/HomePage.feature:15
21:03:33.189 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:16
And match each response.tags == "#string"
>> classpath:conduitApp/feature/HomePage.feature:8
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:9
classpath:conduitApp/feature/HomePage.feature:10
classpath:conduitApp/feature/HomePage.feature:11
classpath:conduitApp/feature/HomePage.feature:12
classpath:conduitApp/feature/HomePage.feature:13
classpath:conduitApp/feature/HomePage.feature:14
classpath:conduitApp/feature/HomePage.feature:15
classpath:conduitApp/feature/HomePage.feature:16
]]></system-out>
  </testcase>
  <testcase name="testAll[2][2]" classname="conduitApp.ConduitTest" time="0.046">
    <failure message="&gt;&gt; classpath:conduitApp/feature/HomePage.feature:19&#10;&gt;&gt; karate-config.js failed&#10;&gt;&gt; js failed:&#10;&gt;&gt;&gt;&gt;&#10;01: function fn() {&#10;02:   var env = karate.env; // get system property &apos;karate.env&apos;&#10;03:   karate.log(&apos;karate.env system property was:&apos;, env);&#10;04:   if (!env) {&#10;05:     env = &apos;dev&apos;;&#10;06:   }&#10;07:   var config = {&#10;08:     &#10;09:     apiUrl: &apos;https://api.realworld.io/api/&apos;&#10;10:   }&#10;11:   if (env == &apos;dev&apos;) {&#10;12:     &#10;13:     config.userEmail = &apos;javierkarate1@test.com&apos;&#10;14:     config.userPassword = &apos;karate1234&apos;&#10;15: &#10;16:   } if (env == &apos;qa&apos;) {&#10;17: &#10;18:     config.userEmail = &apos;javierkarate2@test.com&apos;&#10;19:     config.userPassword = &apos;karate1234&apos;&#10;20:   }&#10;21: &#10;22:   var accesToken = karate.callSingle(&apos;classpath:helpers/CreateToken.feature&apos;, config).authToken&#10;23:   karate.configure(&apos;headers&apos;,{Authorization: &apos;Token &apos; + accesToken})&#10;24:   &#10;25: &#10;26:   return config;&#10;27: }&#10;&lt;&lt;&lt;&lt;&#10;org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: &#10;{&quot;errors&quot;:{&quot;email or password&quot;:[&quot;is invalid&quot;]}}&#10;classpath:helpers/CreateToken.feature:8&#10;- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)&#10;- &lt;js&gt;.fn(Unnamed:22)&#10;&#10;js failed:&#10;&gt;&gt;&gt;&gt;&#10;01: function fn() {&#10;02:   var env = karate.env; // get system property &apos;karate.env&apos;&#10;03:   karate.log(&apos;karate.env system property was:&apos;, env);&#10;04:   if (!env) {&#10;05:     env = &apos;dev&apos;;&#10;06:   }&#10;07:   var config = {&#10;08:     &#10;09:     apiUrl: &apos;https://api.realworld.io/api/&apos;&#10;10:   }&#10;11:   if (env == &apos;dev&apos;) {&#10;12:     &#10;13:     config.userEmail = &apos;javierkarate1@test.com&apos;&#10;14:     config.userPassword = &apos;karate1234&apos;&#10;15: &#10;16:   } if (env == &apos;qa&apos;) {&#10;17: &#10;18:     config.userEmail = &apos;javierkarate2@test.com&apos;&#10;19:     config.userPassword = &apos;karate1234&apos;&#10;20:   }&#10;21: &#10;22:   var accesToken = karate.callSingle(&apos;classpath:helpers/CreateToken.feature&apos;, config).authToken&#10;23:   karate.configure(&apos;headers&apos;,{Authorization: &apos;Token &apos; + accesToken})&#10;24:   &#10;25: &#10;26:   return config;&#10;27: }&#10;&lt;&lt;&lt;&lt;&#10;com.intuit.karate.KarateException: js failed:&#10;&gt;&gt;&gt;&gt;&#10;01: function fn() {&#10;02:   var env = karate.env; // get system property &apos;karate.env&apos;&#10;03:   karate.log(&apos;karate.env system property was:&apos;, env);&#10;04:   if (!env) {&#10;05:     env = &apos;dev&apos;;&#10;06:   }&#10;07:   var config = {&#10;08:     &#10;09:     apiUrl: &apos;https://api.realworld.io/api/&apos;&#10;10:   }&#10;11:   if (env == &apos;dev&apos;) {&#10;12:     &#10;13:     config.userEmail = &apos;javierkarate1@test.com&apos;&#10;14:     config.userPassword = &apos;karate1234&apos;&#10;15: &#10;16:   } if (env == &apos;qa&apos;) {&#10;17: &#10;18:     config.userEmail = &apos;javierkarate2@test.com&apos;&#10;19:     config.userPassword = &apos;karate1234&apos;&#10;20:   }&#10;21: &#10;22:   var accesToken = karate.callSingle(&apos;classpath:helpers/CreateToken.feature&apos;, config).authToken&#10;23:   karate.configure(&apos;headers&apos;,{Authorization: &apos;Token &apos; + accesToken})&#10;24:   &#10;25: &#10;26:   return config;&#10;27: }&#10;&lt;&lt;&lt;&lt;&#10;org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: &#10;{&quot;errors&quot;:{&quot;email or password&quot;:[&quot;is invalid&quot;]}}&#10;classpath:helpers/CreateToken.feature:8&#10;- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)&#10;- &lt;js&gt;.fn(Unnamed:22)&#10;&#10;- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)&#10;- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)&#10;- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)&#10;- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)&#10;- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)&#10;- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)&#10;- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)&#10;&#10;classpath:conduitApp/feature/HomePage.feature:5&#10;classpath:conduitApp/feature/HomePage.feature:20&#10;classpath:conduitApp/feature/HomePage.feature:21&#10;classpath:conduitApp/feature/HomePage.feature:22&#10;classpath:conduitApp/feature/HomePage.feature:23&#10;classpath:conduitApp/feature/HomePage.feature:24&#10;classpath:conduitApp/feature/HomePage.feature:25&#10;classpath:conduitApp/feature/HomePage.feature:26&#10;classpath:conduitApp/feature/HomePage.feature:27&#10;classpath:conduitApp/feature/HomePage.feature:28&#10;classpath:conduitApp/feature/HomePage.feature:29&#10;classpath:conduitApp/feature/HomePage.feature:30&#10;classpath:conduitApp/feature/HomePage.feature:31&#10;classpath:conduitApp/feature/HomePage.feature:32&#10;classpath:conduitApp/feature/HomePage.feature:33" type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
>> classpath:conduitApp/feature/HomePage.feature:19
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:20
classpath:conduitApp/feature/HomePage.feature:21
classpath:conduitApp/feature/HomePage.feature:22
classpath:conduitApp/feature/HomePage.feature:23
classpath:conduitApp/feature/HomePage.feature:24
classpath:conduitApp/feature/HomePage.feature:25
classpath:conduitApp/feature/HomePage.feature:26
classpath:conduitApp/feature/HomePage.feature:27
classpath:conduitApp/feature/HomePage.feature:28
classpath:conduitApp/feature/HomePage.feature:29
classpath:conduitApp/feature/HomePage.feature:30
classpath:conduitApp/feature/HomePage.feature:31
classpath:conduitApp/feature/HomePage.feature:32
classpath:conduitApp/feature/HomePage.feature:33
]]></failure>
    <system-out><![CDATA[21:03:33.226 [main] INFO  com.intuit.karate - karate.env system property was: null 
21:03:33.228 [main] WARN  com.intuit.karate - callSingle() cached result is an exception
21:03:33.234 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:5
Given url apiUrl
>> classpath:conduitApp/feature/HomePage.feature:19
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
21:03:33.234 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:20
* def timeValidator = read('classpath:helpers/timeValidator.js')
>> classpath:conduitApp/feature/HomePage.feature:19
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:20
21:03:33.234 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:21
Given params { limit: 10, offset: 0}
>> classpath:conduitApp/feature/HomePage.feature:19
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:20
classpath:conduitApp/feature/HomePage.feature:21
21:03:33.234 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:22
Given path 'articles'
>> classpath:conduitApp/feature/HomePage.feature:19
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:20
classpath:conduitApp/feature/HomePage.feature:21
classpath:conduitApp/feature/HomePage.feature:22
21:03:33.234 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:23
When method Get
>> classpath:conduitApp/feature/HomePage.feature:19
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:20
classpath:conduitApp/feature/HomePage.feature:21
classpath:conduitApp/feature/HomePage.feature:22
classpath:conduitApp/feature/HomePage.feature:23
21:03:33.235 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:24
Then status 200
>> classpath:conduitApp/feature/HomePage.feature:19
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:20
classpath:conduitApp/feature/HomePage.feature:21
classpath:conduitApp/feature/HomePage.feature:22
classpath:conduitApp/feature/HomePage.feature:23
classpath:conduitApp/feature/HomePage.feature:24
21:03:33.235 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:25
And match response == { "articles":"#[10]", "articlesCount": 213}
>> classpath:conduitApp/feature/HomePage.feature:19
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:20
classpath:conduitApp/feature/HomePage.feature:21
classpath:conduitApp/feature/HomePage.feature:22
classpath:conduitApp/feature/HomePage.feature:23
classpath:conduitApp/feature/HomePage.feature:24
classpath:conduitApp/feature/HomePage.feature:25
21:03:33.235 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:26
And match response.articles[0].createdAt contains '2023'
>> classpath:conduitApp/feature/HomePage.feature:19
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:20
classpath:conduitApp/feature/HomePage.feature:21
classpath:conduitApp/feature/HomePage.feature:22
classpath:conduitApp/feature/HomePage.feature:23
classpath:conduitApp/feature/HomePage.feature:24
classpath:conduitApp/feature/HomePage.feature:25
classpath:conduitApp/feature/HomePage.feature:26
21:03:33.236 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:27
And match response.articles[*].favoritesCount contains 1
>> classpath:conduitApp/feature/HomePage.feature:19
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:20
classpath:conduitApp/feature/HomePage.feature:21
classpath:conduitApp/feature/HomePage.feature:22
classpath:conduitApp/feature/HomePage.feature:23
classpath:conduitApp/feature/HomePage.feature:24
classpath:conduitApp/feature/HomePage.feature:25
classpath:conduitApp/feature/HomePage.feature:26
classpath:conduitApp/feature/HomePage.feature:27
21:03:33.236 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:28
And match response.articles[*].author.bio contains null
>> classpath:conduitApp/feature/HomePage.feature:19
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:20
classpath:conduitApp/feature/HomePage.feature:21
classpath:conduitApp/feature/HomePage.feature:22
classpath:conduitApp/feature/HomePage.feature:23
classpath:conduitApp/feature/HomePage.feature:24
classpath:conduitApp/feature/HomePage.feature:25
classpath:conduitApp/feature/HomePage.feature:26
classpath:conduitApp/feature/HomePage.feature:27
classpath:conduitApp/feature/HomePage.feature:28
21:03:33.236 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:29
And match each response..following == false
>> classpath:conduitApp/feature/HomePage.feature:19
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:20
classpath:conduitApp/feature/HomePage.feature:21
classpath:conduitApp/feature/HomePage.feature:22
classpath:conduitApp/feature/HomePage.feature:23
classpath:conduitApp/feature/HomePage.feature:24
classpath:conduitApp/feature/HomePage.feature:25
classpath:conduitApp/feature/HomePage.feature:26
classpath:conduitApp/feature/HomePage.feature:27
classpath:conduitApp/feature/HomePage.feature:28
classpath:conduitApp/feature/HomePage.feature:29
21:03:33.236 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:30
And match each response..following == "#boolean"
>> classpath:conduitApp/feature/HomePage.feature:19
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:20
classpath:conduitApp/feature/HomePage.feature:21
classpath:conduitApp/feature/HomePage.feature:22
classpath:conduitApp/feature/HomePage.feature:23
classpath:conduitApp/feature/HomePage.feature:24
classpath:conduitApp/feature/HomePage.feature:25
classpath:conduitApp/feature/HomePage.feature:26
classpath:conduitApp/feature/HomePage.feature:27
classpath:conduitApp/feature/HomePage.feature:28
classpath:conduitApp/feature/HomePage.feature:29
classpath:conduitApp/feature/HomePage.feature:30
21:03:33.236 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:31
And match each response..favoritesCount == "#number"
>> classpath:conduitApp/feature/HomePage.feature:19
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:20
classpath:conduitApp/feature/HomePage.feature:21
classpath:conduitApp/feature/HomePage.feature:22
classpath:conduitApp/feature/HomePage.feature:23
classpath:conduitApp/feature/HomePage.feature:24
classpath:conduitApp/feature/HomePage.feature:25
classpath:conduitApp/feature/HomePage.feature:26
classpath:conduitApp/feature/HomePage.feature:27
classpath:conduitApp/feature/HomePage.feature:28
classpath:conduitApp/feature/HomePage.feature:29
classpath:conduitApp/feature/HomePage.feature:30
classpath:conduitApp/feature/HomePage.feature:31
21:03:33.236 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:32
And match each response..bio == "##string"
>> classpath:conduitApp/feature/HomePage.feature:19
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:20
classpath:conduitApp/feature/HomePage.feature:21
classpath:conduitApp/feature/HomePage.feature:22
classpath:conduitApp/feature/HomePage.feature:23
classpath:conduitApp/feature/HomePage.feature:24
classpath:conduitApp/feature/HomePage.feature:25
classpath:conduitApp/feature/HomePage.feature:26
classpath:conduitApp/feature/HomePage.feature:27
classpath:conduitApp/feature/HomePage.feature:28
classpath:conduitApp/feature/HomePage.feature:29
classpath:conduitApp/feature/HomePage.feature:30
classpath:conduitApp/feature/HomePage.feature:31
classpath:conduitApp/feature/HomePage.feature:32
21:03:33.237 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:33
And match each response.articles ==
"""
{
    "slug": "#string",
    "title": "#string",
    "description": "#string",
    "body": "#string",
    "tagList": "#array",
    "createdAt": "#? timeValidator(_)",
    "updatedAt": "#? timeValidator(_)",
    "favorited": '#boolean',
    "favoritesCount": "#number",
    "author": {
        "username": "#string",
        "bio": "##string",
        "image": "#string",
        "following": '#boolean'
    }
}
"""
>> classpath:conduitApp/feature/HomePage.feature:19
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:20
classpath:conduitApp/feature/HomePage.feature:21
classpath:conduitApp/feature/HomePage.feature:22
classpath:conduitApp/feature/HomePage.feature:23
classpath:conduitApp/feature/HomePage.feature:24
classpath:conduitApp/feature/HomePage.feature:25
classpath:conduitApp/feature/HomePage.feature:26
classpath:conduitApp/feature/HomePage.feature:27
classpath:conduitApp/feature/HomePage.feature:28
classpath:conduitApp/feature/HomePage.feature:29
classpath:conduitApp/feature/HomePage.feature:30
classpath:conduitApp/feature/HomePage.feature:31
classpath:conduitApp/feature/HomePage.feature:32
classpath:conduitApp/feature/HomePage.feature:33
]]></system-out>
  </testcase>
  <testcase name="testAll[2][3]" classname="conduitApp.ConduitTest" time="0.023">
    <failure message="&gt;&gt; classpath:conduitApp/feature/HomePage.feature:54&#10;&gt;&gt; karate-config.js failed&#10;&gt;&gt; js failed:&#10;&gt;&gt;&gt;&gt;&#10;01: function fn() {&#10;02:   var env = karate.env; // get system property &apos;karate.env&apos;&#10;03:   karate.log(&apos;karate.env system property was:&apos;, env);&#10;04:   if (!env) {&#10;05:     env = &apos;dev&apos;;&#10;06:   }&#10;07:   var config = {&#10;08:     &#10;09:     apiUrl: &apos;https://api.realworld.io/api/&apos;&#10;10:   }&#10;11:   if (env == &apos;dev&apos;) {&#10;12:     &#10;13:     config.userEmail = &apos;javierkarate1@test.com&apos;&#10;14:     config.userPassword = &apos;karate1234&apos;&#10;15: &#10;16:   } if (env == &apos;qa&apos;) {&#10;17: &#10;18:     config.userEmail = &apos;javierkarate2@test.com&apos;&#10;19:     config.userPassword = &apos;karate1234&apos;&#10;20:   }&#10;21: &#10;22:   var accesToken = karate.callSingle(&apos;classpath:helpers/CreateToken.feature&apos;, config).authToken&#10;23:   karate.configure(&apos;headers&apos;,{Authorization: &apos;Token &apos; + accesToken})&#10;24:   &#10;25: &#10;26:   return config;&#10;27: }&#10;&lt;&lt;&lt;&lt;&#10;org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: &#10;{&quot;errors&quot;:{&quot;email or password&quot;:[&quot;is invalid&quot;]}}&#10;classpath:helpers/CreateToken.feature:8&#10;- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)&#10;- &lt;js&gt;.fn(Unnamed:22)&#10;&#10;js failed:&#10;&gt;&gt;&gt;&gt;&#10;01: function fn() {&#10;02:   var env = karate.env; // get system property &apos;karate.env&apos;&#10;03:   karate.log(&apos;karate.env system property was:&apos;, env);&#10;04:   if (!env) {&#10;05:     env = &apos;dev&apos;;&#10;06:   }&#10;07:   var config = {&#10;08:     &#10;09:     apiUrl: &apos;https://api.realworld.io/api/&apos;&#10;10:   }&#10;11:   if (env == &apos;dev&apos;) {&#10;12:     &#10;13:     config.userEmail = &apos;javierkarate1@test.com&apos;&#10;14:     config.userPassword = &apos;karate1234&apos;&#10;15: &#10;16:   } if (env == &apos;qa&apos;) {&#10;17: &#10;18:     config.userEmail = &apos;javierkarate2@test.com&apos;&#10;19:     config.userPassword = &apos;karate1234&apos;&#10;20:   }&#10;21: &#10;22:   var accesToken = karate.callSingle(&apos;classpath:helpers/CreateToken.feature&apos;, config).authToken&#10;23:   karate.configure(&apos;headers&apos;,{Authorization: &apos;Token &apos; + accesToken})&#10;24:   &#10;25: &#10;26:   return config;&#10;27: }&#10;&lt;&lt;&lt;&lt;&#10;com.intuit.karate.KarateException: js failed:&#10;&gt;&gt;&gt;&gt;&#10;01: function fn() {&#10;02:   var env = karate.env; // get system property &apos;karate.env&apos;&#10;03:   karate.log(&apos;karate.env system property was:&apos;, env);&#10;04:   if (!env) {&#10;05:     env = &apos;dev&apos;;&#10;06:   }&#10;07:   var config = {&#10;08:     &#10;09:     apiUrl: &apos;https://api.realworld.io/api/&apos;&#10;10:   }&#10;11:   if (env == &apos;dev&apos;) {&#10;12:     &#10;13:     config.userEmail = &apos;javierkarate1@test.com&apos;&#10;14:     config.userPassword = &apos;karate1234&apos;&#10;15: &#10;16:   } if (env == &apos;qa&apos;) {&#10;17: &#10;18:     config.userEmail = &apos;javierkarate2@test.com&apos;&#10;19:     config.userPassword = &apos;karate1234&apos;&#10;20:   }&#10;21: &#10;22:   var accesToken = karate.callSingle(&apos;classpath:helpers/CreateToken.feature&apos;, config).authToken&#10;23:   karate.configure(&apos;headers&apos;,{Authorization: &apos;Token &apos; + accesToken})&#10;24:   &#10;25: &#10;26:   return config;&#10;27: }&#10;&lt;&lt;&lt;&lt;&#10;org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: &#10;{&quot;errors&quot;:{&quot;email or password&quot;:[&quot;is invalid&quot;]}}&#10;classpath:helpers/CreateToken.feature:8&#10;- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)&#10;- &lt;js&gt;.fn(Unnamed:22)&#10;&#10;- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)&#10;- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)&#10;- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)&#10;- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)&#10;- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)&#10;- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)&#10;- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)&#10;&#10;classpath:conduitApp/feature/HomePage.feature:5&#10;classpath:conduitApp/feature/HomePage.feature:55&#10;classpath:conduitApp/feature/HomePage.feature:56&#10;classpath:conduitApp/feature/HomePage.feature:57" type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
>> classpath:conduitApp/feature/HomePage.feature:54
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:55
classpath:conduitApp/feature/HomePage.feature:56
classpath:conduitApp/feature/HomePage.feature:57
]]></failure>
    <system-out><![CDATA[21:03:33.255 [main] INFO  com.intuit.karate - karate.env system property was: null 
21:03:33.256 [main] WARN  com.intuit.karate - callSingle() cached result is an exception
21:03:33.263 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:5
Given url apiUrl
>> classpath:conduitApp/feature/HomePage.feature:54
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
21:03:33.263 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:55
* def foo = 10
>> classpath:conduitApp/feature/HomePage.feature:54
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:55
21:03:33.264 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:56
* def json = {"bar": #(foo+'')}
>> classpath:conduitApp/feature/HomePage.feature:54
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:55
classpath:conduitApp/feature/HomePage.feature:56
21:03:33.264 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:57
* match json == {"bar": '10'}
>> classpath:conduitApp/feature/HomePage.feature:54
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:55
classpath:conduitApp/feature/HomePage.feature:56
classpath:conduitApp/feature/HomePage.feature:57
]]></system-out>
  </testcase>
  <testcase name="testAll[2][4]" classname="conduitApp.ConduitTest" time="0.233">
    <failure message="&gt;&gt; classpath:conduitApp/feature/HomePage.feature:59&#10;&gt;&gt; karate-config.js failed&#10;&gt;&gt; js failed:&#10;&gt;&gt;&gt;&gt;&#10;01: function fn() {&#10;02:   var env = karate.env; // get system property &apos;karate.env&apos;&#10;03:   karate.log(&apos;karate.env system property was:&apos;, env);&#10;04:   if (!env) {&#10;05:     env = &apos;dev&apos;;&#10;06:   }&#10;07:   var config = {&#10;08:     &#10;09:     apiUrl: &apos;https://api.realworld.io/api/&apos;&#10;10:   }&#10;11:   if (env == &apos;dev&apos;) {&#10;12:     &#10;13:     config.userEmail = &apos;javierkarate1@test.com&apos;&#10;14:     config.userPassword = &apos;karate1234&apos;&#10;15: &#10;16:   } if (env == &apos;qa&apos;) {&#10;17: &#10;18:     config.userEmail = &apos;javierkarate2@test.com&apos;&#10;19:     config.userPassword = &apos;karate1234&apos;&#10;20:   }&#10;21: &#10;22:   var accesToken = karate.callSingle(&apos;classpath:helpers/CreateToken.feature&apos;, config).authToken&#10;23:   karate.configure(&apos;headers&apos;,{Authorization: &apos;Token &apos; + accesToken})&#10;24:   &#10;25: &#10;26:   return config;&#10;27: }&#10;&lt;&lt;&lt;&lt;&#10;org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: &#10;{&quot;errors&quot;:{&quot;email or password&quot;:[&quot;is invalid&quot;]}}&#10;classpath:helpers/CreateToken.feature:8&#10;- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)&#10;- &lt;js&gt;.fn(Unnamed:22)&#10;&#10;js failed:&#10;&gt;&gt;&gt;&gt;&#10;01: function fn() {&#10;02:   var env = karate.env; // get system property &apos;karate.env&apos;&#10;03:   karate.log(&apos;karate.env system property was:&apos;, env);&#10;04:   if (!env) {&#10;05:     env = &apos;dev&apos;;&#10;06:   }&#10;07:   var config = {&#10;08:     &#10;09:     apiUrl: &apos;https://api.realworld.io/api/&apos;&#10;10:   }&#10;11:   if (env == &apos;dev&apos;) {&#10;12:     &#10;13:     config.userEmail = &apos;javierkarate1@test.com&apos;&#10;14:     config.userPassword = &apos;karate1234&apos;&#10;15: &#10;16:   } if (env == &apos;qa&apos;) {&#10;17: &#10;18:     config.userEmail = &apos;javierkarate2@test.com&apos;&#10;19:     config.userPassword = &apos;karate1234&apos;&#10;20:   }&#10;21: &#10;22:   var accesToken = karate.callSingle(&apos;classpath:helpers/CreateToken.feature&apos;, config).authToken&#10;23:   karate.configure(&apos;headers&apos;,{Authorization: &apos;Token &apos; + accesToken})&#10;24:   &#10;25: &#10;26:   return config;&#10;27: }&#10;&lt;&lt;&lt;&lt;&#10;com.intuit.karate.KarateException: js failed:&#10;&gt;&gt;&gt;&gt;&#10;01: function fn() {&#10;02:   var env = karate.env; // get system property &apos;karate.env&apos;&#10;03:   karate.log(&apos;karate.env system property was:&apos;, env);&#10;04:   if (!env) {&#10;05:     env = &apos;dev&apos;;&#10;06:   }&#10;07:   var config = {&#10;08:     &#10;09:     apiUrl: &apos;https://api.realworld.io/api/&apos;&#10;10:   }&#10;11:   if (env == &apos;dev&apos;) {&#10;12:     &#10;13:     config.userEmail = &apos;javierkarate1@test.com&apos;&#10;14:     config.userPassword = &apos;karate1234&apos;&#10;15: &#10;16:   } if (env == &apos;qa&apos;) {&#10;17: &#10;18:     config.userEmail = &apos;javierkarate2@test.com&apos;&#10;19:     config.userPassword = &apos;karate1234&apos;&#10;20:   }&#10;21: &#10;22:   var accesToken = karate.callSingle(&apos;classpath:helpers/CreateToken.feature&apos;, config).authToken&#10;23:   karate.configure(&apos;headers&apos;,{Authorization: &apos;Token &apos; + accesToken})&#10;24:   &#10;25: &#10;26:   return config;&#10;27: }&#10;&lt;&lt;&lt;&lt;&#10;org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: &#10;{&quot;errors&quot;:{&quot;email or password&quot;:[&quot;is invalid&quot;]}}&#10;classpath:helpers/CreateToken.feature:8&#10;- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)&#10;- &lt;js&gt;.fn(Unnamed:22)&#10;&#10;- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)&#10;- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)&#10;- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)&#10;- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)&#10;- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)&#10;- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)&#10;- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)&#10;&#10;classpath:conduitApp/feature/HomePage.feature:5&#10;classpath:conduitApp/feature/HomePage.feature:60&#10;classpath:conduitApp/feature/HomePage.feature:61&#10;classpath:conduitApp/feature/HomePage.feature:62" type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
>> classpath:conduitApp/feature/HomePage.feature:59
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:60
classpath:conduitApp/feature/HomePage.feature:61
classpath:conduitApp/feature/HomePage.feature:62
]]></failure>
    <system-out><![CDATA[21:03:33.277 [main] INFO  com.intuit.karate - karate.env system property was: null 
21:03:33.278 [main] WARN  com.intuit.karate - callSingle() cached result is an exception
21:03:33.284 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:5
Given url apiUrl
>> classpath:conduitApp/feature/HomePage.feature:59
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
21:03:33.285 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:60
* def foo = '10'
>> classpath:conduitApp/feature/HomePage.feature:59
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:60
21:03:33.285 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:61
* def json = {"Bar": #(foo*1)}
>> classpath:conduitApp/feature/HomePage.feature:59
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:60
classpath:conduitApp/feature/HomePage.feature:61
21:03:33.285 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:62
* match json == {"bar": 10}
>> classpath:conduitApp/feature/HomePage.feature:59
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:60
classpath:conduitApp/feature/HomePage.feature:61
classpath:conduitApp/feature/HomePage.feature:62
---------------------------------------------------------
feature: classpath:conduitApp/feature/HomePage.feature
scenarios:  4 | passed:  0 | failed:  4 | time: 0,0000
---------------------------------------------------------

]]></system-out>
  </testcase>
  <testcase name="testAll[3][1]" classname="conduitApp.ConduitTest" time="0.031">
    <failure message="&gt;&gt; classpath:conduitApp/feature/Hooks.feature:19&#10;&gt;&gt; karate-config.js failed&#10;&gt;&gt; js failed:&#10;&gt;&gt;&gt;&gt;&#10;01: function fn() {&#10;02:   var env = karate.env; // get system property &apos;karate.env&apos;&#10;03:   karate.log(&apos;karate.env system property was:&apos;, env);&#10;04:   if (!env) {&#10;05:     env = &apos;dev&apos;;&#10;06:   }&#10;07:   var config = {&#10;08:     &#10;09:     apiUrl: &apos;https://api.realworld.io/api/&apos;&#10;10:   }&#10;11:   if (env == &apos;dev&apos;) {&#10;12:     &#10;13:     config.userEmail = &apos;javierkarate1@test.com&apos;&#10;14:     config.userPassword = &apos;karate1234&apos;&#10;15: &#10;16:   } if (env == &apos;qa&apos;) {&#10;17: &#10;18:     config.userEmail = &apos;javierkarate2@test.com&apos;&#10;19:     config.userPassword = &apos;karate1234&apos;&#10;20:   }&#10;21: &#10;22:   var accesToken = karate.callSingle(&apos;classpath:helpers/CreateToken.feature&apos;, config).authToken&#10;23:   karate.configure(&apos;headers&apos;,{Authorization: &apos;Token &apos; + accesToken})&#10;24:   &#10;25: &#10;26:   return config;&#10;27: }&#10;&lt;&lt;&lt;&lt;&#10;org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: &#10;{&quot;errors&quot;:{&quot;email or password&quot;:[&quot;is invalid&quot;]}}&#10;classpath:helpers/CreateToken.feature:8&#10;- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)&#10;- &lt;js&gt;.fn(Unnamed:22)&#10;&#10;js failed:&#10;&gt;&gt;&gt;&gt;&#10;01: function fn() {&#10;02:   var env = karate.env; // get system property &apos;karate.env&apos;&#10;03:   karate.log(&apos;karate.env system property was:&apos;, env);&#10;04:   if (!env) {&#10;05:     env = &apos;dev&apos;;&#10;06:   }&#10;07:   var config = {&#10;08:     &#10;09:     apiUrl: &apos;https://api.realworld.io/api/&apos;&#10;10:   }&#10;11:   if (env == &apos;dev&apos;) {&#10;12:     &#10;13:     config.userEmail = &apos;javierkarate1@test.com&apos;&#10;14:     config.userPassword = &apos;karate1234&apos;&#10;15: &#10;16:   } if (env == &apos;qa&apos;) {&#10;17: &#10;18:     config.userEmail = &apos;javierkarate2@test.com&apos;&#10;19:     config.userPassword = &apos;karate1234&apos;&#10;20:   }&#10;21: &#10;22:   var accesToken = karate.callSingle(&apos;classpath:helpers/CreateToken.feature&apos;, config).authToken&#10;23:   karate.configure(&apos;headers&apos;,{Authorization: &apos;Token &apos; + accesToken})&#10;24:   &#10;25: &#10;26:   return config;&#10;27: }&#10;&lt;&lt;&lt;&lt;&#10;com.intuit.karate.KarateException: js failed:&#10;&gt;&gt;&gt;&gt;&#10;01: function fn() {&#10;02:   var env = karate.env; // get system property &apos;karate.env&apos;&#10;03:   karate.log(&apos;karate.env system property was:&apos;, env);&#10;04:   if (!env) {&#10;05:     env = &apos;dev&apos;;&#10;06:   }&#10;07:   var config = {&#10;08:     &#10;09:     apiUrl: &apos;https://api.realworld.io/api/&apos;&#10;10:   }&#10;11:   if (env == &apos;dev&apos;) {&#10;12:     &#10;13:     config.userEmail = &apos;javierkarate1@test.com&apos;&#10;14:     config.userPassword = &apos;karate1234&apos;&#10;15: &#10;16:   } if (env == &apos;qa&apos;) {&#10;17: &#10;18:     config.userEmail = &apos;javierkarate2@test.com&apos;&#10;19:     config.userPassword = &apos;karate1234&apos;&#10;20:   }&#10;21: &#10;22:   var accesToken = karate.callSingle(&apos;classpath:helpers/CreateToken.feature&apos;, config).authToken&#10;23:   karate.configure(&apos;headers&apos;,{Authorization: &apos;Token &apos; + accesToken})&#10;24:   &#10;25: &#10;26:   return config;&#10;27: }&#10;&lt;&lt;&lt;&lt;&#10;org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: &#10;{&quot;errors&quot;:{&quot;email or password&quot;:[&quot;is invalid&quot;]}}&#10;classpath:helpers/CreateToken.feature:8&#10;- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)&#10;- &lt;js&gt;.fn(Unnamed:22)&#10;&#10;- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)&#10;- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)&#10;- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)&#10;- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)&#10;- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)&#10;- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)&#10;- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)&#10;&#10;classpath:conduitApp/feature/Hooks.feature:6&#10;classpath:conduitApp/feature/Hooks.feature:8&#10;classpath:conduitApp/feature/Hooks.feature:20&#10;classpath:conduitApp/feature/Hooks.feature:21" type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
>> classpath:conduitApp/feature/Hooks.feature:19
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Hooks.feature:6
classpath:conduitApp/feature/Hooks.feature:8
classpath:conduitApp/feature/Hooks.feature:20
classpath:conduitApp/feature/Hooks.feature:21
]]></failure>
    <system-out><![CDATA[21:03:33.519 [main] INFO  com.intuit.karate - karate.env system property was: null 
21:03:33.520 [main] WARN  com.intuit.karate - callSingle() cached result is an exception
21:03:33.532 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Hooks.feature:6
* def result = callonce read('classpath:helpers/Dummy.feature')
>> classpath:conduitApp/feature/Hooks.feature:19
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Hooks.feature:6
21:03:33.532 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Hooks.feature:8
* def username = result.username
>> classpath:conduitApp/feature/Hooks.feature:19
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Hooks.feature:6
classpath:conduitApp/feature/Hooks.feature:8
21:03:33.532 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Hooks.feature:20
* print username
>> classpath:conduitApp/feature/Hooks.feature:19
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Hooks.feature:6
classpath:conduitApp/feature/Hooks.feature:8
classpath:conduitApp/feature/Hooks.feature:20
21:03:33.532 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Hooks.feature:21
* print 'This is first scenario'
>> classpath:conduitApp/feature/Hooks.feature:19
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Hooks.feature:6
classpath:conduitApp/feature/Hooks.feature:8
classpath:conduitApp/feature/Hooks.feature:20
classpath:conduitApp/feature/Hooks.feature:21
]]></system-out>
  </testcase>
  <testcase name="testAll[3][2]" classname="conduitApp.ConduitTest" time="0.095">
    <failure message="&gt;&gt; classpath:conduitApp/feature/Hooks.feature:23&#10;&gt;&gt; karate-config.js failed&#10;&gt;&gt; js failed:&#10;&gt;&gt;&gt;&gt;&#10;01: function fn() {&#10;02:   var env = karate.env; // get system property &apos;karate.env&apos;&#10;03:   karate.log(&apos;karate.env system property was:&apos;, env);&#10;04:   if (!env) {&#10;05:     env = &apos;dev&apos;;&#10;06:   }&#10;07:   var config = {&#10;08:     &#10;09:     apiUrl: &apos;https://api.realworld.io/api/&apos;&#10;10:   }&#10;11:   if (env == &apos;dev&apos;) {&#10;12:     &#10;13:     config.userEmail = &apos;javierkarate1@test.com&apos;&#10;14:     config.userPassword = &apos;karate1234&apos;&#10;15: &#10;16:   } if (env == &apos;qa&apos;) {&#10;17: &#10;18:     config.userEmail = &apos;javierkarate2@test.com&apos;&#10;19:     config.userPassword = &apos;karate1234&apos;&#10;20:   }&#10;21: &#10;22:   var accesToken = karate.callSingle(&apos;classpath:helpers/CreateToken.feature&apos;, config).authToken&#10;23:   karate.configure(&apos;headers&apos;,{Authorization: &apos;Token &apos; + accesToken})&#10;24:   &#10;25: &#10;26:   return config;&#10;27: }&#10;&lt;&lt;&lt;&lt;&#10;org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: &#10;{&quot;errors&quot;:{&quot;email or password&quot;:[&quot;is invalid&quot;]}}&#10;classpath:helpers/CreateToken.feature:8&#10;- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)&#10;- &lt;js&gt;.fn(Unnamed:22)&#10;&#10;js failed:&#10;&gt;&gt;&gt;&gt;&#10;01: function fn() {&#10;02:   var env = karate.env; // get system property &apos;karate.env&apos;&#10;03:   karate.log(&apos;karate.env system property was:&apos;, env);&#10;04:   if (!env) {&#10;05:     env = &apos;dev&apos;;&#10;06:   }&#10;07:   var config = {&#10;08:     &#10;09:     apiUrl: &apos;https://api.realworld.io/api/&apos;&#10;10:   }&#10;11:   if (env == &apos;dev&apos;) {&#10;12:     &#10;13:     config.userEmail = &apos;javierkarate1@test.com&apos;&#10;14:     config.userPassword = &apos;karate1234&apos;&#10;15: &#10;16:   } if (env == &apos;qa&apos;) {&#10;17: &#10;18:     config.userEmail = &apos;javierkarate2@test.com&apos;&#10;19:     config.userPassword = &apos;karate1234&apos;&#10;20:   }&#10;21: &#10;22:   var accesToken = karate.callSingle(&apos;classpath:helpers/CreateToken.feature&apos;, config).authToken&#10;23:   karate.configure(&apos;headers&apos;,{Authorization: &apos;Token &apos; + accesToken})&#10;24:   &#10;25: &#10;26:   return config;&#10;27: }&#10;&lt;&lt;&lt;&lt;&#10;com.intuit.karate.KarateException: js failed:&#10;&gt;&gt;&gt;&gt;&#10;01: function fn() {&#10;02:   var env = karate.env; // get system property &apos;karate.env&apos;&#10;03:   karate.log(&apos;karate.env system property was:&apos;, env);&#10;04:   if (!env) {&#10;05:     env = &apos;dev&apos;;&#10;06:   }&#10;07:   var config = {&#10;08:     &#10;09:     apiUrl: &apos;https://api.realworld.io/api/&apos;&#10;10:   }&#10;11:   if (env == &apos;dev&apos;) {&#10;12:     &#10;13:     config.userEmail = &apos;javierkarate1@test.com&apos;&#10;14:     config.userPassword = &apos;karate1234&apos;&#10;15: &#10;16:   } if (env == &apos;qa&apos;) {&#10;17: &#10;18:     config.userEmail = &apos;javierkarate2@test.com&apos;&#10;19:     config.userPassword = &apos;karate1234&apos;&#10;20:   }&#10;21: &#10;22:   var accesToken = karate.callSingle(&apos;classpath:helpers/CreateToken.feature&apos;, config).authToken&#10;23:   karate.configure(&apos;headers&apos;,{Authorization: &apos;Token &apos; + accesToken})&#10;24:   &#10;25: &#10;26:   return config;&#10;27: }&#10;&lt;&lt;&lt;&lt;&#10;org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: &#10;{&quot;errors&quot;:{&quot;email or password&quot;:[&quot;is invalid&quot;]}}&#10;classpath:helpers/CreateToken.feature:8&#10;- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)&#10;- &lt;js&gt;.fn(Unnamed:22)&#10;&#10;- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)&#10;- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)&#10;- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)&#10;- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)&#10;- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)&#10;- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)&#10;- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)&#10;&#10;classpath:conduitApp/feature/Hooks.feature:6&#10;classpath:conduitApp/feature/Hooks.feature:8&#10;classpath:conduitApp/feature/Hooks.feature:24&#10;classpath:conduitApp/feature/Hooks.feature:25" type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
>> classpath:conduitApp/feature/Hooks.feature:23
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Hooks.feature:6
classpath:conduitApp/feature/Hooks.feature:8
classpath:conduitApp/feature/Hooks.feature:24
classpath:conduitApp/feature/Hooks.feature:25
]]></failure>
    <system-out><![CDATA[21:03:33.541 [main] INFO  com.intuit.karate - karate.env system property was: null 
21:03:33.541 [main] WARN  com.intuit.karate - callSingle() cached result is an exception
21:03:33.546 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Hooks.feature:6
* def result = callonce read('classpath:helpers/Dummy.feature')
>> classpath:conduitApp/feature/Hooks.feature:23
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Hooks.feature:6
21:03:33.547 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Hooks.feature:8
* def username = result.username
>> classpath:conduitApp/feature/Hooks.feature:23
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Hooks.feature:6
classpath:conduitApp/feature/Hooks.feature:8
21:03:33.548 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Hooks.feature:24
* print username
>> classpath:conduitApp/feature/Hooks.feature:23
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Hooks.feature:6
classpath:conduitApp/feature/Hooks.feature:8
classpath:conduitApp/feature/Hooks.feature:24
21:03:33.548 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Hooks.feature:25
* print 'This is second scenario'
>> classpath:conduitApp/feature/Hooks.feature:23
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Hooks.feature:6
classpath:conduitApp/feature/Hooks.feature:8
classpath:conduitApp/feature/Hooks.feature:24
classpath:conduitApp/feature/Hooks.feature:25
---------------------------------------------------------
feature: classpath:conduitApp/feature/Hooks.feature
scenarios:  2 | passed:  0 | failed:  2 | time: 0,0000
---------------------------------------------------------

]]></system-out>
  </testcase>
  <testcase name="testAll[4][1]" classname="conduitApp.ConduitTest" time="0.023">
    <failure message="&gt;&gt; classpath:conduitApp/feature/SignUp.feature:11&#10;&gt;&gt; karate-config.js failed&#10;&gt;&gt; js failed:&#10;&gt;&gt;&gt;&gt;&#10;01: function fn() {&#10;02:   var env = karate.env; // get system property &apos;karate.env&apos;&#10;03:   karate.log(&apos;karate.env system property was:&apos;, env);&#10;04:   if (!env) {&#10;05:     env = &apos;dev&apos;;&#10;06:   }&#10;07:   var config = {&#10;08:     &#10;09:     apiUrl: &apos;https://api.realworld.io/api/&apos;&#10;10:   }&#10;11:   if (env == &apos;dev&apos;) {&#10;12:     &#10;13:     config.userEmail = &apos;javierkarate1@test.com&apos;&#10;14:     config.userPassword = &apos;karate1234&apos;&#10;15: &#10;16:   } if (env == &apos;qa&apos;) {&#10;17: &#10;18:     config.userEmail = &apos;javierkarate2@test.com&apos;&#10;19:     config.userPassword = &apos;karate1234&apos;&#10;20:   }&#10;21: &#10;22:   var accesToken = karate.callSingle(&apos;classpath:helpers/CreateToken.feature&apos;, config).authToken&#10;23:   karate.configure(&apos;headers&apos;,{Authorization: &apos;Token &apos; + accesToken})&#10;24:   &#10;25: &#10;26:   return config;&#10;27: }&#10;&lt;&lt;&lt;&lt;&#10;org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: &#10;{&quot;errors&quot;:{&quot;email or password&quot;:[&quot;is invalid&quot;]}}&#10;classpath:helpers/CreateToken.feature:8&#10;- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)&#10;- &lt;js&gt;.fn(Unnamed:22)&#10;&#10;js failed:&#10;&gt;&gt;&gt;&gt;&#10;01: function fn() {&#10;02:   var env = karate.env; // get system property &apos;karate.env&apos;&#10;03:   karate.log(&apos;karate.env system property was:&apos;, env);&#10;04:   if (!env) {&#10;05:     env = &apos;dev&apos;;&#10;06:   }&#10;07:   var config = {&#10;08:     &#10;09:     apiUrl: &apos;https://api.realworld.io/api/&apos;&#10;10:   }&#10;11:   if (env == &apos;dev&apos;) {&#10;12:     &#10;13:     config.userEmail = &apos;javierkarate1@test.com&apos;&#10;14:     config.userPassword = &apos;karate1234&apos;&#10;15: &#10;16:   } if (env == &apos;qa&apos;) {&#10;17: &#10;18:     config.userEmail = &apos;javierkarate2@test.com&apos;&#10;19:     config.userPassword = &apos;karate1234&apos;&#10;20:   }&#10;21: &#10;22:   var accesToken = karate.callSingle(&apos;classpath:helpers/CreateToken.feature&apos;, config).authToken&#10;23:   karate.configure(&apos;headers&apos;,{Authorization: &apos;Token &apos; + accesToken})&#10;24:   &#10;25: &#10;26:   return config;&#10;27: }&#10;&lt;&lt;&lt;&lt;&#10;com.intuit.karate.KarateException: js failed:&#10;&gt;&gt;&gt;&gt;&#10;01: function fn() {&#10;02:   var env = karate.env; // get system property &apos;karate.env&apos;&#10;03:   karate.log(&apos;karate.env system property was:&apos;, env);&#10;04:   if (!env) {&#10;05:     env = &apos;dev&apos;;&#10;06:   }&#10;07:   var config = {&#10;08:     &#10;09:     apiUrl: &apos;https://api.realworld.io/api/&apos;&#10;10:   }&#10;11:   if (env == &apos;dev&apos;) {&#10;12:     &#10;13:     config.userEmail = &apos;javierkarate1@test.com&apos;&#10;14:     config.userPassword = &apos;karate1234&apos;&#10;15: &#10;16:   } if (env == &apos;qa&apos;) {&#10;17: &#10;18:     config.userEmail = &apos;javierkarate2@test.com&apos;&#10;19:     config.userPassword = &apos;karate1234&apos;&#10;20:   }&#10;21: &#10;22:   var accesToken = karate.callSingle(&apos;classpath:helpers/CreateToken.feature&apos;, config).authToken&#10;23:   karate.configure(&apos;headers&apos;,{Authorization: &apos;Token &apos; + accesToken})&#10;24:   &#10;25: &#10;26:   return config;&#10;27: }&#10;&lt;&lt;&lt;&lt;&#10;org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: &#10;{&quot;errors&quot;:{&quot;email or password&quot;:[&quot;is invalid&quot;]}}&#10;classpath:helpers/CreateToken.feature:8&#10;- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)&#10;- &lt;js&gt;.fn(Unnamed:22)&#10;&#10;- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)&#10;- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)&#10;- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)&#10;- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)&#10;- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)&#10;- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)&#10;- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)&#10;&#10;classpath:conduitApp/feature/SignUp.feature:6&#10;classpath:conduitApp/feature/SignUp.feature:7&#10;classpath:conduitApp/feature/SignUp.feature:8&#10;classpath:conduitApp/feature/SignUp.feature:9&#10;classpath:conduitApp/feature/SignUp.feature:12&#10;classpath:conduitApp/feature/SignUp.feature:13&#10;classpath:conduitApp/feature/SignUp.feature:15&#10;classpath:conduitApp/feature/SignUp.feature:25&#10;classpath:conduitApp/feature/SignUp.feature:26&#10;classpath:conduitApp/feature/SignUp.feature:27" type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
>> classpath:conduitApp/feature/SignUp.feature:11
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
classpath:conduitApp/feature/SignUp.feature:7
classpath:conduitApp/feature/SignUp.feature:8
classpath:conduitApp/feature/SignUp.feature:9
classpath:conduitApp/feature/SignUp.feature:12
classpath:conduitApp/feature/SignUp.feature:13
classpath:conduitApp/feature/SignUp.feature:15
classpath:conduitApp/feature/SignUp.feature:25
classpath:conduitApp/feature/SignUp.feature:26
classpath:conduitApp/feature/SignUp.feature:27
]]></failure>
    <system-out><![CDATA[21:03:33.641 [main] INFO  com.intuit.karate - karate.env system property was: null 
21:03:33.642 [main] WARN  com.intuit.karate - callSingle() cached result is an exception
21:03:33.644 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/SignUp.feature:6
* def dataGenerator = Java.type('helpers.DataGenerator')
>> classpath:conduitApp/feature/SignUp.feature:11
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
21:03:33.645 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/SignUp.feature:7
Given url apiUrl
>> classpath:conduitApp/feature/SignUp.feature:11
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
classpath:conduitApp/feature/SignUp.feature:7
21:03:33.645 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/SignUp.feature:8
* def randomEmail = dataGenerator.getRandomEmail()
>> classpath:conduitApp/feature/SignUp.feature:11
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
classpath:conduitApp/feature/SignUp.feature:7
classpath:conduitApp/feature/SignUp.feature:8
21:03:33.645 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/SignUp.feature:9
* def randomUserName = dataGenerator.getRandomUserName()
>> classpath:conduitApp/feature/SignUp.feature:11
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
classpath:conduitApp/feature/SignUp.feature:7
classpath:conduitApp/feature/SignUp.feature:8
classpath:conduitApp/feature/SignUp.feature:9
21:03:33.645 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/SignUp.feature:12
Given path 'users'
>> classpath:conduitApp/feature/SignUp.feature:11
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
classpath:conduitApp/feature/SignUp.feature:7
classpath:conduitApp/feature/SignUp.feature:8
classpath:conduitApp/feature/SignUp.feature:9
classpath:conduitApp/feature/SignUp.feature:12
21:03:33.645 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/SignUp.feature:13
* print randomEmail
>> classpath:conduitApp/feature/SignUp.feature:11
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
classpath:conduitApp/feature/SignUp.feature:7
classpath:conduitApp/feature/SignUp.feature:8
classpath:conduitApp/feature/SignUp.feature:9
classpath:conduitApp/feature/SignUp.feature:12
classpath:conduitApp/feature/SignUp.feature:13
21:03:33.645 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/SignUp.feature:15
And request
"""
{
    "user": {
        "email": #(randomEmail),
        "password": "karate1234",
        "username": #(randomUserName)
    }
}
"""
>> classpath:conduitApp/feature/SignUp.feature:11
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
classpath:conduitApp/feature/SignUp.feature:7
classpath:conduitApp/feature/SignUp.feature:8
classpath:conduitApp/feature/SignUp.feature:9
classpath:conduitApp/feature/SignUp.feature:12
classpath:conduitApp/feature/SignUp.feature:13
classpath:conduitApp/feature/SignUp.feature:15
21:03:33.645 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/SignUp.feature:25
When method Post
>> classpath:conduitApp/feature/SignUp.feature:11
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
classpath:conduitApp/feature/SignUp.feature:7
classpath:conduitApp/feature/SignUp.feature:8
classpath:conduitApp/feature/SignUp.feature:9
classpath:conduitApp/feature/SignUp.feature:12
classpath:conduitApp/feature/SignUp.feature:13
classpath:conduitApp/feature/SignUp.feature:15
classpath:conduitApp/feature/SignUp.feature:25
21:03:33.646 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/SignUp.feature:26
Then status 201
>> classpath:conduitApp/feature/SignUp.feature:11
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
classpath:conduitApp/feature/SignUp.feature:7
classpath:conduitApp/feature/SignUp.feature:8
classpath:conduitApp/feature/SignUp.feature:9
classpath:conduitApp/feature/SignUp.feature:12
classpath:conduitApp/feature/SignUp.feature:13
classpath:conduitApp/feature/SignUp.feature:15
classpath:conduitApp/feature/SignUp.feature:25
classpath:conduitApp/feature/SignUp.feature:26
21:03:33.646 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/SignUp.feature:27
And match response ==
"""
{
    "user": {
        "email": #(randomEmail),
        "username": #(randomUserName),
        "bio": null,
        "image": "#string",
        "token": "#string"
    }
}
"""
>> classpath:conduitApp/feature/SignUp.feature:11
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
classpath:conduitApp/feature/SignUp.feature:7
classpath:conduitApp/feature/SignUp.feature:8
classpath:conduitApp/feature/SignUp.feature:9
classpath:conduitApp/feature/SignUp.feature:12
classpath:conduitApp/feature/SignUp.feature:13
classpath:conduitApp/feature/SignUp.feature:15
classpath:conduitApp/feature/SignUp.feature:25
classpath:conduitApp/feature/SignUp.feature:26
classpath:conduitApp/feature/SignUp.feature:27
]]></system-out>
  </testcase>
  <testcase name="testAll[4][2]" classname="conduitApp.ConduitTest" time="0.025">
    <failure message="&gt;&gt; classpath:conduitApp/feature/SignUp.feature:60&#10;&gt;&gt; karate-config.js failed&#10;&gt;&gt; js failed:&#10;&gt;&gt;&gt;&gt;&#10;01: function fn() {&#10;02:   var env = karate.env; // get system property &apos;karate.env&apos;&#10;03:   karate.log(&apos;karate.env system property was:&apos;, env);&#10;04:   if (!env) {&#10;05:     env = &apos;dev&apos;;&#10;06:   }&#10;07:   var config = {&#10;08:     &#10;09:     apiUrl: &apos;https://api.realworld.io/api/&apos;&#10;10:   }&#10;11:   if (env == &apos;dev&apos;) {&#10;12:     &#10;13:     config.userEmail = &apos;javierkarate1@test.com&apos;&#10;14:     config.userPassword = &apos;karate1234&apos;&#10;15: &#10;16:   } if (env == &apos;qa&apos;) {&#10;17: &#10;18:     config.userEmail = &apos;javierkarate2@test.com&apos;&#10;19:     config.userPassword = &apos;karate1234&apos;&#10;20:   }&#10;21: &#10;22:   var accesToken = karate.callSingle(&apos;classpath:helpers/CreateToken.feature&apos;, config).authToken&#10;23:   karate.configure(&apos;headers&apos;,{Authorization: &apos;Token &apos; + accesToken})&#10;24:   &#10;25: &#10;26:   return config;&#10;27: }&#10;&lt;&lt;&lt;&lt;&#10;org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: &#10;{&quot;errors&quot;:{&quot;email or password&quot;:[&quot;is invalid&quot;]}}&#10;classpath:helpers/CreateToken.feature:8&#10;- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)&#10;- &lt;js&gt;.fn(Unnamed:22)&#10;&#10;js failed:&#10;&gt;&gt;&gt;&gt;&#10;01: function fn() {&#10;02:   var env = karate.env; // get system property &apos;karate.env&apos;&#10;03:   karate.log(&apos;karate.env system property was:&apos;, env);&#10;04:   if (!env) {&#10;05:     env = &apos;dev&apos;;&#10;06:   }&#10;07:   var config = {&#10;08:     &#10;09:     apiUrl: &apos;https://api.realworld.io/api/&apos;&#10;10:   }&#10;11:   if (env == &apos;dev&apos;) {&#10;12:     &#10;13:     config.userEmail = &apos;javierkarate1@test.com&apos;&#10;14:     config.userPassword = &apos;karate1234&apos;&#10;15: &#10;16:   } if (env == &apos;qa&apos;) {&#10;17: &#10;18:     config.userEmail = &apos;javierkarate2@test.com&apos;&#10;19:     config.userPassword = &apos;karate1234&apos;&#10;20:   }&#10;21: &#10;22:   var accesToken = karate.callSingle(&apos;classpath:helpers/CreateToken.feature&apos;, config).authToken&#10;23:   karate.configure(&apos;headers&apos;,{Authorization: &apos;Token &apos; + accesToken})&#10;24:   &#10;25: &#10;26:   return config;&#10;27: }&#10;&lt;&lt;&lt;&lt;&#10;com.intuit.karate.KarateException: js failed:&#10;&gt;&gt;&gt;&gt;&#10;01: function fn() {&#10;02:   var env = karate.env; // get system property &apos;karate.env&apos;&#10;03:   karate.log(&apos;karate.env system property was:&apos;, env);&#10;04:   if (!env) {&#10;05:     env = &apos;dev&apos;;&#10;06:   }&#10;07:   var config = {&#10;08:     &#10;09:     apiUrl: &apos;https://api.realworld.io/api/&apos;&#10;10:   }&#10;11:   if (env == &apos;dev&apos;) {&#10;12:     &#10;13:     config.userEmail = &apos;javierkarate1@test.com&apos;&#10;14:     config.userPassword = &apos;karate1234&apos;&#10;15: &#10;16:   } if (env == &apos;qa&apos;) {&#10;17: &#10;18:     config.userEmail = &apos;javierkarate2@test.com&apos;&#10;19:     config.userPassword = &apos;karate1234&apos;&#10;20:   }&#10;21: &#10;22:   var accesToken = karate.callSingle(&apos;classpath:helpers/CreateToken.feature&apos;, config).authToken&#10;23:   karate.configure(&apos;headers&apos;,{Authorization: &apos;Token &apos; + accesToken})&#10;24:   &#10;25: &#10;26:   return config;&#10;27: }&#10;&lt;&lt;&lt;&lt;&#10;org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: &#10;{&quot;errors&quot;:{&quot;email or password&quot;:[&quot;is invalid&quot;]}}&#10;classpath:helpers/CreateToken.feature:8&#10;- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)&#10;- &lt;js&gt;.fn(Unnamed:22)&#10;&#10;- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)&#10;- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)&#10;- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)&#10;- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)&#10;- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)&#10;- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)&#10;- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)&#10;&#10;classpath:conduitApp/feature/SignUp.feature:6&#10;classpath:conduitApp/feature/SignUp.feature:7&#10;classpath:conduitApp/feature/SignUp.feature:8&#10;classpath:conduitApp/feature/SignUp.feature:9&#10;classpath:conduitApp/feature/SignUp.feature:41&#10;classpath:conduitApp/feature/SignUp.feature:42&#10;classpath:conduitApp/feature/SignUp.feature:53&#10;classpath:conduitApp/feature/SignUp.feature:54&#10;classpath:conduitApp/feature/SignUp.feature:55" type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
>> classpath:conduitApp/feature/SignUp.feature:60
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
classpath:conduitApp/feature/SignUp.feature:7
classpath:conduitApp/feature/SignUp.feature:8
classpath:conduitApp/feature/SignUp.feature:9
classpath:conduitApp/feature/SignUp.feature:41
classpath:conduitApp/feature/SignUp.feature:42
classpath:conduitApp/feature/SignUp.feature:53
classpath:conduitApp/feature/SignUp.feature:54
classpath:conduitApp/feature/SignUp.feature:55
]]></failure>
    <system-out><![CDATA[21:03:33.676 [main] INFO  com.intuit.karate - karate.env system property was: null 
21:03:33.676 [main] WARN  com.intuit.karate - callSingle() cached result is an exception
21:03:33.681 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/SignUp.feature:6
* def dataGenerator = Java.type('helpers.DataGenerator')
>> classpath:conduitApp/feature/SignUp.feature:60
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
21:03:33.681 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/SignUp.feature:7
Given url apiUrl
>> classpath:conduitApp/feature/SignUp.feature:60
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
classpath:conduitApp/feature/SignUp.feature:7
21:03:33.681 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/SignUp.feature:8
* def randomEmail = dataGenerator.getRandomEmail()
>> classpath:conduitApp/feature/SignUp.feature:60
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
classpath:conduitApp/feature/SignUp.feature:7
classpath:conduitApp/feature/SignUp.feature:8
21:03:33.681 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/SignUp.feature:9
* def randomUserName = dataGenerator.getRandomUserName()
>> classpath:conduitApp/feature/SignUp.feature:60
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
classpath:conduitApp/feature/SignUp.feature:7
classpath:conduitApp/feature/SignUp.feature:8
classpath:conduitApp/feature/SignUp.feature:9
21:03:33.682 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/SignUp.feature:41
Given path 'users'
>> classpath:conduitApp/feature/SignUp.feature:60
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
classpath:conduitApp/feature/SignUp.feature:7
classpath:conduitApp/feature/SignUp.feature:8
classpath:conduitApp/feature/SignUp.feature:9
classpath:conduitApp/feature/SignUp.feature:41
21:03:33.682 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/SignUp.feature:42
And request
"""
{
    "user": {
        "email": "#(randomEmail)",
        "password": "Karate123",
        "username": "KarateUser12344534523"
    }
}
"""
>> classpath:conduitApp/feature/SignUp.feature:60
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
classpath:conduitApp/feature/SignUp.feature:7
classpath:conduitApp/feature/SignUp.feature:8
classpath:conduitApp/feature/SignUp.feature:9
classpath:conduitApp/feature/SignUp.feature:41
classpath:conduitApp/feature/SignUp.feature:42
21:03:33.682 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/SignUp.feature:53
When method Post
>> classpath:conduitApp/feature/SignUp.feature:60
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
classpath:conduitApp/feature/SignUp.feature:7
classpath:conduitApp/feature/SignUp.feature:8
classpath:conduitApp/feature/SignUp.feature:9
classpath:conduitApp/feature/SignUp.feature:41
classpath:conduitApp/feature/SignUp.feature:42
classpath:conduitApp/feature/SignUp.feature:53
21:03:33.682 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/SignUp.feature:54
Then status 422
>> classpath:conduitApp/feature/SignUp.feature:60
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
classpath:conduitApp/feature/SignUp.feature:7
classpath:conduitApp/feature/SignUp.feature:8
classpath:conduitApp/feature/SignUp.feature:9
classpath:conduitApp/feature/SignUp.feature:41
classpath:conduitApp/feature/SignUp.feature:42
classpath:conduitApp/feature/SignUp.feature:53
classpath:conduitApp/feature/SignUp.feature:54
21:03:33.682 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/SignUp.feature:55
And match response == {"errors":{"username":["has already been taken"]}}
>> classpath:conduitApp/feature/SignUp.feature:60
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
classpath:conduitApp/feature/SignUp.feature:7
classpath:conduitApp/feature/SignUp.feature:8
classpath:conduitApp/feature/SignUp.feature:9
classpath:conduitApp/feature/SignUp.feature:41
classpath:conduitApp/feature/SignUp.feature:42
classpath:conduitApp/feature/SignUp.feature:53
classpath:conduitApp/feature/SignUp.feature:54
classpath:conduitApp/feature/SignUp.feature:55
]]></system-out>
  </testcase>
  <testcase name="testAll[4][3]" classname="conduitApp.ConduitTest" time="0.142">
    <failure message="&gt;&gt; classpath:conduitApp/feature/SignUp.feature:61&#10;&gt;&gt; karate-config.js failed&#10;&gt;&gt; js failed:&#10;&gt;&gt;&gt;&gt;&#10;01: function fn() {&#10;02:   var env = karate.env; // get system property &apos;karate.env&apos;&#10;03:   karate.log(&apos;karate.env system property was:&apos;, env);&#10;04:   if (!env) {&#10;05:     env = &apos;dev&apos;;&#10;06:   }&#10;07:   var config = {&#10;08:     &#10;09:     apiUrl: &apos;https://api.realworld.io/api/&apos;&#10;10:   }&#10;11:   if (env == &apos;dev&apos;) {&#10;12:     &#10;13:     config.userEmail = &apos;javierkarate1@test.com&apos;&#10;14:     config.userPassword = &apos;karate1234&apos;&#10;15: &#10;16:   } if (env == &apos;qa&apos;) {&#10;17: &#10;18:     config.userEmail = &apos;javierkarate2@test.com&apos;&#10;19:     config.userPassword = &apos;karate1234&apos;&#10;20:   }&#10;21: &#10;22:   var accesToken = karate.callSingle(&apos;classpath:helpers/CreateToken.feature&apos;, config).authToken&#10;23:   karate.configure(&apos;headers&apos;,{Authorization: &apos;Token &apos; + accesToken})&#10;24:   &#10;25: &#10;26:   return config;&#10;27: }&#10;&lt;&lt;&lt;&lt;&#10;org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: &#10;{&quot;errors&quot;:{&quot;email or password&quot;:[&quot;is invalid&quot;]}}&#10;classpath:helpers/CreateToken.feature:8&#10;- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)&#10;- &lt;js&gt;.fn(Unnamed:22)&#10;&#10;js failed:&#10;&gt;&gt;&gt;&gt;&#10;01: function fn() {&#10;02:   var env = karate.env; // get system property &apos;karate.env&apos;&#10;03:   karate.log(&apos;karate.env system property was:&apos;, env);&#10;04:   if (!env) {&#10;05:     env = &apos;dev&apos;;&#10;06:   }&#10;07:   var config = {&#10;08:     &#10;09:     apiUrl: &apos;https://api.realworld.io/api/&apos;&#10;10:   }&#10;11:   if (env == &apos;dev&apos;) {&#10;12:     &#10;13:     config.userEmail = &apos;javierkarate1@test.com&apos;&#10;14:     config.userPassword = &apos;karate1234&apos;&#10;15: &#10;16:   } if (env == &apos;qa&apos;) {&#10;17: &#10;18:     config.userEmail = &apos;javierkarate2@test.com&apos;&#10;19:     config.userPassword = &apos;karate1234&apos;&#10;20:   }&#10;21: &#10;22:   var accesToken = karate.callSingle(&apos;classpath:helpers/CreateToken.feature&apos;, config).authToken&#10;23:   karate.configure(&apos;headers&apos;,{Authorization: &apos;Token &apos; + accesToken})&#10;24:   &#10;25: &#10;26:   return config;&#10;27: }&#10;&lt;&lt;&lt;&lt;&#10;com.intuit.karate.KarateException: js failed:&#10;&gt;&gt;&gt;&gt;&#10;01: function fn() {&#10;02:   var env = karate.env; // get system property &apos;karate.env&apos;&#10;03:   karate.log(&apos;karate.env system property was:&apos;, env);&#10;04:   if (!env) {&#10;05:     env = &apos;dev&apos;;&#10;06:   }&#10;07:   var config = {&#10;08:     &#10;09:     apiUrl: &apos;https://api.realworld.io/api/&apos;&#10;10:   }&#10;11:   if (env == &apos;dev&apos;) {&#10;12:     &#10;13:     config.userEmail = &apos;javierkarate1@test.com&apos;&#10;14:     config.userPassword = &apos;karate1234&apos;&#10;15: &#10;16:   } if (env == &apos;qa&apos;) {&#10;17: &#10;18:     config.userEmail = &apos;javierkarate2@test.com&apos;&#10;19:     config.userPassword = &apos;karate1234&apos;&#10;20:   }&#10;21: &#10;22:   var accesToken = karate.callSingle(&apos;classpath:helpers/CreateToken.feature&apos;, config).authToken&#10;23:   karate.configure(&apos;headers&apos;,{Authorization: &apos;Token &apos; + accesToken})&#10;24:   &#10;25: &#10;26:   return config;&#10;27: }&#10;&lt;&lt;&lt;&lt;&#10;org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: &#10;{&quot;errors&quot;:{&quot;email or password&quot;:[&quot;is invalid&quot;]}}&#10;classpath:helpers/CreateToken.feature:8&#10;- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)&#10;- &lt;js&gt;.fn(Unnamed:22)&#10;&#10;- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)&#10;- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)&#10;- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)&#10;- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)&#10;- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)&#10;- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)&#10;- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)&#10;&#10;classpath:conduitApp/feature/SignUp.feature:6&#10;classpath:conduitApp/feature/SignUp.feature:7&#10;classpath:conduitApp/feature/SignUp.feature:8&#10;classpath:conduitApp/feature/SignUp.feature:9&#10;classpath:conduitApp/feature/SignUp.feature:41&#10;classpath:conduitApp/feature/SignUp.feature:42&#10;classpath:conduitApp/feature/SignUp.feature:53&#10;classpath:conduitApp/feature/SignUp.feature:54&#10;classpath:conduitApp/feature/SignUp.feature:55" type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
>> classpath:conduitApp/feature/SignUp.feature:61
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
classpath:conduitApp/feature/SignUp.feature:7
classpath:conduitApp/feature/SignUp.feature:8
classpath:conduitApp/feature/SignUp.feature:9
classpath:conduitApp/feature/SignUp.feature:41
classpath:conduitApp/feature/SignUp.feature:42
classpath:conduitApp/feature/SignUp.feature:53
classpath:conduitApp/feature/SignUp.feature:54
classpath:conduitApp/feature/SignUp.feature:55
]]></failure>
    <system-out><![CDATA[21:03:33.703 [main] INFO  com.intuit.karate - karate.env system property was: null 
21:03:33.703 [main] WARN  com.intuit.karate - callSingle() cached result is an exception
21:03:33.706 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/SignUp.feature:6
* def dataGenerator = Java.type('helpers.DataGenerator')
>> classpath:conduitApp/feature/SignUp.feature:61
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
21:03:33.706 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/SignUp.feature:7
Given url apiUrl
>> classpath:conduitApp/feature/SignUp.feature:61
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
classpath:conduitApp/feature/SignUp.feature:7
21:03:33.706 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/SignUp.feature:8
* def randomEmail = dataGenerator.getRandomEmail()
>> classpath:conduitApp/feature/SignUp.feature:61
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
classpath:conduitApp/feature/SignUp.feature:7
classpath:conduitApp/feature/SignUp.feature:8
21:03:33.706 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/SignUp.feature:9
* def randomUserName = dataGenerator.getRandomUserName()
>> classpath:conduitApp/feature/SignUp.feature:61
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
classpath:conduitApp/feature/SignUp.feature:7
classpath:conduitApp/feature/SignUp.feature:8
classpath:conduitApp/feature/SignUp.feature:9
21:03:33.706 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/SignUp.feature:41
Given path 'users'
>> classpath:conduitApp/feature/SignUp.feature:61
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
classpath:conduitApp/feature/SignUp.feature:7
classpath:conduitApp/feature/SignUp.feature:8
classpath:conduitApp/feature/SignUp.feature:9
classpath:conduitApp/feature/SignUp.feature:41
21:03:33.706 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/SignUp.feature:42
And request
"""
{
    "user": {
        "email": "javierkarate1@test.com",
        "password": "Karate123",
        "username": "#(randomUserName)"
    }
}
"""
>> classpath:conduitApp/feature/SignUp.feature:61
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
classpath:conduitApp/feature/SignUp.feature:7
classpath:conduitApp/feature/SignUp.feature:8
classpath:conduitApp/feature/SignUp.feature:9
classpath:conduitApp/feature/SignUp.feature:41
classpath:conduitApp/feature/SignUp.feature:42
21:03:33.708 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/SignUp.feature:53
When method Post
>> classpath:conduitApp/feature/SignUp.feature:61
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
classpath:conduitApp/feature/SignUp.feature:7
classpath:conduitApp/feature/SignUp.feature:8
classpath:conduitApp/feature/SignUp.feature:9
classpath:conduitApp/feature/SignUp.feature:41
classpath:conduitApp/feature/SignUp.feature:42
classpath:conduitApp/feature/SignUp.feature:53
21:03:33.709 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/SignUp.feature:54
Then status 422
>> classpath:conduitApp/feature/SignUp.feature:61
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
classpath:conduitApp/feature/SignUp.feature:7
classpath:conduitApp/feature/SignUp.feature:8
classpath:conduitApp/feature/SignUp.feature:9
classpath:conduitApp/feature/SignUp.feature:41
classpath:conduitApp/feature/SignUp.feature:42
classpath:conduitApp/feature/SignUp.feature:53
classpath:conduitApp/feature/SignUp.feature:54
21:03:33.709 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/SignUp.feature:55
And match response == {"errors":{"email":["has already been taken"]}}
>> classpath:conduitApp/feature/SignUp.feature:61
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
classpath:conduitApp/feature/SignUp.feature:7
classpath:conduitApp/feature/SignUp.feature:8
classpath:conduitApp/feature/SignUp.feature:9
classpath:conduitApp/feature/SignUp.feature:41
classpath:conduitApp/feature/SignUp.feature:42
classpath:conduitApp/feature/SignUp.feature:53
classpath:conduitApp/feature/SignUp.feature:54
classpath:conduitApp/feature/SignUp.feature:55
---------------------------------------------------------
feature: classpath:conduitApp/feature/SignUp.feature
scenarios:  3 | passed:  0 | failed:  3 | time: 0,0000
---------------------------------------------------------

]]></system-out>
  </testcase>
  <testcase name="testAll[5][1]" classname="conduitApp.ConduitTest" time="0.448">
    <failure message="&gt;&gt; classpath:conduitApp/feature/WorkWithDb.feature:9&#10;&gt;&gt; karate-config.js failed&#10;&gt;&gt; js failed:&#10;&gt;&gt;&gt;&gt;&#10;01: function fn() {&#10;02:   var env = karate.env; // get system property &apos;karate.env&apos;&#10;03:   karate.log(&apos;karate.env system property was:&apos;, env);&#10;04:   if (!env) {&#10;05:     env = &apos;dev&apos;;&#10;06:   }&#10;07:   var config = {&#10;08:     &#10;09:     apiUrl: &apos;https://api.realworld.io/api/&apos;&#10;10:   }&#10;11:   if (env == &apos;dev&apos;) {&#10;12:     &#10;13:     config.userEmail = &apos;javierkarate1@test.com&apos;&#10;14:     config.userPassword = &apos;karate1234&apos;&#10;15: &#10;16:   } if (env == &apos;qa&apos;) {&#10;17: &#10;18:     config.userEmail = &apos;javierkarate2@test.com&apos;&#10;19:     config.userPassword = &apos;karate1234&apos;&#10;20:   }&#10;21: &#10;22:   var accesToken = karate.callSingle(&apos;classpath:helpers/CreateToken.feature&apos;, config).authToken&#10;23:   karate.configure(&apos;headers&apos;,{Authorization: &apos;Token &apos; + accesToken})&#10;24:   &#10;25: &#10;26:   return config;&#10;27: }&#10;&lt;&lt;&lt;&lt;&#10;org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: &#10;{&quot;errors&quot;:{&quot;email or password&quot;:[&quot;is invalid&quot;]}}&#10;classpath:helpers/CreateToken.feature:8&#10;- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)&#10;- &lt;js&gt;.fn(Unnamed:22)&#10;&#10;js failed:&#10;&gt;&gt;&gt;&gt;&#10;01: function fn() {&#10;02:   var env = karate.env; // get system property &apos;karate.env&apos;&#10;03:   karate.log(&apos;karate.env system property was:&apos;, env);&#10;04:   if (!env) {&#10;05:     env = &apos;dev&apos;;&#10;06:   }&#10;07:   var config = {&#10;08:     &#10;09:     apiUrl: &apos;https://api.realworld.io/api/&apos;&#10;10:   }&#10;11:   if (env == &apos;dev&apos;) {&#10;12:     &#10;13:     config.userEmail = &apos;javierkarate1@test.com&apos;&#10;14:     config.userPassword = &apos;karate1234&apos;&#10;15: &#10;16:   } if (env == &apos;qa&apos;) {&#10;17: &#10;18:     config.userEmail = &apos;javierkarate2@test.com&apos;&#10;19:     config.userPassword = &apos;karate1234&apos;&#10;20:   }&#10;21: &#10;22:   var accesToken = karate.callSingle(&apos;classpath:helpers/CreateToken.feature&apos;, config).authToken&#10;23:   karate.configure(&apos;headers&apos;,{Authorization: &apos;Token &apos; + accesToken})&#10;24:   &#10;25: &#10;26:   return config;&#10;27: }&#10;&lt;&lt;&lt;&lt;&#10;com.intuit.karate.KarateException: js failed:&#10;&gt;&gt;&gt;&gt;&#10;01: function fn() {&#10;02:   var env = karate.env; // get system property &apos;karate.env&apos;&#10;03:   karate.log(&apos;karate.env system property was:&apos;, env);&#10;04:   if (!env) {&#10;05:     env = &apos;dev&apos;;&#10;06:   }&#10;07:   var config = {&#10;08:     &#10;09:     apiUrl: &apos;https://api.realworld.io/api/&apos;&#10;10:   }&#10;11:   if (env == &apos;dev&apos;) {&#10;12:     &#10;13:     config.userEmail = &apos;javierkarate1@test.com&apos;&#10;14:     config.userPassword = &apos;karate1234&apos;&#10;15: &#10;16:   } if (env == &apos;qa&apos;) {&#10;17: &#10;18:     config.userEmail = &apos;javierkarate2@test.com&apos;&#10;19:     config.userPassword = &apos;karate1234&apos;&#10;20:   }&#10;21: &#10;22:   var accesToken = karate.callSingle(&apos;classpath:helpers/CreateToken.feature&apos;, config).authToken&#10;23:   karate.configure(&apos;headers&apos;,{Authorization: &apos;Token &apos; + accesToken})&#10;24:   &#10;25: &#10;26:   return config;&#10;27: }&#10;&lt;&lt;&lt;&lt;&#10;org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: &#10;{&quot;errors&quot;:{&quot;email or password&quot;:[&quot;is invalid&quot;]}}&#10;classpath:helpers/CreateToken.feature:8&#10;- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)&#10;- &lt;js&gt;.fn(Unnamed:22)&#10;&#10;- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)&#10;- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)&#10;- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)&#10;- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)&#10;- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)&#10;- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)&#10;- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)&#10;&#10;classpath:conduitApp/feature/WorkWithDb.feature:6&#10;classpath:conduitApp/feature/WorkWithDb.feature:10" type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
>> classpath:conduitApp/feature/WorkWithDb.feature:9
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/WorkWithDb.feature:6
classpath:conduitApp/feature/WorkWithDb.feature:10
]]></failure>
    <system-out><![CDATA[21:03:33.836 [main] INFO  com.intuit.karate - karate.env system property was: null 
21:03:33.839 [main] WARN  com.intuit.karate - callSingle() cached result is an exception
21:03:33.841 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/WorkWithDb.feature:6
* def dbHandler = Java.type('helpers.DbHandler')
>> classpath:conduitApp/feature/WorkWithDb.feature:9
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/WorkWithDb.feature:6
21:03:33.841 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/WorkWithDb.feature:10
* eval dbHandler.addNewProduct("AA")
>> classpath:conduitApp/feature/WorkWithDb.feature:9
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/WorkWithDb.feature:6
classpath:conduitApp/feature/WorkWithDb.feature:10
---------------------------------------------------------
feature: classpath:conduitApp/feature/WorkWithDb.feature
scenarios:  1 | passed:  0 | failed:  1 | time: 0,0000
---------------------------------------------------------

Karate version: 1.1.0
======================================================
elapsed:   7,23 | threads:    1 | thread time: 0,00 
features:     5 | skipped:    0 | efficiency: 0,00
scenarios:   12 | passed:     0 | failed: 12
======================================================
>>> failed features:
>> classpath:conduitApp/feature/Hooks.feature:19
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Hooks.feature:6
classpath:conduitApp/feature/Hooks.feature:8
classpath:conduitApp/feature/Hooks.feature:20
classpath:conduitApp/feature/Hooks.feature:21
>> classpath:conduitApp/feature/Hooks.feature:23
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Hooks.feature:6
classpath:conduitApp/feature/Hooks.feature:8
classpath:conduitApp/feature/Hooks.feature:24
classpath:conduitApp/feature/Hooks.feature:25
>> classpath:conduitApp/feature/SignUp.feature:11
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
classpath:conduitApp/feature/SignUp.feature:7
classpath:conduitApp/feature/SignUp.feature:8
classpath:conduitApp/feature/SignUp.feature:9
classpath:conduitApp/feature/SignUp.feature:12
classpath:conduitApp/feature/SignUp.feature:13
classpath:conduitApp/feature/SignUp.feature:15
classpath:conduitApp/feature/SignUp.feature:25
classpath:conduitApp/feature/SignUp.feature:26
classpath:conduitApp/feature/SignUp.feature:27
>> classpath:conduitApp/feature/SignUp.feature:60
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
classpath:conduitApp/feature/SignUp.feature:7
classpath:conduitApp/feature/SignUp.feature:8
classpath:conduitApp/feature/SignUp.feature:9
classpath:conduitApp/feature/SignUp.feature:41
classpath:conduitApp/feature/SignUp.feature:42
classpath:conduitApp/feature/SignUp.feature:53
classpath:conduitApp/feature/SignUp.feature:54
classpath:conduitApp/feature/SignUp.feature:55
>> classpath:conduitApp/feature/SignUp.feature:61
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
classpath:conduitApp/feature/SignUp.feature:7
classpath:conduitApp/feature/SignUp.feature:8
classpath:conduitApp/feature/SignUp.feature:9
classpath:conduitApp/feature/SignUp.feature:41
classpath:conduitApp/feature/SignUp.feature:42
classpath:conduitApp/feature/SignUp.feature:53
classpath:conduitApp/feature/SignUp.feature:54
classpath:conduitApp/feature/SignUp.feature:55
>> classpath:conduitApp/feature/Articles.feature:21
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
classpath:conduitApp/feature/Articles.feature:9
classpath:conduitApp/feature/Articles.feature:10
classpath:conduitApp/feature/Articles.feature:23
classpath:conduitApp/feature/Articles.feature:24
classpath:conduitApp/feature/Articles.feature:25
classpath:conduitApp/feature/Articles.feature:26
classpath:conduitApp/feature/Articles.feature:27
>> classpath:conduitApp/feature/Articles.feature:30
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
classpath:conduitApp/feature/Articles.feature:9
classpath:conduitApp/feature/Articles.feature:10
classpath:conduitApp/feature/Articles.feature:32
classpath:conduitApp/feature/Articles.feature:33
classpath:conduitApp/feature/Articles.feature:34
classpath:conduitApp/feature/Articles.feature:35
classpath:conduitApp/feature/Articles.feature:36
classpath:conduitApp/feature/Articles.feature:39
classpath:conduitApp/feature/Articles.feature:40
classpath:conduitApp/feature/Articles.feature:41
classpath:conduitApp/feature/Articles.feature:42
classpath:conduitApp/feature/Articles.feature:43
classpath:conduitApp/feature/Articles.feature:46
classpath:conduitApp/feature/Articles.feature:47
classpath:conduitApp/feature/Articles.feature:48
classpath:conduitApp/feature/Articles.feature:50
classpath:conduitApp/feature/Articles.feature:51
classpath:conduitApp/feature/Articles.feature:52
classpath:conduitApp/feature/Articles.feature:53
classpath:conduitApp/feature/Articles.feature:54
>> classpath:conduitApp/feature/HomePage.feature:8
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:9
classpath:conduitApp/feature/HomePage.feature:10
classpath:conduitApp/feature/HomePage.feature:11
classpath:conduitApp/feature/HomePage.feature:12
classpath:conduitApp/feature/HomePage.feature:13
classpath:conduitApp/feature/HomePage.feature:14
classpath:conduitApp/feature/HomePage.feature:15
classpath:conduitApp/feature/HomePage.feature:16
>> classpath:conduitApp/feature/HomePage.feature:19
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:20
classpath:conduitApp/feature/HomePage.feature:21
classpath:conduitApp/feature/HomePage.feature:22
classpath:conduitApp/feature/HomePage.feature:23
classpath:conduitApp/feature/HomePage.feature:24
classpath:conduitApp/feature/HomePage.feature:25
classpath:conduitApp/feature/HomePage.feature:26
classpath:conduitApp/feature/HomePage.feature:27
classpath:conduitApp/feature/HomePage.feature:28
classpath:conduitApp/feature/HomePage.feature:29
classpath:conduitApp/feature/HomePage.feature:30
classpath:conduitApp/feature/HomePage.feature:31
classpath:conduitApp/feature/HomePage.feature:32
classpath:conduitApp/feature/HomePage.feature:33
>> classpath:conduitApp/feature/HomePage.feature:54
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:55
classpath:conduitApp/feature/HomePage.feature:56
classpath:conduitApp/feature/HomePage.feature:57
>> classpath:conduitApp/feature/HomePage.feature:59
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:60
classpath:conduitApp/feature/HomePage.feature:61
classpath:conduitApp/feature/HomePage.feature:62
>> classpath:conduitApp/feature/WorkWithDb.feature:9
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/WorkWithDb.feature:6
classpath:conduitApp/feature/WorkWithDb.feature:10
<<<

HTML report: (paste into browser to view) | Karate version: 1.1.0
file:///Users/jtapiat/Documents/javier/myproject1/target/karate-reports/karate-summary.html
===================================================================

]]></system-out>
  </testcase>
</testsuite>