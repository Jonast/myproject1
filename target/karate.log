21:03:27.120 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
21:03:28.314 [main] INFO  com.intuit.karate - karate.env system property was: null 
21:03:28.336 [main] INFO  com.intuit.karate - >> lock acquired, begin callSingle: classpath:helpers/CreateToken.feature
21:03:29.113 [main] DEBUG com.intuit.karate - request:
1 > POST https://api.realworld.io/api/users/login
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 67
1 > Host: api.realworld.io
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/1.8.0_331)
1 > Accept-Encoding: gzip,deflate
{"user":{"email":"javierkarate1@test.com","password":"karate1234"}}

21:03:29.879 [main] DEBUG com.intuit.karate - response time in milliseconds: 757
1 < 403
1 < Date: Thu, 11 Jan 2024 00:03:29 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 47
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1704931409&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=5389d8uXdPfWU5CpnF%2FPb0ErZC2awRcLszUERmymYVU%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1704931409&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=5389d8uXdPfWU5CpnF%2FPb0ErZC2awRcLszUERmymYVU%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"2f-83PWxEwXkLR3WfVjo3wqB0FwKlU"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 8438e59b08976f2f-SCL
1 < alt-svc: h3=":443"; ma=86400
{"errors":{"email or password":["is invalid"]}}
21:03:29.891 [main] ERROR com.intuit.karate - classpath:helpers/CreateToken.feature:8
Then status 200
status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
21:03:29.896 [main] WARN  com.intuit.karate - callSingle() will cache an exception
21:03:29.897 [main] INFO  com.intuit.karate - << lock released, cached callSingle: classpath:helpers/CreateToken.feature
21:03:29.897 [main] WARN  com.intuit.karate - callSingle() cached result is an exception
21:03:29.932 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:5
* url apiUrl
>> classpath:conduitApp/feature/Articles.feature:21
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
21:03:29.933 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:6
* def articleRequestBody = read('classpath:conduitApp/json/newArticleRequest.json')
>> classpath:conduitApp/feature/Articles.feature:21
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
21:03:29.934 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:7
* def dataGenerator = Java.type('helpers.DataGenerator')
>> classpath:conduitApp/feature/Articles.feature:21
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
21:03:29.934 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:8
* set articleRequestBody.article.title = dataGenerator.getRandomArticleValues().title
>> classpath:conduitApp/feature/Articles.feature:21
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
21:03:29.934 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:9
* set articleRequestBody.article.description = dataGenerator.getRandomArticleValues().description
>> classpath:conduitApp/feature/Articles.feature:21
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
classpath:conduitApp/feature/Articles.feature:9
21:03:29.935 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:10
* set articleRequestBody.article.body = dataGenerator.getRandomArticleValues().body
>> classpath:conduitApp/feature/Articles.feature:21
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
classpath:conduitApp/feature/Articles.feature:9
classpath:conduitApp/feature/Articles.feature:10
21:03:29.935 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:23
Given path 'articles'
>> classpath:conduitApp/feature/Articles.feature:21
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
classpath:conduitApp/feature/Articles.feature:9
classpath:conduitApp/feature/Articles.feature:10
classpath:conduitApp/feature/Articles.feature:23
21:03:29.935 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:24
And request articleRequestBody
>> classpath:conduitApp/feature/Articles.feature:21
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
classpath:conduitApp/feature/Articles.feature:9
classpath:conduitApp/feature/Articles.feature:10
classpath:conduitApp/feature/Articles.feature:23
classpath:conduitApp/feature/Articles.feature:24
21:03:29.936 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:25
When method Post
>> classpath:conduitApp/feature/Articles.feature:21
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
classpath:conduitApp/feature/Articles.feature:9
classpath:conduitApp/feature/Articles.feature:10
classpath:conduitApp/feature/Articles.feature:23
classpath:conduitApp/feature/Articles.feature:24
classpath:conduitApp/feature/Articles.feature:25
21:03:29.936 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:26
Then status 201
>> classpath:conduitApp/feature/Articles.feature:21
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
classpath:conduitApp/feature/Articles.feature:9
classpath:conduitApp/feature/Articles.feature:10
classpath:conduitApp/feature/Articles.feature:23
classpath:conduitApp/feature/Articles.feature:24
classpath:conduitApp/feature/Articles.feature:25
classpath:conduitApp/feature/Articles.feature:26
21:03:29.936 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:27
And match response.article.title == articleRequestBody.article.title
>> classpath:conduitApp/feature/Articles.feature:21
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
classpath:conduitApp/feature/Articles.feature:9
classpath:conduitApp/feature/Articles.feature:10
classpath:conduitApp/feature/Articles.feature:23
classpath:conduitApp/feature/Articles.feature:24
classpath:conduitApp/feature/Articles.feature:25
classpath:conduitApp/feature/Articles.feature:26
classpath:conduitApp/feature/Articles.feature:27
21:03:30.004 [main] INFO  com.intuit.karate - karate.env system property was: null 
21:03:30.006 [main] WARN  com.intuit.karate - callSingle() cached result is an exception
21:03:30.010 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:5
* url apiUrl
>> classpath:conduitApp/feature/Articles.feature:30
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
21:03:30.010 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:6
* def articleRequestBody = read('classpath:conduitApp/json/newArticleRequest.json')
>> classpath:conduitApp/feature/Articles.feature:30
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
21:03:30.010 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:7
* def dataGenerator = Java.type('helpers.DataGenerator')
>> classpath:conduitApp/feature/Articles.feature:30
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
21:03:30.011 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:8
* set articleRequestBody.article.title = dataGenerator.getRandomArticleValues().title
>> classpath:conduitApp/feature/Articles.feature:30
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
21:03:30.011 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:9
* set articleRequestBody.article.description = dataGenerator.getRandomArticleValues().description
>> classpath:conduitApp/feature/Articles.feature:30
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
classpath:conduitApp/feature/Articles.feature:9
21:03:30.011 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:10
* set articleRequestBody.article.body = dataGenerator.getRandomArticleValues().body
>> classpath:conduitApp/feature/Articles.feature:30
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
classpath:conduitApp/feature/Articles.feature:9
classpath:conduitApp/feature/Articles.feature:10
21:03:30.012 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:32
Given path 'articles'
>> classpath:conduitApp/feature/Articles.feature:30
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
classpath:conduitApp/feature/Articles.feature:9
classpath:conduitApp/feature/Articles.feature:10
classpath:conduitApp/feature/Articles.feature:32
21:03:30.012 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:33
And request articleRequestBody
>> classpath:conduitApp/feature/Articles.feature:30
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
classpath:conduitApp/feature/Articles.feature:9
classpath:conduitApp/feature/Articles.feature:10
classpath:conduitApp/feature/Articles.feature:32
classpath:conduitApp/feature/Articles.feature:33
21:03:30.014 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:34
When method Post
>> classpath:conduitApp/feature/Articles.feature:30
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
classpath:conduitApp/feature/Articles.feature:9
classpath:conduitApp/feature/Articles.feature:10
classpath:conduitApp/feature/Articles.feature:32
classpath:conduitApp/feature/Articles.feature:33
classpath:conduitApp/feature/Articles.feature:34
21:03:30.014 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:35
Then status 201
>> classpath:conduitApp/feature/Articles.feature:30
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
classpath:conduitApp/feature/Articles.feature:9
classpath:conduitApp/feature/Articles.feature:10
classpath:conduitApp/feature/Articles.feature:32
classpath:conduitApp/feature/Articles.feature:33
classpath:conduitApp/feature/Articles.feature:34
classpath:conduitApp/feature/Articles.feature:35
21:03:30.014 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:36
* def articleId = response.article.slug
>> classpath:conduitApp/feature/Articles.feature:30
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
classpath:conduitApp/feature/Articles.feature:9
classpath:conduitApp/feature/Articles.feature:10
classpath:conduitApp/feature/Articles.feature:32
classpath:conduitApp/feature/Articles.feature:33
classpath:conduitApp/feature/Articles.feature:34
classpath:conduitApp/feature/Articles.feature:35
classpath:conduitApp/feature/Articles.feature:36
21:03:30.015 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:39
Given params { limit: 10, offset: 0}
>> classpath:conduitApp/feature/Articles.feature:30
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
classpath:conduitApp/feature/Articles.feature:9
classpath:conduitApp/feature/Articles.feature:10
classpath:conduitApp/feature/Articles.feature:32
classpath:conduitApp/feature/Articles.feature:33
classpath:conduitApp/feature/Articles.feature:34
classpath:conduitApp/feature/Articles.feature:35
classpath:conduitApp/feature/Articles.feature:36
classpath:conduitApp/feature/Articles.feature:39
21:03:30.016 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:40
Given path 'articles'
>> classpath:conduitApp/feature/Articles.feature:30
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
classpath:conduitApp/feature/Articles.feature:9
classpath:conduitApp/feature/Articles.feature:10
classpath:conduitApp/feature/Articles.feature:32
classpath:conduitApp/feature/Articles.feature:33
classpath:conduitApp/feature/Articles.feature:34
classpath:conduitApp/feature/Articles.feature:35
classpath:conduitApp/feature/Articles.feature:36
classpath:conduitApp/feature/Articles.feature:39
classpath:conduitApp/feature/Articles.feature:40
21:03:30.016 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:41
When method Get
>> classpath:conduitApp/feature/Articles.feature:30
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
classpath:conduitApp/feature/Articles.feature:9
classpath:conduitApp/feature/Articles.feature:10
classpath:conduitApp/feature/Articles.feature:32
classpath:conduitApp/feature/Articles.feature:33
classpath:conduitApp/feature/Articles.feature:34
classpath:conduitApp/feature/Articles.feature:35
classpath:conduitApp/feature/Articles.feature:36
classpath:conduitApp/feature/Articles.feature:39
classpath:conduitApp/feature/Articles.feature:40
classpath:conduitApp/feature/Articles.feature:41
21:03:30.016 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:42
Then status 200
>> classpath:conduitApp/feature/Articles.feature:30
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
classpath:conduitApp/feature/Articles.feature:9
classpath:conduitApp/feature/Articles.feature:10
classpath:conduitApp/feature/Articles.feature:32
classpath:conduitApp/feature/Articles.feature:33
classpath:conduitApp/feature/Articles.feature:34
classpath:conduitApp/feature/Articles.feature:35
classpath:conduitApp/feature/Articles.feature:36
classpath:conduitApp/feature/Articles.feature:39
classpath:conduitApp/feature/Articles.feature:40
classpath:conduitApp/feature/Articles.feature:41
classpath:conduitApp/feature/Articles.feature:42
21:03:30.017 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:43
And match response.articles[0].title == articleRequestBody.article.title
>> classpath:conduitApp/feature/Articles.feature:30
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
classpath:conduitApp/feature/Articles.feature:9
classpath:conduitApp/feature/Articles.feature:10
classpath:conduitApp/feature/Articles.feature:32
classpath:conduitApp/feature/Articles.feature:33
classpath:conduitApp/feature/Articles.feature:34
classpath:conduitApp/feature/Articles.feature:35
classpath:conduitApp/feature/Articles.feature:36
classpath:conduitApp/feature/Articles.feature:39
classpath:conduitApp/feature/Articles.feature:40
classpath:conduitApp/feature/Articles.feature:41
classpath:conduitApp/feature/Articles.feature:42
classpath:conduitApp/feature/Articles.feature:43
21:03:30.017 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:46
Given path 'articles', articleId
>> classpath:conduitApp/feature/Articles.feature:30
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
classpath:conduitApp/feature/Articles.feature:9
classpath:conduitApp/feature/Articles.feature:10
classpath:conduitApp/feature/Articles.feature:32
classpath:conduitApp/feature/Articles.feature:33
classpath:conduitApp/feature/Articles.feature:34
classpath:conduitApp/feature/Articles.feature:35
classpath:conduitApp/feature/Articles.feature:36
classpath:conduitApp/feature/Articles.feature:39
classpath:conduitApp/feature/Articles.feature:40
classpath:conduitApp/feature/Articles.feature:41
classpath:conduitApp/feature/Articles.feature:42
classpath:conduitApp/feature/Articles.feature:43
classpath:conduitApp/feature/Articles.feature:46
21:03:30.017 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:47
When method delete
>> classpath:conduitApp/feature/Articles.feature:30
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
classpath:conduitApp/feature/Articles.feature:9
classpath:conduitApp/feature/Articles.feature:10
classpath:conduitApp/feature/Articles.feature:32
classpath:conduitApp/feature/Articles.feature:33
classpath:conduitApp/feature/Articles.feature:34
classpath:conduitApp/feature/Articles.feature:35
classpath:conduitApp/feature/Articles.feature:36
classpath:conduitApp/feature/Articles.feature:39
classpath:conduitApp/feature/Articles.feature:40
classpath:conduitApp/feature/Articles.feature:41
classpath:conduitApp/feature/Articles.feature:42
classpath:conduitApp/feature/Articles.feature:43
classpath:conduitApp/feature/Articles.feature:46
classpath:conduitApp/feature/Articles.feature:47
21:03:30.017 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:48
Then status 204
>> classpath:conduitApp/feature/Articles.feature:30
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
classpath:conduitApp/feature/Articles.feature:9
classpath:conduitApp/feature/Articles.feature:10
classpath:conduitApp/feature/Articles.feature:32
classpath:conduitApp/feature/Articles.feature:33
classpath:conduitApp/feature/Articles.feature:34
classpath:conduitApp/feature/Articles.feature:35
classpath:conduitApp/feature/Articles.feature:36
classpath:conduitApp/feature/Articles.feature:39
classpath:conduitApp/feature/Articles.feature:40
classpath:conduitApp/feature/Articles.feature:41
classpath:conduitApp/feature/Articles.feature:42
classpath:conduitApp/feature/Articles.feature:43
classpath:conduitApp/feature/Articles.feature:46
classpath:conduitApp/feature/Articles.feature:47
classpath:conduitApp/feature/Articles.feature:48
21:03:30.017 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:50
Given params { limit: 10, offset: 0}
>> classpath:conduitApp/feature/Articles.feature:30
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
classpath:conduitApp/feature/Articles.feature:9
classpath:conduitApp/feature/Articles.feature:10
classpath:conduitApp/feature/Articles.feature:32
classpath:conduitApp/feature/Articles.feature:33
classpath:conduitApp/feature/Articles.feature:34
classpath:conduitApp/feature/Articles.feature:35
classpath:conduitApp/feature/Articles.feature:36
classpath:conduitApp/feature/Articles.feature:39
classpath:conduitApp/feature/Articles.feature:40
classpath:conduitApp/feature/Articles.feature:41
classpath:conduitApp/feature/Articles.feature:42
classpath:conduitApp/feature/Articles.feature:43
classpath:conduitApp/feature/Articles.feature:46
classpath:conduitApp/feature/Articles.feature:47
classpath:conduitApp/feature/Articles.feature:48
classpath:conduitApp/feature/Articles.feature:50
21:03:30.018 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:51
Given path 'articles'
>> classpath:conduitApp/feature/Articles.feature:30
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
classpath:conduitApp/feature/Articles.feature:9
classpath:conduitApp/feature/Articles.feature:10
classpath:conduitApp/feature/Articles.feature:32
classpath:conduitApp/feature/Articles.feature:33
classpath:conduitApp/feature/Articles.feature:34
classpath:conduitApp/feature/Articles.feature:35
classpath:conduitApp/feature/Articles.feature:36
classpath:conduitApp/feature/Articles.feature:39
classpath:conduitApp/feature/Articles.feature:40
classpath:conduitApp/feature/Articles.feature:41
classpath:conduitApp/feature/Articles.feature:42
classpath:conduitApp/feature/Articles.feature:43
classpath:conduitApp/feature/Articles.feature:46
classpath:conduitApp/feature/Articles.feature:47
classpath:conduitApp/feature/Articles.feature:48
classpath:conduitApp/feature/Articles.feature:50
classpath:conduitApp/feature/Articles.feature:51
21:03:30.018 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:52
When method Get
>> classpath:conduitApp/feature/Articles.feature:30
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
classpath:conduitApp/feature/Articles.feature:9
classpath:conduitApp/feature/Articles.feature:10
classpath:conduitApp/feature/Articles.feature:32
classpath:conduitApp/feature/Articles.feature:33
classpath:conduitApp/feature/Articles.feature:34
classpath:conduitApp/feature/Articles.feature:35
classpath:conduitApp/feature/Articles.feature:36
classpath:conduitApp/feature/Articles.feature:39
classpath:conduitApp/feature/Articles.feature:40
classpath:conduitApp/feature/Articles.feature:41
classpath:conduitApp/feature/Articles.feature:42
classpath:conduitApp/feature/Articles.feature:43
classpath:conduitApp/feature/Articles.feature:46
classpath:conduitApp/feature/Articles.feature:47
classpath:conduitApp/feature/Articles.feature:48
classpath:conduitApp/feature/Articles.feature:50
classpath:conduitApp/feature/Articles.feature:51
classpath:conduitApp/feature/Articles.feature:52
21:03:30.018 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:53
Then status 200
>> classpath:conduitApp/feature/Articles.feature:30
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
classpath:conduitApp/feature/Articles.feature:9
classpath:conduitApp/feature/Articles.feature:10
classpath:conduitApp/feature/Articles.feature:32
classpath:conduitApp/feature/Articles.feature:33
classpath:conduitApp/feature/Articles.feature:34
classpath:conduitApp/feature/Articles.feature:35
classpath:conduitApp/feature/Articles.feature:36
classpath:conduitApp/feature/Articles.feature:39
classpath:conduitApp/feature/Articles.feature:40
classpath:conduitApp/feature/Articles.feature:41
classpath:conduitApp/feature/Articles.feature:42
classpath:conduitApp/feature/Articles.feature:43
classpath:conduitApp/feature/Articles.feature:46
classpath:conduitApp/feature/Articles.feature:47
classpath:conduitApp/feature/Articles.feature:48
classpath:conduitApp/feature/Articles.feature:50
classpath:conduitApp/feature/Articles.feature:51
classpath:conduitApp/feature/Articles.feature:52
classpath:conduitApp/feature/Articles.feature:53
21:03:30.018 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Articles.feature:54
And match response.articles[0].title != articleRequestBody.article.title
>> classpath:conduitApp/feature/Articles.feature:30
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Articles.feature:5
classpath:conduitApp/feature/Articles.feature:6
classpath:conduitApp/feature/Articles.feature:7
classpath:conduitApp/feature/Articles.feature:8
classpath:conduitApp/feature/Articles.feature:9
classpath:conduitApp/feature/Articles.feature:10
classpath:conduitApp/feature/Articles.feature:32
classpath:conduitApp/feature/Articles.feature:33
classpath:conduitApp/feature/Articles.feature:34
classpath:conduitApp/feature/Articles.feature:35
classpath:conduitApp/feature/Articles.feature:36
classpath:conduitApp/feature/Articles.feature:39
classpath:conduitApp/feature/Articles.feature:40
classpath:conduitApp/feature/Articles.feature:41
classpath:conduitApp/feature/Articles.feature:42
classpath:conduitApp/feature/Articles.feature:43
classpath:conduitApp/feature/Articles.feature:46
classpath:conduitApp/feature/Articles.feature:47
classpath:conduitApp/feature/Articles.feature:48
classpath:conduitApp/feature/Articles.feature:50
classpath:conduitApp/feature/Articles.feature:51
classpath:conduitApp/feature/Articles.feature:52
classpath:conduitApp/feature/Articles.feature:53
classpath:conduitApp/feature/Articles.feature:54
21:03:33.168 [main] INFO  com.intuit.karate - karate.env system property was: null 
21:03:33.173 [main] WARN  com.intuit.karate - callSingle() cached result is an exception
21:03:33.184 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:5
Given url apiUrl
>> classpath:conduitApp/feature/HomePage.feature:8
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
21:03:33.187 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:9
Given path 'tags'
>> classpath:conduitApp/feature/HomePage.feature:8
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:9
21:03:33.187 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:10
When method Get
>> classpath:conduitApp/feature/HomePage.feature:8
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:9
classpath:conduitApp/feature/HomePage.feature:10
21:03:33.188 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:11
Then status 200
>> classpath:conduitApp/feature/HomePage.feature:8
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:9
classpath:conduitApp/feature/HomePage.feature:10
classpath:conduitApp/feature/HomePage.feature:11
21:03:33.188 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:12
And match response.tags contains ['welcome', 'implementations']
>> classpath:conduitApp/feature/HomePage.feature:8
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:9
classpath:conduitApp/feature/HomePage.feature:10
classpath:conduitApp/feature/HomePage.feature:11
classpath:conduitApp/feature/HomePage.feature:12
21:03:33.188 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:13
And match response.tags !contains 'truck'
>> classpath:conduitApp/feature/HomePage.feature:8
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:9
classpath:conduitApp/feature/HomePage.feature:10
classpath:conduitApp/feature/HomePage.feature:11
classpath:conduitApp/feature/HomePage.feature:12
classpath:conduitApp/feature/HomePage.feature:13
21:03:33.188 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:14
And match response.tags contains any ['fish', 'dog', 'ipsum']
>> classpath:conduitApp/feature/HomePage.feature:8
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:9
classpath:conduitApp/feature/HomePage.feature:10
classpath:conduitApp/feature/HomePage.feature:11
classpath:conduitApp/feature/HomePage.feature:12
classpath:conduitApp/feature/HomePage.feature:13
classpath:conduitApp/feature/HomePage.feature:14
21:03:33.188 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:15
And match response.tags == '#array'
>> classpath:conduitApp/feature/HomePage.feature:8
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:9
classpath:conduitApp/feature/HomePage.feature:10
classpath:conduitApp/feature/HomePage.feature:11
classpath:conduitApp/feature/HomePage.feature:12
classpath:conduitApp/feature/HomePage.feature:13
classpath:conduitApp/feature/HomePage.feature:14
classpath:conduitApp/feature/HomePage.feature:15
21:03:33.189 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:16
And match each response.tags == "#string"
>> classpath:conduitApp/feature/HomePage.feature:8
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:9
classpath:conduitApp/feature/HomePage.feature:10
classpath:conduitApp/feature/HomePage.feature:11
classpath:conduitApp/feature/HomePage.feature:12
classpath:conduitApp/feature/HomePage.feature:13
classpath:conduitApp/feature/HomePage.feature:14
classpath:conduitApp/feature/HomePage.feature:15
classpath:conduitApp/feature/HomePage.feature:16
21:03:33.226 [main] INFO  com.intuit.karate - karate.env system property was: null 
21:03:33.228 [main] WARN  com.intuit.karate - callSingle() cached result is an exception
21:03:33.234 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:5
Given url apiUrl
>> classpath:conduitApp/feature/HomePage.feature:19
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
21:03:33.234 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:20
* def timeValidator = read('classpath:helpers/timeValidator.js')
>> classpath:conduitApp/feature/HomePage.feature:19
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:20
21:03:33.234 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:21
Given params { limit: 10, offset: 0}
>> classpath:conduitApp/feature/HomePage.feature:19
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:20
classpath:conduitApp/feature/HomePage.feature:21
21:03:33.234 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:22
Given path 'articles'
>> classpath:conduitApp/feature/HomePage.feature:19
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:20
classpath:conduitApp/feature/HomePage.feature:21
classpath:conduitApp/feature/HomePage.feature:22
21:03:33.234 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:23
When method Get
>> classpath:conduitApp/feature/HomePage.feature:19
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:20
classpath:conduitApp/feature/HomePage.feature:21
classpath:conduitApp/feature/HomePage.feature:22
classpath:conduitApp/feature/HomePage.feature:23
21:03:33.235 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:24
Then status 200
>> classpath:conduitApp/feature/HomePage.feature:19
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:20
classpath:conduitApp/feature/HomePage.feature:21
classpath:conduitApp/feature/HomePage.feature:22
classpath:conduitApp/feature/HomePage.feature:23
classpath:conduitApp/feature/HomePage.feature:24
21:03:33.235 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:25
And match response == { "articles":"#[10]", "articlesCount": 213}
>> classpath:conduitApp/feature/HomePage.feature:19
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:20
classpath:conduitApp/feature/HomePage.feature:21
classpath:conduitApp/feature/HomePage.feature:22
classpath:conduitApp/feature/HomePage.feature:23
classpath:conduitApp/feature/HomePage.feature:24
classpath:conduitApp/feature/HomePage.feature:25
21:03:33.235 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:26
And match response.articles[0].createdAt contains '2023'
>> classpath:conduitApp/feature/HomePage.feature:19
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:20
classpath:conduitApp/feature/HomePage.feature:21
classpath:conduitApp/feature/HomePage.feature:22
classpath:conduitApp/feature/HomePage.feature:23
classpath:conduitApp/feature/HomePage.feature:24
classpath:conduitApp/feature/HomePage.feature:25
classpath:conduitApp/feature/HomePage.feature:26
21:03:33.236 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:27
And match response.articles[*].favoritesCount contains 1
>> classpath:conduitApp/feature/HomePage.feature:19
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:20
classpath:conduitApp/feature/HomePage.feature:21
classpath:conduitApp/feature/HomePage.feature:22
classpath:conduitApp/feature/HomePage.feature:23
classpath:conduitApp/feature/HomePage.feature:24
classpath:conduitApp/feature/HomePage.feature:25
classpath:conduitApp/feature/HomePage.feature:26
classpath:conduitApp/feature/HomePage.feature:27
21:03:33.236 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:28
And match response.articles[*].author.bio contains null
>> classpath:conduitApp/feature/HomePage.feature:19
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:20
classpath:conduitApp/feature/HomePage.feature:21
classpath:conduitApp/feature/HomePage.feature:22
classpath:conduitApp/feature/HomePage.feature:23
classpath:conduitApp/feature/HomePage.feature:24
classpath:conduitApp/feature/HomePage.feature:25
classpath:conduitApp/feature/HomePage.feature:26
classpath:conduitApp/feature/HomePage.feature:27
classpath:conduitApp/feature/HomePage.feature:28
21:03:33.236 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:29
And match each response..following == false
>> classpath:conduitApp/feature/HomePage.feature:19
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:20
classpath:conduitApp/feature/HomePage.feature:21
classpath:conduitApp/feature/HomePage.feature:22
classpath:conduitApp/feature/HomePage.feature:23
classpath:conduitApp/feature/HomePage.feature:24
classpath:conduitApp/feature/HomePage.feature:25
classpath:conduitApp/feature/HomePage.feature:26
classpath:conduitApp/feature/HomePage.feature:27
classpath:conduitApp/feature/HomePage.feature:28
classpath:conduitApp/feature/HomePage.feature:29
21:03:33.236 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:30
And match each response..following == "#boolean"
>> classpath:conduitApp/feature/HomePage.feature:19
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:20
classpath:conduitApp/feature/HomePage.feature:21
classpath:conduitApp/feature/HomePage.feature:22
classpath:conduitApp/feature/HomePage.feature:23
classpath:conduitApp/feature/HomePage.feature:24
classpath:conduitApp/feature/HomePage.feature:25
classpath:conduitApp/feature/HomePage.feature:26
classpath:conduitApp/feature/HomePage.feature:27
classpath:conduitApp/feature/HomePage.feature:28
classpath:conduitApp/feature/HomePage.feature:29
classpath:conduitApp/feature/HomePage.feature:30
21:03:33.236 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:31
And match each response..favoritesCount == "#number"
>> classpath:conduitApp/feature/HomePage.feature:19
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:20
classpath:conduitApp/feature/HomePage.feature:21
classpath:conduitApp/feature/HomePage.feature:22
classpath:conduitApp/feature/HomePage.feature:23
classpath:conduitApp/feature/HomePage.feature:24
classpath:conduitApp/feature/HomePage.feature:25
classpath:conduitApp/feature/HomePage.feature:26
classpath:conduitApp/feature/HomePage.feature:27
classpath:conduitApp/feature/HomePage.feature:28
classpath:conduitApp/feature/HomePage.feature:29
classpath:conduitApp/feature/HomePage.feature:30
classpath:conduitApp/feature/HomePage.feature:31
21:03:33.236 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:32
And match each response..bio == "##string"
>> classpath:conduitApp/feature/HomePage.feature:19
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:20
classpath:conduitApp/feature/HomePage.feature:21
classpath:conduitApp/feature/HomePage.feature:22
classpath:conduitApp/feature/HomePage.feature:23
classpath:conduitApp/feature/HomePage.feature:24
classpath:conduitApp/feature/HomePage.feature:25
classpath:conduitApp/feature/HomePage.feature:26
classpath:conduitApp/feature/HomePage.feature:27
classpath:conduitApp/feature/HomePage.feature:28
classpath:conduitApp/feature/HomePage.feature:29
classpath:conduitApp/feature/HomePage.feature:30
classpath:conduitApp/feature/HomePage.feature:31
classpath:conduitApp/feature/HomePage.feature:32
21:03:33.237 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:33
And match each response.articles ==
"""
{
    "slug": "#string",
    "title": "#string",
    "description": "#string",
    "body": "#string",
    "tagList": "#array",
    "createdAt": "#? timeValidator(_)",
    "updatedAt": "#? timeValidator(_)",
    "favorited": '#boolean',
    "favoritesCount": "#number",
    "author": {
        "username": "#string",
        "bio": "##string",
        "image": "#string",
        "following": '#boolean'
    }
}
"""
>> classpath:conduitApp/feature/HomePage.feature:19
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:20
classpath:conduitApp/feature/HomePage.feature:21
classpath:conduitApp/feature/HomePage.feature:22
classpath:conduitApp/feature/HomePage.feature:23
classpath:conduitApp/feature/HomePage.feature:24
classpath:conduitApp/feature/HomePage.feature:25
classpath:conduitApp/feature/HomePage.feature:26
classpath:conduitApp/feature/HomePage.feature:27
classpath:conduitApp/feature/HomePage.feature:28
classpath:conduitApp/feature/HomePage.feature:29
classpath:conduitApp/feature/HomePage.feature:30
classpath:conduitApp/feature/HomePage.feature:31
classpath:conduitApp/feature/HomePage.feature:32
classpath:conduitApp/feature/HomePage.feature:33
21:03:33.255 [main] INFO  com.intuit.karate - karate.env system property was: null 
21:03:33.256 [main] WARN  com.intuit.karate - callSingle() cached result is an exception
21:03:33.263 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:5
Given url apiUrl
>> classpath:conduitApp/feature/HomePage.feature:54
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
21:03:33.263 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:55
* def foo = 10
>> classpath:conduitApp/feature/HomePage.feature:54
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:55
21:03:33.264 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:56
* def json = {"bar": #(foo+'')}
>> classpath:conduitApp/feature/HomePage.feature:54
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:55
classpath:conduitApp/feature/HomePage.feature:56
21:03:33.264 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:57
* match json == {"bar": '10'}
>> classpath:conduitApp/feature/HomePage.feature:54
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:55
classpath:conduitApp/feature/HomePage.feature:56
classpath:conduitApp/feature/HomePage.feature:57
21:03:33.277 [main] INFO  com.intuit.karate - karate.env system property was: null 
21:03:33.278 [main] WARN  com.intuit.karate - callSingle() cached result is an exception
21:03:33.284 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:5
Given url apiUrl
>> classpath:conduitApp/feature/HomePage.feature:59
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
21:03:33.285 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:60
* def foo = '10'
>> classpath:conduitApp/feature/HomePage.feature:59
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:60
21:03:33.285 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:61
* def json = {"Bar": #(foo*1)}
>> classpath:conduitApp/feature/HomePage.feature:59
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:60
classpath:conduitApp/feature/HomePage.feature:61
21:03:33.285 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/HomePage.feature:62
* match json == {"bar": 10}
>> classpath:conduitApp/feature/HomePage.feature:59
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/HomePage.feature:5
classpath:conduitApp/feature/HomePage.feature:60
classpath:conduitApp/feature/HomePage.feature:61
classpath:conduitApp/feature/HomePage.feature:62
21:03:33.519 [main] INFO  com.intuit.karate - karate.env system property was: null 
21:03:33.520 [main] WARN  com.intuit.karate - callSingle() cached result is an exception
21:03:33.532 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Hooks.feature:6
* def result = callonce read('classpath:helpers/Dummy.feature')
>> classpath:conduitApp/feature/Hooks.feature:19
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Hooks.feature:6
21:03:33.532 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Hooks.feature:8
* def username = result.username
>> classpath:conduitApp/feature/Hooks.feature:19
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Hooks.feature:6
classpath:conduitApp/feature/Hooks.feature:8
21:03:33.532 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Hooks.feature:20
* print username
>> classpath:conduitApp/feature/Hooks.feature:19
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Hooks.feature:6
classpath:conduitApp/feature/Hooks.feature:8
classpath:conduitApp/feature/Hooks.feature:20
21:03:33.532 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Hooks.feature:21
* print 'This is first scenario'
>> classpath:conduitApp/feature/Hooks.feature:19
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Hooks.feature:6
classpath:conduitApp/feature/Hooks.feature:8
classpath:conduitApp/feature/Hooks.feature:20
classpath:conduitApp/feature/Hooks.feature:21
21:03:33.541 [main] INFO  com.intuit.karate - karate.env system property was: null 
21:03:33.541 [main] WARN  com.intuit.karate - callSingle() cached result is an exception
21:03:33.546 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Hooks.feature:6
* def result = callonce read('classpath:helpers/Dummy.feature')
>> classpath:conduitApp/feature/Hooks.feature:23
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Hooks.feature:6
21:03:33.547 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Hooks.feature:8
* def username = result.username
>> classpath:conduitApp/feature/Hooks.feature:23
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Hooks.feature:6
classpath:conduitApp/feature/Hooks.feature:8
21:03:33.548 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Hooks.feature:24
* print username
>> classpath:conduitApp/feature/Hooks.feature:23
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Hooks.feature:6
classpath:conduitApp/feature/Hooks.feature:8
classpath:conduitApp/feature/Hooks.feature:24
21:03:33.548 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/Hooks.feature:25
* print 'This is second scenario'
>> classpath:conduitApp/feature/Hooks.feature:23
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/Hooks.feature:6
classpath:conduitApp/feature/Hooks.feature:8
classpath:conduitApp/feature/Hooks.feature:24
classpath:conduitApp/feature/Hooks.feature:25
21:03:33.641 [main] INFO  com.intuit.karate - karate.env system property was: null 
21:03:33.642 [main] WARN  com.intuit.karate - callSingle() cached result is an exception
21:03:33.644 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/SignUp.feature:6
* def dataGenerator = Java.type('helpers.DataGenerator')
>> classpath:conduitApp/feature/SignUp.feature:11
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
21:03:33.645 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/SignUp.feature:7
Given url apiUrl
>> classpath:conduitApp/feature/SignUp.feature:11
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
classpath:conduitApp/feature/SignUp.feature:7
21:03:33.645 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/SignUp.feature:8
* def randomEmail = dataGenerator.getRandomEmail()
>> classpath:conduitApp/feature/SignUp.feature:11
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
classpath:conduitApp/feature/SignUp.feature:7
classpath:conduitApp/feature/SignUp.feature:8
21:03:33.645 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/SignUp.feature:9
* def randomUserName = dataGenerator.getRandomUserName()
>> classpath:conduitApp/feature/SignUp.feature:11
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
classpath:conduitApp/feature/SignUp.feature:7
classpath:conduitApp/feature/SignUp.feature:8
classpath:conduitApp/feature/SignUp.feature:9
21:03:33.645 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/SignUp.feature:12
Given path 'users'
>> classpath:conduitApp/feature/SignUp.feature:11
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
classpath:conduitApp/feature/SignUp.feature:7
classpath:conduitApp/feature/SignUp.feature:8
classpath:conduitApp/feature/SignUp.feature:9
classpath:conduitApp/feature/SignUp.feature:12
21:03:33.645 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/SignUp.feature:13
* print randomEmail
>> classpath:conduitApp/feature/SignUp.feature:11
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
classpath:conduitApp/feature/SignUp.feature:7
classpath:conduitApp/feature/SignUp.feature:8
classpath:conduitApp/feature/SignUp.feature:9
classpath:conduitApp/feature/SignUp.feature:12
classpath:conduitApp/feature/SignUp.feature:13
21:03:33.645 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/SignUp.feature:15
And request
"""
{
    "user": {
        "email": #(randomEmail),
        "password": "karate1234",
        "username": #(randomUserName)
    }
}
"""
>> classpath:conduitApp/feature/SignUp.feature:11
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
classpath:conduitApp/feature/SignUp.feature:7
classpath:conduitApp/feature/SignUp.feature:8
classpath:conduitApp/feature/SignUp.feature:9
classpath:conduitApp/feature/SignUp.feature:12
classpath:conduitApp/feature/SignUp.feature:13
classpath:conduitApp/feature/SignUp.feature:15
21:03:33.645 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/SignUp.feature:25
When method Post
>> classpath:conduitApp/feature/SignUp.feature:11
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
classpath:conduitApp/feature/SignUp.feature:7
classpath:conduitApp/feature/SignUp.feature:8
classpath:conduitApp/feature/SignUp.feature:9
classpath:conduitApp/feature/SignUp.feature:12
classpath:conduitApp/feature/SignUp.feature:13
classpath:conduitApp/feature/SignUp.feature:15
classpath:conduitApp/feature/SignUp.feature:25
21:03:33.646 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/SignUp.feature:26
Then status 201
>> classpath:conduitApp/feature/SignUp.feature:11
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
classpath:conduitApp/feature/SignUp.feature:7
classpath:conduitApp/feature/SignUp.feature:8
classpath:conduitApp/feature/SignUp.feature:9
classpath:conduitApp/feature/SignUp.feature:12
classpath:conduitApp/feature/SignUp.feature:13
classpath:conduitApp/feature/SignUp.feature:15
classpath:conduitApp/feature/SignUp.feature:25
classpath:conduitApp/feature/SignUp.feature:26
21:03:33.646 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/SignUp.feature:27
And match response ==
"""
{
    "user": {
        "email": #(randomEmail),
        "username": #(randomUserName),
        "bio": null,
        "image": "#string",
        "token": "#string"
    }
}
"""
>> classpath:conduitApp/feature/SignUp.feature:11
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
classpath:conduitApp/feature/SignUp.feature:7
classpath:conduitApp/feature/SignUp.feature:8
classpath:conduitApp/feature/SignUp.feature:9
classpath:conduitApp/feature/SignUp.feature:12
classpath:conduitApp/feature/SignUp.feature:13
classpath:conduitApp/feature/SignUp.feature:15
classpath:conduitApp/feature/SignUp.feature:25
classpath:conduitApp/feature/SignUp.feature:26
classpath:conduitApp/feature/SignUp.feature:27
21:03:33.676 [main] INFO  com.intuit.karate - karate.env system property was: null 
21:03:33.676 [main] WARN  com.intuit.karate - callSingle() cached result is an exception
21:03:33.681 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/SignUp.feature:6
* def dataGenerator = Java.type('helpers.DataGenerator')
>> classpath:conduitApp/feature/SignUp.feature:60
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
21:03:33.681 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/SignUp.feature:7
Given url apiUrl
>> classpath:conduitApp/feature/SignUp.feature:60
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
classpath:conduitApp/feature/SignUp.feature:7
21:03:33.681 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/SignUp.feature:8
* def randomEmail = dataGenerator.getRandomEmail()
>> classpath:conduitApp/feature/SignUp.feature:60
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
classpath:conduitApp/feature/SignUp.feature:7
classpath:conduitApp/feature/SignUp.feature:8
21:03:33.681 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/SignUp.feature:9
* def randomUserName = dataGenerator.getRandomUserName()
>> classpath:conduitApp/feature/SignUp.feature:60
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
classpath:conduitApp/feature/SignUp.feature:7
classpath:conduitApp/feature/SignUp.feature:8
classpath:conduitApp/feature/SignUp.feature:9
21:03:33.682 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/SignUp.feature:41
Given path 'users'
>> classpath:conduitApp/feature/SignUp.feature:60
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
classpath:conduitApp/feature/SignUp.feature:7
classpath:conduitApp/feature/SignUp.feature:8
classpath:conduitApp/feature/SignUp.feature:9
classpath:conduitApp/feature/SignUp.feature:41
21:03:33.682 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/SignUp.feature:42
And request
"""
{
    "user": {
        "email": "#(randomEmail)",
        "password": "Karate123",
        "username": "KarateUser12344534523"
    }
}
"""
>> classpath:conduitApp/feature/SignUp.feature:60
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
classpath:conduitApp/feature/SignUp.feature:7
classpath:conduitApp/feature/SignUp.feature:8
classpath:conduitApp/feature/SignUp.feature:9
classpath:conduitApp/feature/SignUp.feature:41
classpath:conduitApp/feature/SignUp.feature:42
21:03:33.682 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/SignUp.feature:53
When method Post
>> classpath:conduitApp/feature/SignUp.feature:60
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
classpath:conduitApp/feature/SignUp.feature:7
classpath:conduitApp/feature/SignUp.feature:8
classpath:conduitApp/feature/SignUp.feature:9
classpath:conduitApp/feature/SignUp.feature:41
classpath:conduitApp/feature/SignUp.feature:42
classpath:conduitApp/feature/SignUp.feature:53
21:03:33.682 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/SignUp.feature:54
Then status 422
>> classpath:conduitApp/feature/SignUp.feature:60
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
classpath:conduitApp/feature/SignUp.feature:7
classpath:conduitApp/feature/SignUp.feature:8
classpath:conduitApp/feature/SignUp.feature:9
classpath:conduitApp/feature/SignUp.feature:41
classpath:conduitApp/feature/SignUp.feature:42
classpath:conduitApp/feature/SignUp.feature:53
classpath:conduitApp/feature/SignUp.feature:54
21:03:33.682 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/SignUp.feature:55
And match response == {"errors":{"username":["has already been taken"]}}
>> classpath:conduitApp/feature/SignUp.feature:60
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
classpath:conduitApp/feature/SignUp.feature:7
classpath:conduitApp/feature/SignUp.feature:8
classpath:conduitApp/feature/SignUp.feature:9
classpath:conduitApp/feature/SignUp.feature:41
classpath:conduitApp/feature/SignUp.feature:42
classpath:conduitApp/feature/SignUp.feature:53
classpath:conduitApp/feature/SignUp.feature:54
classpath:conduitApp/feature/SignUp.feature:55
21:03:33.703 [main] INFO  com.intuit.karate - karate.env system property was: null 
21:03:33.703 [main] WARN  com.intuit.karate - callSingle() cached result is an exception
21:03:33.706 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/SignUp.feature:6
* def dataGenerator = Java.type('helpers.DataGenerator')
>> classpath:conduitApp/feature/SignUp.feature:61
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
21:03:33.706 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/SignUp.feature:7
Given url apiUrl
>> classpath:conduitApp/feature/SignUp.feature:61
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
classpath:conduitApp/feature/SignUp.feature:7
21:03:33.706 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/SignUp.feature:8
* def randomEmail = dataGenerator.getRandomEmail()
>> classpath:conduitApp/feature/SignUp.feature:61
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
classpath:conduitApp/feature/SignUp.feature:7
classpath:conduitApp/feature/SignUp.feature:8
21:03:33.706 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/SignUp.feature:9
* def randomUserName = dataGenerator.getRandomUserName()
>> classpath:conduitApp/feature/SignUp.feature:61
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
classpath:conduitApp/feature/SignUp.feature:7
classpath:conduitApp/feature/SignUp.feature:8
classpath:conduitApp/feature/SignUp.feature:9
21:03:33.706 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/SignUp.feature:41
Given path 'users'
>> classpath:conduitApp/feature/SignUp.feature:61
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
classpath:conduitApp/feature/SignUp.feature:7
classpath:conduitApp/feature/SignUp.feature:8
classpath:conduitApp/feature/SignUp.feature:9
classpath:conduitApp/feature/SignUp.feature:41
21:03:33.706 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/SignUp.feature:42
And request
"""
{
    "user": {
        "email": "javierkarate1@test.com",
        "password": "Karate123",
        "username": "#(randomUserName)"
    }
}
"""
>> classpath:conduitApp/feature/SignUp.feature:61
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
classpath:conduitApp/feature/SignUp.feature:7
classpath:conduitApp/feature/SignUp.feature:8
classpath:conduitApp/feature/SignUp.feature:9
classpath:conduitApp/feature/SignUp.feature:41
classpath:conduitApp/feature/SignUp.feature:42
21:03:33.708 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/SignUp.feature:53
When method Post
>> classpath:conduitApp/feature/SignUp.feature:61
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
classpath:conduitApp/feature/SignUp.feature:7
classpath:conduitApp/feature/SignUp.feature:8
classpath:conduitApp/feature/SignUp.feature:9
classpath:conduitApp/feature/SignUp.feature:41
classpath:conduitApp/feature/SignUp.feature:42
classpath:conduitApp/feature/SignUp.feature:53
21:03:33.709 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/SignUp.feature:54
Then status 422
>> classpath:conduitApp/feature/SignUp.feature:61
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
classpath:conduitApp/feature/SignUp.feature:7
classpath:conduitApp/feature/SignUp.feature:8
classpath:conduitApp/feature/SignUp.feature:9
classpath:conduitApp/feature/SignUp.feature:41
classpath:conduitApp/feature/SignUp.feature:42
classpath:conduitApp/feature/SignUp.feature:53
classpath:conduitApp/feature/SignUp.feature:54
21:03:33.709 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/SignUp.feature:55
And match response == {"errors":{"email":["has already been taken"]}}
>> classpath:conduitApp/feature/SignUp.feature:61
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/SignUp.feature:6
classpath:conduitApp/feature/SignUp.feature:7
classpath:conduitApp/feature/SignUp.feature:8
classpath:conduitApp/feature/SignUp.feature:9
classpath:conduitApp/feature/SignUp.feature:41
classpath:conduitApp/feature/SignUp.feature:42
classpath:conduitApp/feature/SignUp.feature:53
classpath:conduitApp/feature/SignUp.feature:54
classpath:conduitApp/feature/SignUp.feature:55
21:03:33.836 [main] INFO  com.intuit.karate - karate.env system property was: null 
21:03:33.839 [main] WARN  com.intuit.karate - callSingle() cached result is an exception
21:03:33.841 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/WorkWithDb.feature:6
* def dbHandler = Java.type('helpers.DbHandler')
>> classpath:conduitApp/feature/WorkWithDb.feature:9
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/WorkWithDb.feature:6
21:03:33.841 [main] ERROR com.intuit.karate - classpath:conduitApp/feature/WorkWithDb.feature:10
* eval dbHandler.addNewProduct("AA")
>> classpath:conduitApp/feature/WorkWithDb.feature:9
>> karate-config.js failed
>> js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
com.intuit.karate.KarateException: js failed:
>>>>
01: function fn() {
02:   var env = karate.env; // get system property 'karate.env'
03:   karate.log('karate.env system property was:', env);
04:   if (!env) {
05:     env = 'dev';
06:   }
07:   var config = {
08:     
09:     apiUrl: 'https://api.realworld.io/api/'
10:   }
11:   if (env == 'dev') {
12:     
13:     config.userEmail = 'javierkarate1@test.com'
14:     config.userPassword = 'karate1234'
15: 
16:   } if (env == 'qa') {
17: 
18:     config.userEmail = 'javierkarate2@test.com'
19:     config.userPassword = 'karate1234'
20:   }
21: 
22:   var accesToken = karate.callSingle('classpath:helpers/CreateToken.feature', config).authToken
23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})
24:   
25: 
26:   return config;
27: }
<<<<
org.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https://api.realworld.io/api/users/login, response: 
{"errors":{"email or password":["is invalid"]}}
classpath:helpers/CreateToken.feature:8
- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)
- <js>.fn(Unnamed:22)

- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)
- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)
- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)
- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)
- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)
- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)
- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)

classpath:conduitApp/feature/WorkWithDb.feature:6
classpath:conduitApp/feature/WorkWithDb.feature:10
