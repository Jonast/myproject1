{"failedCount":2,"prefixedPath":"classpath:conduitApp\/feature\/Articles.feature","packageQualifiedName":"conduitApp.feature.Articles","loopIndex":-1,"relativePath":"conduitApp\/feature\/Articles.feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":0,"errorMessage":">> classpath:conduitApp\/feature\/Articles.feature:21\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5","millis":0.0,"status":"failed"},"step":{"background":true,"line":5,"prefix":"*","index":0,"text":"url apiUrl"},"stepLog":"21:03:29.897 callSingle() will cache an exception\n21:03:29.897 << lock released, cached callSingle: classpath:helpers\/CreateToken.feature\n21:03:29.897 callSingle() cached result is an exception\n21:03:29.933 classpath:conduitApp\/feature\/Articles.feature:5\n* url apiUrl\n>> classpath:conduitApp\/feature\/Articles.feature:21\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\n","callResults":[{"prefixedPath":"classpath:helpers\/CreateToken.feature","loopIndex":-1,"callDepth":1,"description":"","resultDate":"2024-01-10 09:03:30 PM","durationMillis":1463.728624,"callArg":{"apiUrl":"https:\/\/api.realworld.io\/api\/","userEmail":"javierkarate1@test.com","userPassword":"karate1234"},"failedCount":1,"packageQualifiedName":"helpers.CreateToken","relativePath":"helpers\/CreateToken.feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":961750,"millis":0.96175,"status":"passed"},"step":{"line":4,"prefix":"Given","index":0,"text":"url apiUrl"},"stepLog":"21:03:28.319 karate.env system property was: null \n21:03:28.336 >> lock acquired, begin callSingle: classpath:helpers\/CreateToken.feature\n"},{"result":{"nanos":2898083,"millis":2.898083,"status":"passed"},"step":{"line":5,"prefix":"Given","index":1,"text":"path 'users\/login'"}},{"result":{"nanos":45075458,"millis":45.075458,"status":"passed"},"step":{"line":6,"prefix":"And","index":2,"text":"request {\"user\": {\"email\": \"#(userEmail)\", \"password\": \"#(userPassword)\"}}"}},{"result":{"nanos":1414338250,"millis":1414.33825,"status":"passed"},"step":{"line":7,"prefix":"When","index":3,"text":"method Post"},"stepLog":"21:03:29.114 request:\n1 > POST https:\/\/api.realworld.io\/api\/users\/login\n1 > Content-Type: application\/json; charset=UTF-8\n1 > Content-Length: 67\n1 > Host: api.realworld.io\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/1.8.0_331)\n1 > Accept-Encoding: gzip,deflate\n{\"user\":{\"email\":\"javierkarate1@test.com\",\"password\":\"karate1234\"}}\n\n21:03:29.879 response time in milliseconds: 757\n1 < 403\n1 < Date: Thu, 11 Jan 2024 00:03:29 GMT\n1 < Content-Type: application\/json; charset=utf-8\n1 < Content-Length: 47\n1 < Connection: keep-alive\n1 < Report-To: {\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https:\/\/nel.heroku.com\/reports?ts=1704931409&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=5389d8uXdPfWU5CpnF%2FPb0ErZC2awRcLszUERmymYVU%3D\"}]}\n1 < Reporting-Endpoints: heroku-nel=https:\/\/nel.heroku.com\/reports?ts=1704931409&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=5389d8uXdPfWU5CpnF%2FPb0ErZC2awRcLszUERmymYVU%3D\n1 < Nel: {\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}\n1 < X-Powered-By: Express\n1 < Access-Control-Allow-Origin: *\n1 < Etag: W\/\"2f-83PWxEwXkLR3WfVjo3wqB0FwKlU\"\n1 < Via: 1.1 vegur\n1 < CF-Cache-Status: DYNAMIC\n1 < Server: cloudflare\n1 < CF-RAY: 8438e59b08976f2f-SCL\n1 < alt-svc: h3=\":443\"; ma=86400\n{\"errors\":{\"email or password\":[\"is invalid\"]}}\n"},{"result":{"nanos":455083,"errorMessage":"status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8","millis":0.455083,"status":"failed"},"step":{"line":8,"prefix":"Then","index":4,"text":"status 200"},"stepLog":"21:03:29.892 classpath:helpers\/CreateToken.feature:8\nThen status 200\nstatus code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n"},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":9,"prefix":"*","index":5,"text":"def authToken = response.user.token"}}],"line":3,"description":"","durationMillis":1463.728624,"failed":true,"error":"status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8","executorName":"main","name":"Create token","startTime":1704931408400,"refId":"[1:3]","endTime":1704931409892,"exampleIndex":-1}],"name":"Create token","passedCount":0}]},{"result":{"nanos":0,"errorMessage":">> classpath:conduitApp\/feature\/Articles.feature:21\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6","millis":0.0,"status":"failed"},"step":{"background":true,"line":6,"prefix":"*","index":1,"text":"def articleRequestBody = read('classpath:conduitApp\/json\/newArticleRequest.json')"},"stepLog":"21:03:29.934 classpath:conduitApp\/feature\/Articles.feature:6\n* def articleRequestBody = read('classpath:conduitApp\/json\/newArticleRequest.json')\n>> classpath:conduitApp\/feature\/Articles.feature:21\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\n"},{"result":{"nanos":0,"errorMessage":">> classpath:conduitApp\/feature\/Articles.feature:21\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7","millis":0.0,"status":"failed"},"step":{"background":true,"line":7,"prefix":"*","index":2,"text":"def dataGenerator = Java.type('helpers.DataGenerator')"},"stepLog":"21:03:29.934 classpath:conduitApp\/feature\/Articles.feature:7\n* def dataGenerator = Java.type('helpers.DataGenerator')\n>> classpath:conduitApp\/feature\/Articles.feature:21\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\n"},{"result":{"nanos":0,"errorMessage":">> classpath:conduitApp\/feature\/Articles.feature:21\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\nclasspath:conduitApp\/feature\/Articles.feature:8","millis":0.0,"status":"failed"},"step":{"background":true,"line":8,"prefix":"*","index":3,"text":"set articleRequestBody.article.title = dataGenerator.getRandomArticleValues().title"},"stepLog":"21:03:29.934 classpath:conduitApp\/feature\/Articles.feature:8\n* set articleRequestBody.article.title = dataGenerator.getRandomArticleValues().title\n>> classpath:conduitApp\/feature\/Articles.feature:21\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\nclasspath:conduitApp\/feature\/Articles.feature:8\n"},{"result":{"nanos":0,"errorMessage":">> classpath:conduitApp\/feature\/Articles.feature:21\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\nclasspath:conduitApp\/feature\/Articles.feature:8\nclasspath:conduitApp\/feature\/Articles.feature:9","millis":0.0,"status":"failed"},"step":{"background":true,"line":9,"prefix":"*","index":4,"text":"set articleRequestBody.article.description = dataGenerator.getRandomArticleValues().description"},"stepLog":"21:03:29.935 classpath:conduitApp\/feature\/Articles.feature:9\n* set articleRequestBody.article.description = dataGenerator.getRandomArticleValues().description\n>> classpath:conduitApp\/feature\/Articles.feature:21\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\nclasspath:conduitApp\/feature\/Articles.feature:8\nclasspath:conduitApp\/feature\/Articles.feature:9\n"},{"result":{"nanos":0,"errorMessage":">> classpath:conduitApp\/feature\/Articles.feature:21\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\nclasspath:conduitApp\/feature\/Articles.feature:8\nclasspath:conduitApp\/feature\/Articles.feature:9\nclasspath:conduitApp\/feature\/Articles.feature:10","millis":0.0,"status":"failed"},"step":{"background":true,"line":10,"prefix":"*","index":5,"text":"set articleRequestBody.article.body = dataGenerator.getRandomArticleValues().body"},"stepLog":"21:03:29.935 classpath:conduitApp\/feature\/Articles.feature:10\n* set articleRequestBody.article.body = dataGenerator.getRandomArticleValues().body\n>> classpath:conduitApp\/feature\/Articles.feature:21\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\nclasspath:conduitApp\/feature\/Articles.feature:8\nclasspath:conduitApp\/feature\/Articles.feature:9\nclasspath:conduitApp\/feature\/Articles.feature:10\n"},{"result":{"nanos":0,"errorMessage":">> classpath:conduitApp\/feature\/Articles.feature:21\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\nclasspath:conduitApp\/feature\/Articles.feature:8\nclasspath:conduitApp\/feature\/Articles.feature:9\nclasspath:conduitApp\/feature\/Articles.feature:10\nclasspath:conduitApp\/feature\/Articles.feature:23","millis":0.0,"status":"failed"},"step":{"comments":["#Given header Authorization = 'Token ' + token"],"line":23,"prefix":"Given","index":0,"text":"path 'articles'"},"stepLog":"21:03:29.935 classpath:conduitApp\/feature\/Articles.feature:23\nGiven path 'articles'\n>> classpath:conduitApp\/feature\/Articles.feature:21\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\nclasspath:conduitApp\/feature\/Articles.feature:8\nclasspath:conduitApp\/feature\/Articles.feature:9\nclasspath:conduitApp\/feature\/Articles.feature:10\nclasspath:conduitApp\/feature\/Articles.feature:23\n"},{"result":{"nanos":0,"errorMessage":">> classpath:conduitApp\/feature\/Articles.feature:21\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\nclasspath:conduitApp\/feature\/Articles.feature:8\nclasspath:conduitApp\/feature\/Articles.feature:9\nclasspath:conduitApp\/feature\/Articles.feature:10\nclasspath:conduitApp\/feature\/Articles.feature:23\nclasspath:conduitApp\/feature\/Articles.feature:24","millis":0.0,"status":"failed"},"step":{"line":24,"prefix":"And","index":1,"text":"request articleRequestBody"},"stepLog":"21:03:29.935 classpath:conduitApp\/feature\/Articles.feature:24\nAnd request articleRequestBody\n>> classpath:conduitApp\/feature\/Articles.feature:21\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\nclasspath:conduitApp\/feature\/Articles.feature:8\nclasspath:conduitApp\/feature\/Articles.feature:9\nclasspath:conduitApp\/feature\/Articles.feature:10\nclasspath:conduitApp\/feature\/Articles.feature:23\nclasspath:conduitApp\/feature\/Articles.feature:24\n"},{"result":{"nanos":0,"errorMessage":">> classpath:conduitApp\/feature\/Articles.feature:21\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\nclasspath:conduitApp\/feature\/Articles.feature:8\nclasspath:conduitApp\/feature\/Articles.feature:9\nclasspath:conduitApp\/feature\/Articles.feature:10\nclasspath:conduitApp\/feature\/Articles.feature:23\nclasspath:conduitApp\/feature\/Articles.feature:24\nclasspath:conduitApp\/feature\/Articles.feature:25","millis":0.0,"status":"failed"},"step":{"line":25,"prefix":"When","index":2,"text":"method Post"},"stepLog":"21:03:29.936 classpath:conduitApp\/feature\/Articles.feature:25\nWhen method Post\n>> classpath:conduitApp\/feature\/Articles.feature:21\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\nclasspath:conduitApp\/feature\/Articles.feature:8\nclasspath:conduitApp\/feature\/Articles.feature:9\nclasspath:conduitApp\/feature\/Articles.feature:10\nclasspath:conduitApp\/feature\/Articles.feature:23\nclasspath:conduitApp\/feature\/Articles.feature:24\nclasspath:conduitApp\/feature\/Articles.feature:25\n"},{"result":{"nanos":0,"errorMessage":">> classpath:conduitApp\/feature\/Articles.feature:21\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\nclasspath:conduitApp\/feature\/Articles.feature:8\nclasspath:conduitApp\/feature\/Articles.feature:9\nclasspath:conduitApp\/feature\/Articles.feature:10\nclasspath:conduitApp\/feature\/Articles.feature:23\nclasspath:conduitApp\/feature\/Articles.feature:24\nclasspath:conduitApp\/feature\/Articles.feature:25\nclasspath:conduitApp\/feature\/Articles.feature:26","millis":0.0,"status":"failed"},"step":{"line":26,"prefix":"Then","index":3,"text":"status 201"},"stepLog":"21:03:29.936 classpath:conduitApp\/feature\/Articles.feature:26\nThen status 201\n>> classpath:conduitApp\/feature\/Articles.feature:21\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\nclasspath:conduitApp\/feature\/Articles.feature:8\nclasspath:conduitApp\/feature\/Articles.feature:9\nclasspath:conduitApp\/feature\/Articles.feature:10\nclasspath:conduitApp\/feature\/Articles.feature:23\nclasspath:conduitApp\/feature\/Articles.feature:24\nclasspath:conduitApp\/feature\/Articles.feature:25\nclasspath:conduitApp\/feature\/Articles.feature:26\n"},{"result":{"nanos":0,"errorMessage":">> classpath:conduitApp\/feature\/Articles.feature:21\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\nclasspath:conduitApp\/feature\/Articles.feature:8\nclasspath:conduitApp\/feature\/Articles.feature:9\nclasspath:conduitApp\/feature\/Articles.feature:10\nclasspath:conduitApp\/feature\/Articles.feature:23\nclasspath:conduitApp\/feature\/Articles.feature:24\nclasspath:conduitApp\/feature\/Articles.feature:25\nclasspath:conduitApp\/feature\/Articles.feature:26\nclasspath:conduitApp\/feature\/Articles.feature:27","millis":0.0,"status":"failed"},"step":{"line":27,"prefix":"And","index":4,"text":"match response.article.title == articleRequestBody.article.title"},"stepLog":"21:03:29.936 classpath:conduitApp\/feature\/Articles.feature:27\nAnd match response.article.title == articleRequestBody.article.title\n>> classpath:conduitApp\/feature\/Articles.feature:21\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\nclasspath:conduitApp\/feature\/Articles.feature:8\nclasspath:conduitApp\/feature\/Articles.feature:9\nclasspath:conduitApp\/feature\/Articles.feature:10\nclasspath:conduitApp\/feature\/Articles.feature:23\nclasspath:conduitApp\/feature\/Articles.feature:24\nclasspath:conduitApp\/feature\/Articles.feature:25\nclasspath:conduitApp\/feature\/Articles.feature:26\nclasspath:conduitApp\/feature\/Articles.feature:27\n"}],"line":21,"description":"","durationMillis":0.0,"failed":true,"error":">> classpath:conduitApp\/feature\/Articles.feature:21\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\nclasspath:conduitApp\/feature\/Articles.feature:8\nclasspath:conduitApp\/feature\/Articles.feature:9\nclasspath:conduitApp\/feature\/Articles.feature:10\nclasspath:conduitApp\/feature\/Articles.feature:23\nclasspath:conduitApp\/feature\/Articles.feature:24\nclasspath:conduitApp\/feature\/Articles.feature:25\nclasspath:conduitApp\/feature\/Articles.feature:26\nclasspath:conduitApp\/feature\/Articles.feature:27","executorName":"main","name":"Create a new article","startTime":1704931408135,"refId":"[1:21]","endTime":1704931409936,"exampleIndex":-1},{"sectionIndex":1,"stepResults":[{"result":{"nanos":0,"errorMessage":">> classpath:conduitApp\/feature\/Articles.feature:30\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5","millis":0.0,"status":"failed"},"step":{"background":true,"line":5,"prefix":"*","index":0,"text":"url apiUrl"},"stepLog":"21:03:30.004 karate.env system property was: null \n21:03:30.007 callSingle() cached result is an exception\n21:03:30.010 classpath:conduitApp\/feature\/Articles.feature:5\n* url apiUrl\n>> classpath:conduitApp\/feature\/Articles.feature:30\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\n"},{"result":{"nanos":0,"errorMessage":">> classpath:conduitApp\/feature\/Articles.feature:30\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6","millis":0.0,"status":"failed"},"step":{"background":true,"line":6,"prefix":"*","index":1,"text":"def articleRequestBody = read('classpath:conduitApp\/json\/newArticleRequest.json')"},"stepLog":"21:03:30.010 classpath:conduitApp\/feature\/Articles.feature:6\n* def articleRequestBody = read('classpath:conduitApp\/json\/newArticleRequest.json')\n>> classpath:conduitApp\/feature\/Articles.feature:30\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\n"},{"result":{"nanos":0,"errorMessage":">> classpath:conduitApp\/feature\/Articles.feature:30\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7","millis":0.0,"status":"failed"},"step":{"background":true,"line":7,"prefix":"*","index":2,"text":"def dataGenerator = Java.type('helpers.DataGenerator')"},"stepLog":"21:03:30.011 classpath:conduitApp\/feature\/Articles.feature:7\n* def dataGenerator = Java.type('helpers.DataGenerator')\n>> classpath:conduitApp\/feature\/Articles.feature:30\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\n"},{"result":{"nanos":0,"errorMessage":">> classpath:conduitApp\/feature\/Articles.feature:30\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\nclasspath:conduitApp\/feature\/Articles.feature:8","millis":0.0,"status":"failed"},"step":{"background":true,"line":8,"prefix":"*","index":3,"text":"set articleRequestBody.article.title = dataGenerator.getRandomArticleValues().title"},"stepLog":"21:03:30.011 classpath:conduitApp\/feature\/Articles.feature:8\n* set articleRequestBody.article.title = dataGenerator.getRandomArticleValues().title\n>> classpath:conduitApp\/feature\/Articles.feature:30\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\nclasspath:conduitApp\/feature\/Articles.feature:8\n"},{"result":{"nanos":0,"errorMessage":">> classpath:conduitApp\/feature\/Articles.feature:30\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\nclasspath:conduitApp\/feature\/Articles.feature:8\nclasspath:conduitApp\/feature\/Articles.feature:9","millis":0.0,"status":"failed"},"step":{"background":true,"line":9,"prefix":"*","index":4,"text":"set articleRequestBody.article.description = dataGenerator.getRandomArticleValues().description"},"stepLog":"21:03:30.011 classpath:conduitApp\/feature\/Articles.feature:9\n* set articleRequestBody.article.description = dataGenerator.getRandomArticleValues().description\n>> classpath:conduitApp\/feature\/Articles.feature:30\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\nclasspath:conduitApp\/feature\/Articles.feature:8\nclasspath:conduitApp\/feature\/Articles.feature:9\n"},{"result":{"nanos":0,"errorMessage":">> classpath:conduitApp\/feature\/Articles.feature:30\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\nclasspath:conduitApp\/feature\/Articles.feature:8\nclasspath:conduitApp\/feature\/Articles.feature:9\nclasspath:conduitApp\/feature\/Articles.feature:10","millis":0.0,"status":"failed"},"step":{"background":true,"line":10,"prefix":"*","index":5,"text":"set articleRequestBody.article.body = dataGenerator.getRandomArticleValues().body"},"stepLog":"21:03:30.012 classpath:conduitApp\/feature\/Articles.feature:10\n* set articleRequestBody.article.body = dataGenerator.getRandomArticleValues().body\n>> classpath:conduitApp\/feature\/Articles.feature:30\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\nclasspath:conduitApp\/feature\/Articles.feature:8\nclasspath:conduitApp\/feature\/Articles.feature:9\nclasspath:conduitApp\/feature\/Articles.feature:10\n"},{"result":{"nanos":0,"errorMessage":">> classpath:conduitApp\/feature\/Articles.feature:30\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\nclasspath:conduitApp\/feature\/Articles.feature:8\nclasspath:conduitApp\/feature\/Articles.feature:9\nclasspath:conduitApp\/feature\/Articles.feature:10\nclasspath:conduitApp\/feature\/Articles.feature:32","millis":0.0,"status":"failed"},"step":{"comments":["#Given header Authorization = 'Token ' + token"],"line":32,"prefix":"Given","index":0,"text":"path 'articles'"},"stepLog":"21:03:30.012 classpath:conduitApp\/feature\/Articles.feature:32\nGiven path 'articles'\n>> classpath:conduitApp\/feature\/Articles.feature:30\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\nclasspath:conduitApp\/feature\/Articles.feature:8\nclasspath:conduitApp\/feature\/Articles.feature:9\nclasspath:conduitApp\/feature\/Articles.feature:10\nclasspath:conduitApp\/feature\/Articles.feature:32\n"},{"result":{"nanos":0,"errorMessage":">> classpath:conduitApp\/feature\/Articles.feature:30\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\nclasspath:conduitApp\/feature\/Articles.feature:8\nclasspath:conduitApp\/feature\/Articles.feature:9\nclasspath:conduitApp\/feature\/Articles.feature:10\nclasspath:conduitApp\/feature\/Articles.feature:32\nclasspath:conduitApp\/feature\/Articles.feature:33","millis":0.0,"status":"failed"},"step":{"line":33,"prefix":"And","index":1,"text":"request articleRequestBody"},"stepLog":"21:03:30.014 classpath:conduitApp\/feature\/Articles.feature:33\nAnd request articleRequestBody\n>> classpath:conduitApp\/feature\/Articles.feature:30\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\nclasspath:conduitApp\/feature\/Articles.feature:8\nclasspath:conduitApp\/feature\/Articles.feature:9\nclasspath:conduitApp\/feature\/Articles.feature:10\nclasspath:conduitApp\/feature\/Articles.feature:32\nclasspath:conduitApp\/feature\/Articles.feature:33\n"},{"result":{"nanos":0,"errorMessage":">> classpath:conduitApp\/feature\/Articles.feature:30\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\nclasspath:conduitApp\/feature\/Articles.feature:8\nclasspath:conduitApp\/feature\/Articles.feature:9\nclasspath:conduitApp\/feature\/Articles.feature:10\nclasspath:conduitApp\/feature\/Articles.feature:32\nclasspath:conduitApp\/feature\/Articles.feature:33\nclasspath:conduitApp\/feature\/Articles.feature:34","millis":0.0,"status":"failed"},"step":{"line":34,"prefix":"When","index":2,"text":"method Post"},"stepLog":"21:03:30.014 classpath:conduitApp\/feature\/Articles.feature:34\nWhen method Post\n>> classpath:conduitApp\/feature\/Articles.feature:30\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\nclasspath:conduitApp\/feature\/Articles.feature:8\nclasspath:conduitApp\/feature\/Articles.feature:9\nclasspath:conduitApp\/feature\/Articles.feature:10\nclasspath:conduitApp\/feature\/Articles.feature:32\nclasspath:conduitApp\/feature\/Articles.feature:33\nclasspath:conduitApp\/feature\/Articles.feature:34\n"},{"result":{"nanos":0,"errorMessage":">> classpath:conduitApp\/feature\/Articles.feature:30\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\nclasspath:conduitApp\/feature\/Articles.feature:8\nclasspath:conduitApp\/feature\/Articles.feature:9\nclasspath:conduitApp\/feature\/Articles.feature:10\nclasspath:conduitApp\/feature\/Articles.feature:32\nclasspath:conduitApp\/feature\/Articles.feature:33\nclasspath:conduitApp\/feature\/Articles.feature:34\nclasspath:conduitApp\/feature\/Articles.feature:35","millis":0.0,"status":"failed"},"step":{"line":35,"prefix":"Then","index":3,"text":"status 201"},"stepLog":"21:03:30.014 classpath:conduitApp\/feature\/Articles.feature:35\nThen status 201\n>> classpath:conduitApp\/feature\/Articles.feature:30\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\nclasspath:conduitApp\/feature\/Articles.feature:8\nclasspath:conduitApp\/feature\/Articles.feature:9\nclasspath:conduitApp\/feature\/Articles.feature:10\nclasspath:conduitApp\/feature\/Articles.feature:32\nclasspath:conduitApp\/feature\/Articles.feature:33\nclasspath:conduitApp\/feature\/Articles.feature:34\nclasspath:conduitApp\/feature\/Articles.feature:35\n"},{"result":{"nanos":0,"errorMessage":">> classpath:conduitApp\/feature\/Articles.feature:30\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\nclasspath:conduitApp\/feature\/Articles.feature:8\nclasspath:conduitApp\/feature\/Articles.feature:9\nclasspath:conduitApp\/feature\/Articles.feature:10\nclasspath:conduitApp\/feature\/Articles.feature:32\nclasspath:conduitApp\/feature\/Articles.feature:33\nclasspath:conduitApp\/feature\/Articles.feature:34\nclasspath:conduitApp\/feature\/Articles.feature:35\nclasspath:conduitApp\/feature\/Articles.feature:36","millis":0.0,"status":"failed"},"step":{"line":36,"prefix":"*","index":4,"text":"def articleId = response.article.slug"},"stepLog":"21:03:30.015 classpath:conduitApp\/feature\/Articles.feature:36\n* def articleId = response.article.slug\n>> classpath:conduitApp\/feature\/Articles.feature:30\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\nclasspath:conduitApp\/feature\/Articles.feature:8\nclasspath:conduitApp\/feature\/Articles.feature:9\nclasspath:conduitApp\/feature\/Articles.feature:10\nclasspath:conduitApp\/feature\/Articles.feature:32\nclasspath:conduitApp\/feature\/Articles.feature:33\nclasspath:conduitApp\/feature\/Articles.feature:34\nclasspath:conduitApp\/feature\/Articles.feature:35\nclasspath:conduitApp\/feature\/Articles.feature:36\n"},{"result":{"nanos":0,"errorMessage":">> classpath:conduitApp\/feature\/Articles.feature:30\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\nclasspath:conduitApp\/feature\/Articles.feature:8\nclasspath:conduitApp\/feature\/Articles.feature:9\nclasspath:conduitApp\/feature\/Articles.feature:10\nclasspath:conduitApp\/feature\/Articles.feature:32\nclasspath:conduitApp\/feature\/Articles.feature:33\nclasspath:conduitApp\/feature\/Articles.feature:34\nclasspath:conduitApp\/feature\/Articles.feature:35\nclasspath:conduitApp\/feature\/Articles.feature:36\nclasspath:conduitApp\/feature\/Articles.feature:39","millis":0.0,"status":"failed"},"step":{"comments":["#Given header Authorization = 'Token ' + token"],"line":39,"prefix":"Given","index":5,"text":"params { limit: 10, offset: 0}"},"stepLog":"21:03:30.016 classpath:conduitApp\/feature\/Articles.feature:39\nGiven params { limit: 10, offset: 0}\n>> classpath:conduitApp\/feature\/Articles.feature:30\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\nclasspath:conduitApp\/feature\/Articles.feature:8\nclasspath:conduitApp\/feature\/Articles.feature:9\nclasspath:conduitApp\/feature\/Articles.feature:10\nclasspath:conduitApp\/feature\/Articles.feature:32\nclasspath:conduitApp\/feature\/Articles.feature:33\nclasspath:conduitApp\/feature\/Articles.feature:34\nclasspath:conduitApp\/feature\/Articles.feature:35\nclasspath:conduitApp\/feature\/Articles.feature:36\nclasspath:conduitApp\/feature\/Articles.feature:39\n"},{"result":{"nanos":0,"errorMessage":">> classpath:conduitApp\/feature\/Articles.feature:30\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\nclasspath:conduitApp\/feature\/Articles.feature:8\nclasspath:conduitApp\/feature\/Articles.feature:9\nclasspath:conduitApp\/feature\/Articles.feature:10\nclasspath:conduitApp\/feature\/Articles.feature:32\nclasspath:conduitApp\/feature\/Articles.feature:33\nclasspath:conduitApp\/feature\/Articles.feature:34\nclasspath:conduitApp\/feature\/Articles.feature:35\nclasspath:conduitApp\/feature\/Articles.feature:36\nclasspath:conduitApp\/feature\/Articles.feature:39\nclasspath:conduitApp\/feature\/Articles.feature:40","millis":0.0,"status":"failed"},"step":{"line":40,"prefix":"Given","index":6,"text":"path 'articles'"},"stepLog":"21:03:30.016 classpath:conduitApp\/feature\/Articles.feature:40\nGiven path 'articles'\n>> classpath:conduitApp\/feature\/Articles.feature:30\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\nclasspath:conduitApp\/feature\/Articles.feature:8\nclasspath:conduitApp\/feature\/Articles.feature:9\nclasspath:conduitApp\/feature\/Articles.feature:10\nclasspath:conduitApp\/feature\/Articles.feature:32\nclasspath:conduitApp\/feature\/Articles.feature:33\nclasspath:conduitApp\/feature\/Articles.feature:34\nclasspath:conduitApp\/feature\/Articles.feature:35\nclasspath:conduitApp\/feature\/Articles.feature:36\nclasspath:conduitApp\/feature\/Articles.feature:39\nclasspath:conduitApp\/feature\/Articles.feature:40\n"},{"result":{"nanos":0,"errorMessage":">> classpath:conduitApp\/feature\/Articles.feature:30\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\nclasspath:conduitApp\/feature\/Articles.feature:8\nclasspath:conduitApp\/feature\/Articles.feature:9\nclasspath:conduitApp\/feature\/Articles.feature:10\nclasspath:conduitApp\/feature\/Articles.feature:32\nclasspath:conduitApp\/feature\/Articles.feature:33\nclasspath:conduitApp\/feature\/Articles.feature:34\nclasspath:conduitApp\/feature\/Articles.feature:35\nclasspath:conduitApp\/feature\/Articles.feature:36\nclasspath:conduitApp\/feature\/Articles.feature:39\nclasspath:conduitApp\/feature\/Articles.feature:40\nclasspath:conduitApp\/feature\/Articles.feature:41","millis":0.0,"status":"failed"},"step":{"line":41,"prefix":"When","index":7,"text":"method Get"},"stepLog":"21:03:30.016 classpath:conduitApp\/feature\/Articles.feature:41\nWhen method Get\n>> classpath:conduitApp\/feature\/Articles.feature:30\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\nclasspath:conduitApp\/feature\/Articles.feature:8\nclasspath:conduitApp\/feature\/Articles.feature:9\nclasspath:conduitApp\/feature\/Articles.feature:10\nclasspath:conduitApp\/feature\/Articles.feature:32\nclasspath:conduitApp\/feature\/Articles.feature:33\nclasspath:conduitApp\/feature\/Articles.feature:34\nclasspath:conduitApp\/feature\/Articles.feature:35\nclasspath:conduitApp\/feature\/Articles.feature:36\nclasspath:conduitApp\/feature\/Articles.feature:39\nclasspath:conduitApp\/feature\/Articles.feature:40\nclasspath:conduitApp\/feature\/Articles.feature:41\n"},{"result":{"nanos":0,"errorMessage":">> classpath:conduitApp\/feature\/Articles.feature:30\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\nclasspath:conduitApp\/feature\/Articles.feature:8\nclasspath:conduitApp\/feature\/Articles.feature:9\nclasspath:conduitApp\/feature\/Articles.feature:10\nclasspath:conduitApp\/feature\/Articles.feature:32\nclasspath:conduitApp\/feature\/Articles.feature:33\nclasspath:conduitApp\/feature\/Articles.feature:34\nclasspath:conduitApp\/feature\/Articles.feature:35\nclasspath:conduitApp\/feature\/Articles.feature:36\nclasspath:conduitApp\/feature\/Articles.feature:39\nclasspath:conduitApp\/feature\/Articles.feature:40\nclasspath:conduitApp\/feature\/Articles.feature:41\nclasspath:conduitApp\/feature\/Articles.feature:42","millis":0.0,"status":"failed"},"step":{"line":42,"prefix":"Then","index":8,"text":"status 200"},"stepLog":"21:03:30.017 classpath:conduitApp\/feature\/Articles.feature:42\nThen status 200\n>> classpath:conduitApp\/feature\/Articles.feature:30\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\nclasspath:conduitApp\/feature\/Articles.feature:8\nclasspath:conduitApp\/feature\/Articles.feature:9\nclasspath:conduitApp\/feature\/Articles.feature:10\nclasspath:conduitApp\/feature\/Articles.feature:32\nclasspath:conduitApp\/feature\/Articles.feature:33\nclasspath:conduitApp\/feature\/Articles.feature:34\nclasspath:conduitApp\/feature\/Articles.feature:35\nclasspath:conduitApp\/feature\/Articles.feature:36\nclasspath:conduitApp\/feature\/Articles.feature:39\nclasspath:conduitApp\/feature\/Articles.feature:40\nclasspath:conduitApp\/feature\/Articles.feature:41\nclasspath:conduitApp\/feature\/Articles.feature:42\n"},{"result":{"nanos":0,"errorMessage":">> classpath:conduitApp\/feature\/Articles.feature:30\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\nclasspath:conduitApp\/feature\/Articles.feature:8\nclasspath:conduitApp\/feature\/Articles.feature:9\nclasspath:conduitApp\/feature\/Articles.feature:10\nclasspath:conduitApp\/feature\/Articles.feature:32\nclasspath:conduitApp\/feature\/Articles.feature:33\nclasspath:conduitApp\/feature\/Articles.feature:34\nclasspath:conduitApp\/feature\/Articles.feature:35\nclasspath:conduitApp\/feature\/Articles.feature:36\nclasspath:conduitApp\/feature\/Articles.feature:39\nclasspath:conduitApp\/feature\/Articles.feature:40\nclasspath:conduitApp\/feature\/Articles.feature:41\nclasspath:conduitApp\/feature\/Articles.feature:42\nclasspath:conduitApp\/feature\/Articles.feature:43","millis":0.0,"status":"failed"},"step":{"line":43,"prefix":"And","index":9,"text":"match response.articles[0].title == articleRequestBody.article.title"},"stepLog":"21:03:30.017 classpath:conduitApp\/feature\/Articles.feature:43\nAnd match response.articles[0].title == articleRequestBody.article.title\n>> classpath:conduitApp\/feature\/Articles.feature:30\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\nclasspath:conduitApp\/feature\/Articles.feature:8\nclasspath:conduitApp\/feature\/Articles.feature:9\nclasspath:conduitApp\/feature\/Articles.feature:10\nclasspath:conduitApp\/feature\/Articles.feature:32\nclasspath:conduitApp\/feature\/Articles.feature:33\nclasspath:conduitApp\/feature\/Articles.feature:34\nclasspath:conduitApp\/feature\/Articles.feature:35\nclasspath:conduitApp\/feature\/Articles.feature:36\nclasspath:conduitApp\/feature\/Articles.feature:39\nclasspath:conduitApp\/feature\/Articles.feature:40\nclasspath:conduitApp\/feature\/Articles.feature:41\nclasspath:conduitApp\/feature\/Articles.feature:42\nclasspath:conduitApp\/feature\/Articles.feature:43\n"},{"result":{"nanos":0,"errorMessage":">> classpath:conduitApp\/feature\/Articles.feature:30\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\nclasspath:conduitApp\/feature\/Articles.feature:8\nclasspath:conduitApp\/feature\/Articles.feature:9\nclasspath:conduitApp\/feature\/Articles.feature:10\nclasspath:conduitApp\/feature\/Articles.feature:32\nclasspath:conduitApp\/feature\/Articles.feature:33\nclasspath:conduitApp\/feature\/Articles.feature:34\nclasspath:conduitApp\/feature\/Articles.feature:35\nclasspath:conduitApp\/feature\/Articles.feature:36\nclasspath:conduitApp\/feature\/Articles.feature:39\nclasspath:conduitApp\/feature\/Articles.feature:40\nclasspath:conduitApp\/feature\/Articles.feature:41\nclasspath:conduitApp\/feature\/Articles.feature:42\nclasspath:conduitApp\/feature\/Articles.feature:43\nclasspath:conduitApp\/feature\/Articles.feature:46","millis":0.0,"status":"failed"},"step":{"comments":["#Given header Authorization = 'Token ' + token"],"line":46,"prefix":"Given","index":10,"text":"path 'articles', articleId"},"stepLog":"21:03:30.017 classpath:conduitApp\/feature\/Articles.feature:46\nGiven path 'articles', articleId\n>> classpath:conduitApp\/feature\/Articles.feature:30\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\nclasspath:conduitApp\/feature\/Articles.feature:8\nclasspath:conduitApp\/feature\/Articles.feature:9\nclasspath:conduitApp\/feature\/Articles.feature:10\nclasspath:conduitApp\/feature\/Articles.feature:32\nclasspath:conduitApp\/feature\/Articles.feature:33\nclasspath:conduitApp\/feature\/Articles.feature:34\nclasspath:conduitApp\/feature\/Articles.feature:35\nclasspath:conduitApp\/feature\/Articles.feature:36\nclasspath:conduitApp\/feature\/Articles.feature:39\nclasspath:conduitApp\/feature\/Articles.feature:40\nclasspath:conduitApp\/feature\/Articles.feature:41\nclasspath:conduitApp\/feature\/Articles.feature:42\nclasspath:conduitApp\/feature\/Articles.feature:43\nclasspath:conduitApp\/feature\/Articles.feature:46\n"},{"result":{"nanos":0,"errorMessage":">> classpath:conduitApp\/feature\/Articles.feature:30\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\nclasspath:conduitApp\/feature\/Articles.feature:8\nclasspath:conduitApp\/feature\/Articles.feature:9\nclasspath:conduitApp\/feature\/Articles.feature:10\nclasspath:conduitApp\/feature\/Articles.feature:32\nclasspath:conduitApp\/feature\/Articles.feature:33\nclasspath:conduitApp\/feature\/Articles.feature:34\nclasspath:conduitApp\/feature\/Articles.feature:35\nclasspath:conduitApp\/feature\/Articles.feature:36\nclasspath:conduitApp\/feature\/Articles.feature:39\nclasspath:conduitApp\/feature\/Articles.feature:40\nclasspath:conduitApp\/feature\/Articles.feature:41\nclasspath:conduitApp\/feature\/Articles.feature:42\nclasspath:conduitApp\/feature\/Articles.feature:43\nclasspath:conduitApp\/feature\/Articles.feature:46\nclasspath:conduitApp\/feature\/Articles.feature:47","millis":0.0,"status":"failed"},"step":{"line":47,"prefix":"When","index":11,"text":"method delete"},"stepLog":"21:03:30.017 classpath:conduitApp\/feature\/Articles.feature:47\nWhen method delete\n>> classpath:conduitApp\/feature\/Articles.feature:30\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\nclasspath:conduitApp\/feature\/Articles.feature:8\nclasspath:conduitApp\/feature\/Articles.feature:9\nclasspath:conduitApp\/feature\/Articles.feature:10\nclasspath:conduitApp\/feature\/Articles.feature:32\nclasspath:conduitApp\/feature\/Articles.feature:33\nclasspath:conduitApp\/feature\/Articles.feature:34\nclasspath:conduitApp\/feature\/Articles.feature:35\nclasspath:conduitApp\/feature\/Articles.feature:36\nclasspath:conduitApp\/feature\/Articles.feature:39\nclasspath:conduitApp\/feature\/Articles.feature:40\nclasspath:conduitApp\/feature\/Articles.feature:41\nclasspath:conduitApp\/feature\/Articles.feature:42\nclasspath:conduitApp\/feature\/Articles.feature:43\nclasspath:conduitApp\/feature\/Articles.feature:46\nclasspath:conduitApp\/feature\/Articles.feature:47\n"},{"result":{"nanos":0,"errorMessage":">> classpath:conduitApp\/feature\/Articles.feature:30\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\nclasspath:conduitApp\/feature\/Articles.feature:8\nclasspath:conduitApp\/feature\/Articles.feature:9\nclasspath:conduitApp\/feature\/Articles.feature:10\nclasspath:conduitApp\/feature\/Articles.feature:32\nclasspath:conduitApp\/feature\/Articles.feature:33\nclasspath:conduitApp\/feature\/Articles.feature:34\nclasspath:conduitApp\/feature\/Articles.feature:35\nclasspath:conduitApp\/feature\/Articles.feature:36\nclasspath:conduitApp\/feature\/Articles.feature:39\nclasspath:conduitApp\/feature\/Articles.feature:40\nclasspath:conduitApp\/feature\/Articles.feature:41\nclasspath:conduitApp\/feature\/Articles.feature:42\nclasspath:conduitApp\/feature\/Articles.feature:43\nclasspath:conduitApp\/feature\/Articles.feature:46\nclasspath:conduitApp\/feature\/Articles.feature:47\nclasspath:conduitApp\/feature\/Articles.feature:48","millis":0.0,"status":"failed"},"step":{"line":48,"prefix":"Then","index":12,"text":"status 204"},"stepLog":"21:03:30.017 classpath:conduitApp\/feature\/Articles.feature:48\nThen status 204\n>> classpath:conduitApp\/feature\/Articles.feature:30\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\nclasspath:conduitApp\/feature\/Articles.feature:8\nclasspath:conduitApp\/feature\/Articles.feature:9\nclasspath:conduitApp\/feature\/Articles.feature:10\nclasspath:conduitApp\/feature\/Articles.feature:32\nclasspath:conduitApp\/feature\/Articles.feature:33\nclasspath:conduitApp\/feature\/Articles.feature:34\nclasspath:conduitApp\/feature\/Articles.feature:35\nclasspath:conduitApp\/feature\/Articles.feature:36\nclasspath:conduitApp\/feature\/Articles.feature:39\nclasspath:conduitApp\/feature\/Articles.feature:40\nclasspath:conduitApp\/feature\/Articles.feature:41\nclasspath:conduitApp\/feature\/Articles.feature:42\nclasspath:conduitApp\/feature\/Articles.feature:43\nclasspath:conduitApp\/feature\/Articles.feature:46\nclasspath:conduitApp\/feature\/Articles.feature:47\nclasspath:conduitApp\/feature\/Articles.feature:48\n"},{"result":{"nanos":0,"errorMessage":">> classpath:conduitApp\/feature\/Articles.feature:30\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\nclasspath:conduitApp\/feature\/Articles.feature:8\nclasspath:conduitApp\/feature\/Articles.feature:9\nclasspath:conduitApp\/feature\/Articles.feature:10\nclasspath:conduitApp\/feature\/Articles.feature:32\nclasspath:conduitApp\/feature\/Articles.feature:33\nclasspath:conduitApp\/feature\/Articles.feature:34\nclasspath:conduitApp\/feature\/Articles.feature:35\nclasspath:conduitApp\/feature\/Articles.feature:36\nclasspath:conduitApp\/feature\/Articles.feature:39\nclasspath:conduitApp\/feature\/Articles.feature:40\nclasspath:conduitApp\/feature\/Articles.feature:41\nclasspath:conduitApp\/feature\/Articles.feature:42\nclasspath:conduitApp\/feature\/Articles.feature:43\nclasspath:conduitApp\/feature\/Articles.feature:46\nclasspath:conduitApp\/feature\/Articles.feature:47\nclasspath:conduitApp\/feature\/Articles.feature:48\nclasspath:conduitApp\/feature\/Articles.feature:50","millis":0.0,"status":"failed"},"step":{"line":50,"prefix":"Given","index":13,"text":"params { limit: 10, offset: 0}"},"stepLog":"21:03:30.017 classpath:conduitApp\/feature\/Articles.feature:50\nGiven params { limit: 10, offset: 0}\n>> classpath:conduitApp\/feature\/Articles.feature:30\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\nclasspath:conduitApp\/feature\/Articles.feature:8\nclasspath:conduitApp\/feature\/Articles.feature:9\nclasspath:conduitApp\/feature\/Articles.feature:10\nclasspath:conduitApp\/feature\/Articles.feature:32\nclasspath:conduitApp\/feature\/Articles.feature:33\nclasspath:conduitApp\/feature\/Articles.feature:34\nclasspath:conduitApp\/feature\/Articles.feature:35\nclasspath:conduitApp\/feature\/Articles.feature:36\nclasspath:conduitApp\/feature\/Articles.feature:39\nclasspath:conduitApp\/feature\/Articles.feature:40\nclasspath:conduitApp\/feature\/Articles.feature:41\nclasspath:conduitApp\/feature\/Articles.feature:42\nclasspath:conduitApp\/feature\/Articles.feature:43\nclasspath:conduitApp\/feature\/Articles.feature:46\nclasspath:conduitApp\/feature\/Articles.feature:47\nclasspath:conduitApp\/feature\/Articles.feature:48\nclasspath:conduitApp\/feature\/Articles.feature:50\n"},{"result":{"nanos":0,"errorMessage":">> classpath:conduitApp\/feature\/Articles.feature:30\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\nclasspath:conduitApp\/feature\/Articles.feature:8\nclasspath:conduitApp\/feature\/Articles.feature:9\nclasspath:conduitApp\/feature\/Articles.feature:10\nclasspath:conduitApp\/feature\/Articles.feature:32\nclasspath:conduitApp\/feature\/Articles.feature:33\nclasspath:conduitApp\/feature\/Articles.feature:34\nclasspath:conduitApp\/feature\/Articles.feature:35\nclasspath:conduitApp\/feature\/Articles.feature:36\nclasspath:conduitApp\/feature\/Articles.feature:39\nclasspath:conduitApp\/feature\/Articles.feature:40\nclasspath:conduitApp\/feature\/Articles.feature:41\nclasspath:conduitApp\/feature\/Articles.feature:42\nclasspath:conduitApp\/feature\/Articles.feature:43\nclasspath:conduitApp\/feature\/Articles.feature:46\nclasspath:conduitApp\/feature\/Articles.feature:47\nclasspath:conduitApp\/feature\/Articles.feature:48\nclasspath:conduitApp\/feature\/Articles.feature:50\nclasspath:conduitApp\/feature\/Articles.feature:51","millis":0.0,"status":"failed"},"step":{"line":51,"prefix":"Given","index":14,"text":"path 'articles'"},"stepLog":"21:03:30.018 classpath:conduitApp\/feature\/Articles.feature:51\nGiven path 'articles'\n>> classpath:conduitApp\/feature\/Articles.feature:30\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\nclasspath:conduitApp\/feature\/Articles.feature:8\nclasspath:conduitApp\/feature\/Articles.feature:9\nclasspath:conduitApp\/feature\/Articles.feature:10\nclasspath:conduitApp\/feature\/Articles.feature:32\nclasspath:conduitApp\/feature\/Articles.feature:33\nclasspath:conduitApp\/feature\/Articles.feature:34\nclasspath:conduitApp\/feature\/Articles.feature:35\nclasspath:conduitApp\/feature\/Articles.feature:36\nclasspath:conduitApp\/feature\/Articles.feature:39\nclasspath:conduitApp\/feature\/Articles.feature:40\nclasspath:conduitApp\/feature\/Articles.feature:41\nclasspath:conduitApp\/feature\/Articles.feature:42\nclasspath:conduitApp\/feature\/Articles.feature:43\nclasspath:conduitApp\/feature\/Articles.feature:46\nclasspath:conduitApp\/feature\/Articles.feature:47\nclasspath:conduitApp\/feature\/Articles.feature:48\nclasspath:conduitApp\/feature\/Articles.feature:50\nclasspath:conduitApp\/feature\/Articles.feature:51\n"},{"result":{"nanos":0,"errorMessage":">> classpath:conduitApp\/feature\/Articles.feature:30\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\nclasspath:conduitApp\/feature\/Articles.feature:8\nclasspath:conduitApp\/feature\/Articles.feature:9\nclasspath:conduitApp\/feature\/Articles.feature:10\nclasspath:conduitApp\/feature\/Articles.feature:32\nclasspath:conduitApp\/feature\/Articles.feature:33\nclasspath:conduitApp\/feature\/Articles.feature:34\nclasspath:conduitApp\/feature\/Articles.feature:35\nclasspath:conduitApp\/feature\/Articles.feature:36\nclasspath:conduitApp\/feature\/Articles.feature:39\nclasspath:conduitApp\/feature\/Articles.feature:40\nclasspath:conduitApp\/feature\/Articles.feature:41\nclasspath:conduitApp\/feature\/Articles.feature:42\nclasspath:conduitApp\/feature\/Articles.feature:43\nclasspath:conduitApp\/feature\/Articles.feature:46\nclasspath:conduitApp\/feature\/Articles.feature:47\nclasspath:conduitApp\/feature\/Articles.feature:48\nclasspath:conduitApp\/feature\/Articles.feature:50\nclasspath:conduitApp\/feature\/Articles.feature:51\nclasspath:conduitApp\/feature\/Articles.feature:52","millis":0.0,"status":"failed"},"step":{"line":52,"prefix":"When","index":15,"text":"method Get"},"stepLog":"21:03:30.018 classpath:conduitApp\/feature\/Articles.feature:52\nWhen method Get\n>> classpath:conduitApp\/feature\/Articles.feature:30\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\nclasspath:conduitApp\/feature\/Articles.feature:8\nclasspath:conduitApp\/feature\/Articles.feature:9\nclasspath:conduitApp\/feature\/Articles.feature:10\nclasspath:conduitApp\/feature\/Articles.feature:32\nclasspath:conduitApp\/feature\/Articles.feature:33\nclasspath:conduitApp\/feature\/Articles.feature:34\nclasspath:conduitApp\/feature\/Articles.feature:35\nclasspath:conduitApp\/feature\/Articles.feature:36\nclasspath:conduitApp\/feature\/Articles.feature:39\nclasspath:conduitApp\/feature\/Articles.feature:40\nclasspath:conduitApp\/feature\/Articles.feature:41\nclasspath:conduitApp\/feature\/Articles.feature:42\nclasspath:conduitApp\/feature\/Articles.feature:43\nclasspath:conduitApp\/feature\/Articles.feature:46\nclasspath:conduitApp\/feature\/Articles.feature:47\nclasspath:conduitApp\/feature\/Articles.feature:48\nclasspath:conduitApp\/feature\/Articles.feature:50\nclasspath:conduitApp\/feature\/Articles.feature:51\nclasspath:conduitApp\/feature\/Articles.feature:52\n"},{"result":{"nanos":0,"errorMessage":">> classpath:conduitApp\/feature\/Articles.feature:30\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\nclasspath:conduitApp\/feature\/Articles.feature:8\nclasspath:conduitApp\/feature\/Articles.feature:9\nclasspath:conduitApp\/feature\/Articles.feature:10\nclasspath:conduitApp\/feature\/Articles.feature:32\nclasspath:conduitApp\/feature\/Articles.feature:33\nclasspath:conduitApp\/feature\/Articles.feature:34\nclasspath:conduitApp\/feature\/Articles.feature:35\nclasspath:conduitApp\/feature\/Articles.feature:36\nclasspath:conduitApp\/feature\/Articles.feature:39\nclasspath:conduitApp\/feature\/Articles.feature:40\nclasspath:conduitApp\/feature\/Articles.feature:41\nclasspath:conduitApp\/feature\/Articles.feature:42\nclasspath:conduitApp\/feature\/Articles.feature:43\nclasspath:conduitApp\/feature\/Articles.feature:46\nclasspath:conduitApp\/feature\/Articles.feature:47\nclasspath:conduitApp\/feature\/Articles.feature:48\nclasspath:conduitApp\/feature\/Articles.feature:50\nclasspath:conduitApp\/feature\/Articles.feature:51\nclasspath:conduitApp\/feature\/Articles.feature:52\nclasspath:conduitApp\/feature\/Articles.feature:53","millis":0.0,"status":"failed"},"step":{"line":53,"prefix":"Then","index":16,"text":"status 200"},"stepLog":"21:03:30.018 classpath:conduitApp\/feature\/Articles.feature:53\nThen status 200\n>> classpath:conduitApp\/feature\/Articles.feature:30\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\nclasspath:conduitApp\/feature\/Articles.feature:8\nclasspath:conduitApp\/feature\/Articles.feature:9\nclasspath:conduitApp\/feature\/Articles.feature:10\nclasspath:conduitApp\/feature\/Articles.feature:32\nclasspath:conduitApp\/feature\/Articles.feature:33\nclasspath:conduitApp\/feature\/Articles.feature:34\nclasspath:conduitApp\/feature\/Articles.feature:35\nclasspath:conduitApp\/feature\/Articles.feature:36\nclasspath:conduitApp\/feature\/Articles.feature:39\nclasspath:conduitApp\/feature\/Articles.feature:40\nclasspath:conduitApp\/feature\/Articles.feature:41\nclasspath:conduitApp\/feature\/Articles.feature:42\nclasspath:conduitApp\/feature\/Articles.feature:43\nclasspath:conduitApp\/feature\/Articles.feature:46\nclasspath:conduitApp\/feature\/Articles.feature:47\nclasspath:conduitApp\/feature\/Articles.feature:48\nclasspath:conduitApp\/feature\/Articles.feature:50\nclasspath:conduitApp\/feature\/Articles.feature:51\nclasspath:conduitApp\/feature\/Articles.feature:52\nclasspath:conduitApp\/feature\/Articles.feature:53\n"},{"result":{"nanos":0,"errorMessage":">> classpath:conduitApp\/feature\/Articles.feature:30\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\nclasspath:conduitApp\/feature\/Articles.feature:8\nclasspath:conduitApp\/feature\/Articles.feature:9\nclasspath:conduitApp\/feature\/Articles.feature:10\nclasspath:conduitApp\/feature\/Articles.feature:32\nclasspath:conduitApp\/feature\/Articles.feature:33\nclasspath:conduitApp\/feature\/Articles.feature:34\nclasspath:conduitApp\/feature\/Articles.feature:35\nclasspath:conduitApp\/feature\/Articles.feature:36\nclasspath:conduitApp\/feature\/Articles.feature:39\nclasspath:conduitApp\/feature\/Articles.feature:40\nclasspath:conduitApp\/feature\/Articles.feature:41\nclasspath:conduitApp\/feature\/Articles.feature:42\nclasspath:conduitApp\/feature\/Articles.feature:43\nclasspath:conduitApp\/feature\/Articles.feature:46\nclasspath:conduitApp\/feature\/Articles.feature:47\nclasspath:conduitApp\/feature\/Articles.feature:48\nclasspath:conduitApp\/feature\/Articles.feature:50\nclasspath:conduitApp\/feature\/Articles.feature:51\nclasspath:conduitApp\/feature\/Articles.feature:52\nclasspath:conduitApp\/feature\/Articles.feature:53\nclasspath:conduitApp\/feature\/Articles.feature:54","millis":0.0,"status":"failed"},"step":{"line":54,"prefix":"And","index":17,"text":"match response.articles[0].title != articleRequestBody.article.title"},"stepLog":"21:03:30.018 classpath:conduitApp\/feature\/Articles.feature:54\nAnd match response.articles[0].title != articleRequestBody.article.title\n>> classpath:conduitApp\/feature\/Articles.feature:30\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\nclasspath:conduitApp\/feature\/Articles.feature:8\nclasspath:conduitApp\/feature\/Articles.feature:9\nclasspath:conduitApp\/feature\/Articles.feature:10\nclasspath:conduitApp\/feature\/Articles.feature:32\nclasspath:conduitApp\/feature\/Articles.feature:33\nclasspath:conduitApp\/feature\/Articles.feature:34\nclasspath:conduitApp\/feature\/Articles.feature:35\nclasspath:conduitApp\/feature\/Articles.feature:36\nclasspath:conduitApp\/feature\/Articles.feature:39\nclasspath:conduitApp\/feature\/Articles.feature:40\nclasspath:conduitApp\/feature\/Articles.feature:41\nclasspath:conduitApp\/feature\/Articles.feature:42\nclasspath:conduitApp\/feature\/Articles.feature:43\nclasspath:conduitApp\/feature\/Articles.feature:46\nclasspath:conduitApp\/feature\/Articles.feature:47\nclasspath:conduitApp\/feature\/Articles.feature:48\nclasspath:conduitApp\/feature\/Articles.feature:50\nclasspath:conduitApp\/feature\/Articles.feature:51\nclasspath:conduitApp\/feature\/Articles.feature:52\nclasspath:conduitApp\/feature\/Articles.feature:53\nclasspath:conduitApp\/feature\/Articles.feature:54\n"}],"line":30,"description":"","durationMillis":0.0,"failed":true,"error":">> classpath:conduitApp\/feature\/Articles.feature:30\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/Articles.feature:5\nclasspath:conduitApp\/feature\/Articles.feature:6\nclasspath:conduitApp\/feature\/Articles.feature:7\nclasspath:conduitApp\/feature\/Articles.feature:8\nclasspath:conduitApp\/feature\/Articles.feature:9\nclasspath:conduitApp\/feature\/Articles.feature:10\nclasspath:conduitApp\/feature\/Articles.feature:32\nclasspath:conduitApp\/feature\/Articles.feature:33\nclasspath:conduitApp\/feature\/Articles.feature:34\nclasspath:conduitApp\/feature\/Articles.feature:35\nclasspath:conduitApp\/feature\/Articles.feature:36\nclasspath:conduitApp\/feature\/Articles.feature:39\nclasspath:conduitApp\/feature\/Articles.feature:40\nclasspath:conduitApp\/feature\/Articles.feature:41\nclasspath:conduitApp\/feature\/Articles.feature:42\nclasspath:conduitApp\/feature\/Articles.feature:43\nclasspath:conduitApp\/feature\/Articles.feature:46\nclasspath:conduitApp\/feature\/Articles.feature:47\nclasspath:conduitApp\/feature\/Articles.feature:48\nclasspath:conduitApp\/feature\/Articles.feature:50\nclasspath:conduitApp\/feature\/Articles.feature:51\nclasspath:conduitApp\/feature\/Articles.feature:52\nclasspath:conduitApp\/feature\/Articles.feature:53\nclasspath:conduitApp\/feature\/Articles.feature:54","executorName":"main","name":"Create and delete article","startTime":1704931409997,"refId":"[2:30]","endTime":1704931410018,"exampleIndex":-1}],"callDepth":0,"name":"articles","description":"","resultDate":"2024-01-10 09:03:30 PM","durationMillis":0.0,"passedCount":0}