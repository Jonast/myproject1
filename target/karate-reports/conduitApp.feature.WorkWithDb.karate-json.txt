{"failedCount":1,"prefixedPath":"classpath:conduitApp\/feature\/WorkWithDb.feature","packageQualifiedName":"conduitApp.feature.WorkWithDb","loopIndex":-1,"relativePath":"conduitApp\/feature\/WorkWithDb.feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":0,"errorMessage":">> classpath:conduitApp\/feature\/WorkWithDb.feature:9\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/WorkWithDb.feature:6","millis":0.0,"status":"failed"},"step":{"background":true,"line":6,"prefix":"*","index":0,"text":"def dbHandler = Java.type('helpers.DbHandler')"},"stepLog":"21:03:33.837 karate.env system property was: null \n21:03:33.839 callSingle() cached result is an exception\n21:03:33.841 classpath:conduitApp\/feature\/WorkWithDb.feature:6\n* def dbHandler = Java.type('helpers.DbHandler')\n>> classpath:conduitApp\/feature\/WorkWithDb.feature:9\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/WorkWithDb.feature:6\n"},{"result":{"nanos":0,"errorMessage":">> classpath:conduitApp\/feature\/WorkWithDb.feature:9\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/WorkWithDb.feature:6\nclasspath:conduitApp\/feature\/WorkWithDb.feature:10","millis":0.0,"status":"failed"},"step":{"line":10,"prefix":"*","index":0,"text":"eval dbHandler.addNewProduct(\"AA\")"},"stepLog":"21:03:33.841 classpath:conduitApp\/feature\/WorkWithDb.feature:10\n* eval dbHandler.addNewProduct(\"AA\")\n>> classpath:conduitApp\/feature\/WorkWithDb.feature:9\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/WorkWithDb.feature:6\nclasspath:conduitApp\/feature\/WorkWithDb.feature:10\n"}],"line":9,"description":"","durationMillis":0.0,"failed":true,"error":">> classpath:conduitApp\/feature\/WorkWithDb.feature:9\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 757, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:234)\n- <js>.fn(Unnamed:22)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:230)\n- com.intuit.karate.core.ScenarioEngine.executeJsValue(ScenarioEngine.java:1244)\n- com.intuit.karate.core.ScenarioEngine.executeFunction(ScenarioEngine.java:1227)\n- com.intuit.karate.core.ScenarioEngine.getOrEvalAsMap(ScenarioEngine.java:1216)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:291)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:369)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:395)\n\nclasspath:conduitApp\/feature\/WorkWithDb.feature:6\nclasspath:conduitApp\/feature\/WorkWithDb.feature:10","tags":["debugi"],"executorName":"main","name":"Seed database with a new job","startTime":1704931413834,"refId":"[1:9]","endTime":1704931413841,"exampleIndex":-1}],"callDepth":0,"name":"Work with DB","description":"","resultDate":"2024-01-10 09:03:33 PM","durationMillis":0.0,"passedCount":0}